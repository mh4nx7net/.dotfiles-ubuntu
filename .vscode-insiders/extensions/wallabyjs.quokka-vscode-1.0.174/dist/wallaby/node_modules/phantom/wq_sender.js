// Generated by CoffeeScript 1.7.1
(function() {
  var dnode, http, onSignal, phanta, shoe, spawn, startPhantomProcess, wrap,
    __slice = [].slice;

  dnode = require('dnode');

  http = require('http');

  shoe = require('shoe');

  spawn = require('win-spawn');

  phanta = [];

  startPhantomProcess = function(binary, port, hostname, args) {
    return spawn(binary, args.concat([__dirname + '/shim.js', port, hostname]));
  };

  onSignal = function() {
    var phantom, _i, _len;
    for (_i = 0, _len = phanta.length; _i < _len; _i++) {
      phantom = phanta[_i];
      phantom.exit();
    }
    return process.exit();
  };

  process.on('exit', function() {
    var phantom, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = phanta.length; _i < _len; _i++) {
      phantom = phanta[_i];
      _results.push(phantom.exit());
    }
    return _results;
  });

  process.on('SIGINT', onSignal);

  process.on('SIGTERM', onSignal);

  wrap = function(ph) {
    ph.callback = function(fn) {
      return '__phantomCallback__' + fn.toString();
    };
    ph._createPage = ph.createPage;
    return ph.createPage = function(cb) {
      return ph._createPage(function(page) {
        page._evaluate = page.evaluate;
        page.evaluate = function() {
          var args, cb, fn;
          fn = arguments[0], cb = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
          return page._evaluate.apply(page, [fn.toString(), cb].concat(args));
        };
        page._onResourceRequested = page.onResourceRequested;
        page.onResourceRequested = function() {
          var args, cb, fn;
          fn = arguments[0], cb = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
          return page._onResourceRequested.apply(page, [fn.toString(), cb].concat(args));
        };
        return cb(page);
      });
    };
  };

  module.exports = {
    create: function() {
      var arg, args, cb, httpServer, key, options, phantom, ps, sock, value, _i, _len, _ref;
      args = [];
      options = {};
      for (_i = 0, _len = arguments.length; _i < _len; _i++) {
        arg = arguments[_i];
        switch (typeof arg) {
          case 'function':
            cb = arg;
            break;
          case 'string':
            args.push(arg);
            break;
          case 'object':
            options = arg;
        }
      }
      if (typeof options.parameters === 'object') {
        _ref = options.parameters;
        for (key in _ref) {
          value = _ref[key];
          args.push('--' + key + '=' + value);
        }
      }
      if (options.path == null) {
        options.path = '';
      }
      if (options.binary == null) {
        options.binary = options.path + 'phantomjs';
      }
      if (options.port == null) {
        options.port = 0;
      }
      if (options.hostname == null) {
        options.hostname = 'localhost';
      }
      if (options.dnodeOpts == null) {
        options.dnodeOpts = {};
      }
      ps = null;
      phantom = null;
      httpServer = http.createServer();
      httpServer.listen(options.port, options.hostname);
      httpServer.on('listening', function() {
        var hostname, port;
        port = httpServer.address().port;
        hostname = httpServer.address().address;
        ps = startPhantomProcess(options.binary, port, hostname, args);
        ps.stdout.on('data', options.onStdout || function(data) {
          return console.log("phantom stdout: " + data);
        });
        ps.stderr.on('data', options.onStderr || function(data) {
          return module.exports.stderrHandler(data.toString('utf8'));
        });
        ps.on('error', function(err) {
          httpServer.close();
          if ((err != null ? err.code : void 0) === 'ENOENT') {
            return console.error("phantomjs-node: You don't have 'phantomjs' installed");
          } else {
            throw err;
          }
        });
        return ps.on('exit', function(code, signal) {
          var p;
          httpServer.close();
          if (phantom) {
            if (typeof phantom.onExit === "function") {
              phantom.onExit();
            }
            phanta = (function() {
              var _j, _len1, _results;
              _results = [];
              for (_j = 0, _len1 = phanta.length; _j < _len1; _j++) {
                p = phanta[_j];
                if (p !== phantom) {
                  _results.push(p);
                }
              }
              return _results;
            })();
          }
          if (options.onExit) {
            return options.onExit(code, signal);
          } else {
            console.assert(signal == null, "signal killed phantomjs: " + signal);
            return console.assert(code === 0, "abnormal phantomjs exit code: " + code);
          }
        });
      });
      sock = shoe(function(stream) {
        var d;
        d = dnode({}, options.dnodeOpts);
        d.on('remote', function(phantom) {
          wrap(phantom);
          phantom.process = ps;
          phanta.push(phantom);
          return typeof cb === "function" ? cb(phantom) : void 0;
        });
        d.pipe(stream);
        return stream.pipe(d);
      });
      return sock.install(httpServer, '/dnode');
    },
    stderrHandler: function(message) {
      if (message.match(/(No such method.*socketSentData)|(CoreText performance note)/)) {
        return;
      }
      return console.warn("phantom stderr: " + message);
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,IWZ1bmN0aW9uIGUodCxuLGkpe2Z1bmN0aW9uIGEocixsKXtpZighbltyXSl7aWYoIXRbcl0pe3ZhciBzPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFsJiZzKXJldHVybiBzKHIsITApO2lmKG8pcmV0dXJuIG8ociwhMCk7dmFyIHA9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrcisiJyIpO3Rocm93IHAuY29kZT0iTU9EVUxFX05PVF9GT1VORCIscH12YXIgYz1uW3JdPXtleHBvcnRzOnt9fTt0W3JdWzBdLmNhbGwoYy5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbcl1bMV1bZV07cmV0dXJuIGEobj9uOmUpfSxjLGMuZXhwb3J0cyxlLHQsbixpKX1yZXR1cm4gbltyXS5leHBvcnRzfXZhciBvPSJmdW5jdGlvbiI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO21vZHVsZS5leHBvcnRzPWEoaVswXSl9KHsxOltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWdsb2JhbC5EYXRlO2lmKCJmdW5jdGlvbiBEYXRlKCkgeyBbbmF0aXZlIGNvZGVdIH0iIT09aS50b1N0cmluZygpfHwiZnVuY3Rpb24gdG9TdHJpbmcoKSB7IFtuYXRpdmUgY29kZV0gfSIhPT1pLnRvU3RyaW5nLnRvU3RyaW5nKCkpcmV0dXJuIHZvaWQodC5leHBvcnRzPXtjcmVhdGU6ZnVuY3Rpb24oKXt9fSk7dmFyIGE9ZSgicGF0aCIpLG89ZnVuY3Rpb24odCl7dmFyIG4saT1lKCIuL2V4dGVuc2lvbi91aS9zZXJ2aWNlIik7aWYodC5fbW9kZWwpbj10Ll9tb2RlbDtlbHNle3ZhciBhPWUoIi4vZXh0ZW5zaW9uL3NlcnZlci9tb2RlbCIpO249bmV3IGEoe2ZpbGVJZEJ5UGF0aDpmdW5jdGlvbihlKXtyZXR1cm4gdC5pZEJ5UGF0aChlKX0scHJvamVjdDp0fSl9dC5fdWlTZXJ2aWNlPW5ldyBpKG4pLHQuX3VpU2VydmljZS5vbigibWVzc2FnZSIsZnVuY3Rpb24oZSl7cmV0dXJuIm5hdmlnYXRpb25SZXF1ZXN0ZWQiPT09ZS50eXBlJiZ0LmVtaXQoIm1lc3NhZ2UiLGUpfSl9O3QuZXhwb3J0cz17Y3JlYXRlOmZ1bmN0aW9uKHQsbil7aWYobil7aWYodC5leHBpcnlEYXRlKXRyeXt2YXIgcj10LmV4cGlyeURhdGUuc3BsaXQoIi0iKSxsPW5ldyBpKHJbMV0rIi8iK3JbMF0rIi8iK3JbMl0pO2wuc2V0RGF0ZShsLmdldERhdGUoKSsxKTt2YXIgcz1uZXcgaSgxNTQ0NjYxMjE4MzgwKTtpZihzLnNldEhvdXJzKDAsMCwwLDApLCFwcm9jZXNzLmVudi5xdW9ra2EmJnM+bHx8cHJvY2Vzcy5lbnYucXVva2thJiZ0LmludmFsaWRWZXJzaW9uKXt2YXIgcD1wcm9jZXNzLmVudi5xdW9ra2E/IlF1b2trYS5qcyAnUHJvJyI6IndhbGxhYnkuanMiLGM9cHJvY2Vzcy5lbnYucXVva2thPyJodHRwczovL3F1b2trYWpzLmNvbS9wcm8iOiJodHRwczovL3dhbGxhYnlqcy5jb20vbGljZW5zZS8iO3JldHVybiBRLnJlamVjdCh7bWVzc2FnZToiVGhlIGluc3RhbGxlZCAiK3ArIiB2ZXJzaW9uIGlzIG5vdCBjb3ZlcmVkIGJ5IHlvdXIgY3VycmVudCBsaWNlbnNlLlxuUGxlYXNlIHZpc2l0IG91ciB3ZWJzaXRlIHRvIHVwZ3JhZGUgeW91ciBsaWNlbnNlOiAiK2MrIi4iLnNwbGl0KCIiKS5yZXZlcnNlKCkuam9pbigiIiksbm9EZXRhaWxzOiEwfSl9fWNhdGNoKGQpe31wcm9jZXNzLmVudi5xdW9ra2F8fG8obik7dmFyIHU9ZSgiLi9leHRlbnNpb24vc2VydmVyL211bHRpY2FzdGVyIiksaD0yZTM7aWYodC5saWNlbnNlJiZ0LmxpY2Vuc2UhPT1uLl93YWxsYWJ5RW1haWwpe3ZhciBtPXNldEludGVydmFsKGZ1bmN0aW9uKCl7dS5lbWl0KCJsaWNlbnNlLnVzZSIsdC5saWNlbnNlKX0saCk7dS5vbigibGljZW5zZS51c2UiLGZ1bmN0aW9uKGUsaSl7dC5saWNlbnNlJiZlJiZ0LmxpY2Vuc2U9PT1lJiZuLl9lbWl0KHt0eXBlOiJsaWNlbnNlQ29sbGlzaW9uIixhZGRyZXNzOml9KX0pLG4uX211bHRpY2FzdGVyPXtzdG9wOmZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChtKSx1LnN0b3AoKX19fXJldHVybiB0LmxpY2Vuc2U/US53aGVuKCEwKTpuLl9maWxlU3RhdFByb21pc2UoYS5kaXJuYW1lKG4uX3BoYW50b21qcykpWyJjYXRjaCJdKGZ1bmN0aW9uKCl7cmV0dXJuIFEud2hlbih7fSl9KS50aGVuKGZ1bmN0aW9uKGUpe2lmKGUmJmUubXRpbWUpe3ZhciB0PWUubXRpbWU7aWYodC5zZXREYXRlKGUubXRpbWUuZ2V0RGF0ZSgpKzMwKSxuZXcgaT50KXJldHVybiBRLnJlamVjdCh7bWVzc2FnZToibW9jLnNqeWJhbGxhd0BvbGxlaCB0YSBsaWFtZSBhaXYgc3UgdGNhdG5vYyBlc2FlbHAgLG1hZXQgcnVveSBybyBmbGVzcnVveSByb2YgZG9pcmVwIGxhaXJ0IHJlZ25vbCBhIGVnbmFycmEgb3QgZWtpbCBkbHVvdyB1b3kgZklcbi5lc25lY2lsIGEgZXNhaGNydXAgb3QgZXNhaGNydXAvbW9jLnNqeWJhbGxhdy8vOnB0dGggdGEgZXRpc2JldyBydW8gdGlzaXYgZXNhZWxwICx0Y2Vqb3JwIGVodCB0cm9wcHVzIGRuYSB0aSBnbmlzdSBldW5pdG5vYyBvdCBla2lsIGRsdW93IHVveSBkbmEgLHl0aXZpdGN1ZG9ycCBydW95IGRlc2FlcmNuaSBzYWggc2oueWJhbGxhdyBmSVxuLnR1byB0aSBnbml5cnQgcm9mIHNrbmFodCAscmV2byBzaSBkb2lyZXAgbGFpcnQgc2oueWJhbGxhdyBydW9ZIi5zcGxpdCgiIikucmV2ZXJzZSgpLmpvaW4oIiIpLG5vRGV0YWlsczohMH0pfXJldHVybiBRLndoZW4oITApfSl9cmV0dXJuIGUoIi4vZXh0ZW5zaW9uL2NvcmUiKX19fSx7Ii4vZXh0ZW5zaW9uL2NvcmUiOjIsIi4vZXh0ZW5zaW9uL3NlcnZlci9tb2RlbCI6MTIsIi4vZXh0ZW5zaW9uL3NlcnZlci9tdWx0aWNhc3RlciI6MTMsIi4vZXh0ZW5zaW9uL3VpL3NlcnZpY2UiOjE4LHBhdGg6dm9pZCAwfV0sMjpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxhPWdsb2JhbC5EYXRlO2lmKCJmdW5jdGlvbiBEYXRlKCkgeyBbbmF0aXZlIGNvZGVdIH0iIT09YS50b1N0cmluZygpfHwiZnVuY3Rpb24gdG9TdHJpbmcoKSB7IFtuYXRpdmUgY29kZV0gfSIhPT1hLnRvU3RyaW5nLnRvU3RyaW5nKCkpcmV0dXJuIHZvaWQodC5leHBvcnRzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZX0oKSk7dmFyIG8scj1lKCJwYXRoIiksbD1lKCJjcnlwdG8iKSxzPWUoIi4vcXVva2thRWRpdG9yVmVyc2lvbnMiKSxwPWUoImNoaWxkX3Byb2Nlc3MiKS5leGVjU3luYyxjPWUoInRpbWVycyIpLnNldFRpbWVvdXQsZD1lKCJ0aW1lcnMiKS5jbGVhclRpbWVvdXQsdT1lKCIuL3NlcnZlci9maWxlU3lzdGVtIiksaD1lKCIuL3NlcnZlci9tb2RlbCIpLG09ZSgiLi9zaGFyZWQvdXRpbHMiKSxTPTZlNSxmPTdlMyx3PTUsRD0xNCx5PSJhY3RpdmF0ZS1saW5rIix2PSJjb250aW51ZS10cmlhbC1saW5rIixWPSJ1c2UtY29tbXVuaXR5LWxpbmsiLGc9IkZyZWVkb20iLFQ9InZhbHVlRXhwbG9yZXJFeHBhbnNpb25MaW1pdGF0aW9uSW5Db21tdW5pdHlFZGl0aW9uIixSPXtBdG9tOiItLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLVxuTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxeWRRQlpwZTR2UG1XdkgyeXJpSFxuOGYvQm1va3FjbERxSk5KVUNvVitSUWF3MTZydC9pM2tSVVVIcVlYVjFvenhQdlFzTnpBcFByYXArMjFNcVZUVFxuZ3pwU0pCNkhuaFlhYkFPTWFodXZ6YVpseHRFVVZBb2Rad0dYbjdiZERMNnRiN1dJam9oaEdteWZzREt2KzJwaVxuVlZuQlArcUdSWHR0YXROeUtrMG1UT2ZiVWI4MG1zcTZTM01uZmhNOFN1T284Myt4WS90WjVpUEd3emoxMWJTRlxudHZrYk1BY1gzWWNLaG9GUm15OEtnRHVPeGpROG1lODJEeTZTZ3NobHNhZTgvMlNOVnowaU1jZ0NJVEFTWE91WFxuMEYwUUZDcmVqeFhUVHpnaDdUQmU5YTR4NTFpWUtNZk0xd3FxWGhWLzN5Y3N6SFpyd0dFZjhGY283M0xXdGZvbVxuSHdJREFRQUJcbi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLSIsVlNDb2RlOiItLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLVxuTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3ZjBSbjZyZ0ZNVk51YWVnM0tnOVxua2pMTlVUOFoyZm5JcmpVaERHTThGUzdvNWs0TlQxRmR6bnFzb0JwckxkckxSZGtNempIOElQcnJFVTVyS2lXbFxuVk8waUtVN1E3QW1NZkFUU3RlenZmeXMwQUFsK28zZi9rUWlTWnhEMlU1UC9LMzhrbFlwd2Y5TDhNTXRoQWVFRlxueTR4ekE1ZUJ1UHpCZFJIeHZVd1VxaENCOW83M1o0TWF4SG5yYXo1aHgwZjZhZ0VkTFZVNlhzTmtvNXdYbjhaTlxuUDZCYmtPT20vSGdVOEtrV3VKYlU1OHlnWHhQZi9mblpIdTJndHZyei9yTmVtb1hZMWZEeWRpek54RHkrWlBnUFxuaXdlU2RxbkxobEZvSkV1eG5Jd29QbFlNN0p3S2gzSmloT3pBcVFRNVU1SmtNNWUvbUZRL2xGcUNWeE1sbUJRV1xuVndJREFRQUJcbi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLSIsU3VibGltZToiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTFFRURaelErK2w2dHoyaW9DUGFcbkh4T1Njankya1JEZFBvWHVRODh6Wkc2VmV2eHFtSXphZEhQRkdqVjVwM1ptOE9ZOVIrU2Y2MWtkelJaenZXUmdcbnhvcmxhbm9PbHV0dmZCZkcybGt2Mko0SC9CNzVYcG9BZUd2ZHZJbE9Nb0R4ZndqMnZNSVE0b0hOYUNKMnkrTy9cbmlvaFRGT0MwN25ZN3VmMnNhMHVzT0FaN3pnK2JYeXo2My9mdVNlVm91RkNLR2VZS3ZxMVlDOTkxRjJIajBUaE1cbnh4ZWxsYzZ4MUFhRnV5eUc1SG1kWXFidUtOUytpQXQ3dzhwWVRKb1h4aTlqRTAyMTRHZjBzYnNGbkFiQkZqMnNcbmtPYWVlNFBTcGx5U1pYRW1ZUmVwUDErdzZhRGt1YlZ0c0hNdkZ0K0FyNHd1NGRMdUFqN1M4eXhWVnJLRUc5UnpcbjR3SURBUUFCXG4tLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0iLEZyZWVkb206Ii0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tXG5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRwRG90ZWp0emhpVC9scE5mZDBIXG4yRHYwOE5UU0o4L2l4dVF6M2lKaVZSeFFrb3Q1U240NXd1NFFpUUVvWTVOUS90RGY4VjltRGVlUE5VL1pkOEtZXG5keVJGb3E2YndPbEhjMEhBYTUwdGVjUkNFQ0VTQit0M1RWY3FMTW9nWDMydmdRa1NtbHkwc0Z4dEdGQmpOOFd4XG5WK1E3V1E4bmVmdDdKS2FYdG0rMkZ0N1A0MW9uZCtTZkJlVG9oOW1uOURGZnQrT3VJMnZ6N3MwT1NqZCtQMmJ3XG4rR0VJcjNvdGwzQ0E1UnJJSDlXUnNBVmphd3YrejVMdmFrUVh0TzZKTk5tSmdFckhXWm1rQklsdjJWSERzb1NkXG5NTGdhMmpUaUVIcmtaeWxLUEZvei9oT2RoL2lWSDQvcjFBV3hCaGo4SWdRbFJjTEpndlNCekpvNE9sQmhsWWg2XG54d0lEQVFBQlxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tIixRdW9ra2E6Ii0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tXG5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9oUi9POFg1cHRnUGJlbHNTc2FaXG5XSkhaN0ZrcW8zOUN4OVVZUHMycll6Ync5NGFackllUmRkZmdENTVnU1paM0prUlhSZFo3S2JtK1hUcmk2VjAvXG4wWmV0K0ZLYWVXMHhrb3RIdk1QMGZUekduYWpRNkM4MzZNOHdRUjlmMW5kcWQ3VHNhMzBrQWVndlBxaEt1SStXXG5hVzFHWnJTZWVleXEzL3VaNHRoUEVHdkZEWGo2UDJvZ0VhRXgzNld1cUQ5RFYxVXVZN3ZjbS9mUFlacGZHZ1B1XG44SjRIQXpLNUcwT3lyU2VuVFgvK0pPOHBLak90RjZKSEthUW1pM0NGMXRDQTFldzhzdlowWkxrSzlBR29NKzhPXG5hOWt4MXNCcDRZdkNqQTBWUnhkTy82Nk90QlJoRm5LVjZKYm9QVFE0U0cyYkZBS1lSSk83dG5TN25uaGljZ0hzXG5Fd0lEQVFBQlxuLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tIn0sYj17IlEwZENJRVZ1ZEdWeWNISnBjMlZ6SUNOeVlYSjZOQXBrYVc1aGFDNXdiR0Z1WTJoaGNtUkFZMmRpTG1OdmJTeFhZV3hzWVdKNUxtcHpJR052YlhCaGJua2diR2xqWlc1elpTQW9WbE1nUTI5a1pTa0tNVEV2TURVdk1qQXhOd3BPVDJaVWFEWldOVXhHWW5WRlNVNXpiVXhZUlRKM09WTXpNVFpqU0hobFZWcEdUV0pEY0RNM1JpdDBSM0pzVEZGd2JscERiMVpGUW5wRFRVTlFkalpFYVRSV01URkxVRTVNU0dsNFpHZDNja05HZURoUFVGQk9OalE0YzJwSk1YcFdUVWwwVFhCclJIUmlMeXRMZHpSNk1tSlNTVUYyY0VsMlp5dDRSMDV2UTFJelYwTk9TVGxoV1dVMVZYQjNVVUYzZEdGMmEyZGlVMDlrZEhkR2FtMUpMMjFwVXpCWE5tcFhZVWQxVG5SQ1IzVmtSVk5WY21wTk1GUmxNM1JqUmxCRFRWUjNNRkpZTlhscFNYSnNaVk5rUWtwVmVFOVRXa3hUY0dZd1oydzFZVmtyVFhOTFZUazRkSHBOYWxWMWMydEdaR3MzU1hacVZFMWxRMHRNYjFwNmQyaDNNWFJMTVcxMWNGQk9iVU5pVlVkMWExTXJkMVJWUmxKV1VFRnZiRU56VkhwSEwxSkVSV2hXZDJOTFprd3JPQzl5UjAxMVVVSnJORlo0WnpaQ2NucHBPSG81V1VwTVJIWnNhMmhrY2tGT2RrRlhabmM5UFE9PSI6MSxRVzFoZW05dUlFTnZjbkJ2Y21GMFpTQk1URU1nSTNoaFpUbDJDbUZzWlhoZmMyTm9hV05yYkdsdVowQnphR2t1WTI5dExGZGhiR3hoWW5rdWFuTWdZMjl0Y0dGdWVTQnNhV05sYm5ObElDaEJkRzl0S1FveU55OHdOQzh5TURFM0NrVmpTR3QySzFocmVXNWplRkpFV1ZkRlVGRmliemRZVm14cVVFUTNWRzR3ZWpCd2VtMUVaU3MzYjI1UFZYQm5ZVFZCYzJ0TFNUQXlja1JVV1N0RksyUldOQzlwTDJaaFdHNHdkbEZxZEVKM04wVlNhM2RNTTNkWFZURk5lSEo0TlUxb2FITnVkbG95U2pOTVkzQnFiMmwxTWxSS2FHeGlVSGxKTVhaV1J5OUdRVTQzV0RWdFYwVnNkWEp1VWxGSGFsZEJjRmRPVTBOQ0wyWTRVR1psWkZWaWJVTnVhUzl6Wlc1Tk9EbFJUbklyV0RNMFp6QmphamRhUTFFeldWaDJiemQwUzAxd00xRnJkMjVQZVVob2VUQnROQ3QxYVRoWVpFcFlSazg0VXpScVdGTlBTRWt2ZWl0eU5UTXlWMEV2U1VGTGVVdHRNMWcwVldsVFdtbE1WSE5NZGtZMU5VWmlSMmt4U2xZeFlXeFBlVVpyUkhCV1RuaDRTakpMVVVSUE1ubEZNMjhyWTJsc1lsWTRNbXRUZHlzeGRFWnNMelp0TjJ4dWIzZGhNME5JV210T2RWaFllbGRGTDB3M09VRXdSMGhpT0VaeFp6MDk6MSwiU25WemRHbHVJRXhsWkc5MWVBcHFkWE4wYVc0dWJHVmtiM1Y0UUdwMWMzUnBibmRsWWk1d2NtOHNWMkZzYkdGaWVTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxJQ2hUZFdKc2FXMWxJRlJsZUhRcENqQTJMekEyTHpJd01UY0tiMm81ZEVGUllVdHZRMGRhVEd4dFlXZHhaVTR6VkVWQ1ZXOXdVVEZ4Y0dOUFVrbGpNSGRuVmpVclZFUXpORTVoYUVkUVZXaFhhRlZTWVM5YWRIcHNOMFZhYjNWME16WmpaVkowVFVjeVVrd3dLMmxhTjBabFkyTlNWbmd5VlRSTmJVOXRTR3BPYkVGWFprTnRLekE0ZERaVmQyazNRUzlPZDA5VGNrbHVNa1JXV1RaeVYwOWpUV2xGU2xrNGFXSlpaWHBuUVZkMWREY3JWMEV2VGtZeFYwMTFaRWN2ZWxkbmRWZFBOVGwxUVdGUWVFZDBSblJaVGpkQlR6ZFNXa1JEYkdGeWIzSXJTMDlOVG1keldqUXZZbU0yTkVObVRqTjRkV1l5UkU5a1RqQklOMjgyVlVwTGEwMUthVU53WkdORlRYbFRNMVoxU0ZKc1JWWmtWVTFxTTJwbFpsTmxRMDFHUm1GaWJIQlhNRmx6UTJWQ1FUVTNXbE4zV1hCSUswNUtOV2tyYTFsa00zWmpiQ3R6YzFGUmVWUkhOV3haVWl0aU1uRldXRFZFV2xWVlRYVjBNRmRVVFhZck0waEtRbnBOY0ZOdVRqWjNQVDA9IjoxLCJVR0YxYkNCSmNtbHphQXB3WVhWc0xtbHlhWE5vUUdkdFlXbHNMbU52YlN4WFlXeHNZV0o1TG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqQXhMekEzTHpJd01UY0tjVzV5V0dkdFkzUlVLMlE0UVVVM01FbHZNVlZSYnlzM1NHeG9Ua1Z0Y1VoVVZuTnBjbUpaVkN0Nk1qaExUalZ3ZFRaNmFXWTVRa2RITjBSWk1GTjJlbXhCVDBOUWVYSmFUbm96YjNoSk9VTnVkMWxVTW1aaFJHTTVlR3BpVW14bVltcHdNRGxWVFRCaU4yOXlNRFZ6V0VaSE1rc3pTRlZtWTNaTk5rTTRhRzA1ZFZseVpXbFhORXRNTVd3d1JUTkdkVWhvWlhoMVIzbHZabUZDZFc1R01qRjFZMFZpY1ZjeFNFeHVjSFZEYkU0ckt6Um9ZaXRWWjBoV2JYaExlalUzVHpCMlRsVmxUR3NyYW5GVVZTdENSVTFZZWs1TlkxbExWVkY2YjBkeE1GUXdjMW92V201MVowMTVWakpTVVd4UWVHMVVhRzFuUjNoRVNTdFJVVEo2Y1hkcFIyMVJlV0Z6U0ZSTGFUVldSMnRRV0RaV2FsVmxNR05WY2tWUUwwSnROQzlXZFhkb2JWZHFSV1ZTVERaMGIwNDVOSHB2UldGbFVFTkpLM2x1UW5kR1R6Rkxka1IzYjNZMlprbFlNREpoYnpKdGRrdDNQVDA9IjoxLCJWRzlpYVdGeklFRnVaR1Z5YzJWdUNuUnZZbWxoYzBBeWJXbHVaQzVrYXl4WFlXeHNZV0o1TG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqQXlMekE1THpJd01UY0tZak4yVFRoblJuTnVhSGR4T0dVclpuVXllSFZ3VlVWaVRreFhjMU5XVWpKMFltVlRSSFZNVEdwSk4wTjVRMjVSV0U5NmQyVm9MMFJQTDJSTU5pczJkazlZVnpkYVUxQTNUUzlEVDNZeGVuZHRMMWQ2U0VZeFYwdEtaVk5aY2xkdlZGZFlORGxtU0VKV1RFOU1UbUpGZDA1SWVWaDBNMFIzV25sMWEyWmtRVUpWVTFsVlEyRjBhekIyT0dGeGNHNTBORGsyTDFSVlZFZG5XWFpGYWs1SlMyOWFNazVYTkhSeVNrSjVRemN2SzJneVMweEVVMU54WTJkb1lXcGpRU3RhWTBWNk56Wk9iM0pCU200ck5XTkVSMkpOVUc5WlkyODJjRmxyWVhoM2NpdFFhMHR3VkVKb2NuVTRXSFJVVkhsNGVGWlpNREF4U21KV2JtbFZOM1pRWW1WWFdWaGpSVE5uVm5SdGNWRTBaak5MYzJOV1pUaEVjall3WXpacFNVbzFLM1pyVUZNM0x6UnJSbE0wUzA1Q1JWbFJZMVZ4TDNGaU9VNW9Wa041VVZGVWFHRkZZMGRyYmsxUGRFMWxVR04zZFdGTFNVeEJQVDA9IjoxLCJWMmx1SUZSbFkyaHViMnh2WjJsbGN5QW9WVXNwSUV4MFpDQWpkbmR1ZFdrS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakEzTHpFd0x6SXdNVGNLUXpoMFpYcFBlRmxsYjFGSWEyMVRPVTk0U0RaaU0zUjBjM2RqUnpad1dqSnlhVGN6UkRORGRDdDRiVkZ4U0hvemNUaGFWMkZ5T1RKWEt6SlVWWEpwV0hsb1QwNUdVblJqWlZkd2VFbHlORmhqWVhNMFNqRnNibk5TYWpselpIWmxNM1pyUVcwekswbFVPV1Z2U0UxMFdtZE5UMEpGVGpkbGIzWlVWa0ZvT1RSTEsyODFRbmRhT0VOTFlUSlFlbVZLVFVoemRFWnlkMnRHYzB0U01sQm9TMFF2TURWd1pEZExOemM0ZERsdlEzaFBkRFZETjNGc1lUVnNUV2Q1U2xwdVVVTnBUM0ZHZWpKTVMzRjJTVGdyY0RWeU56a3dXamhNUlRSUFVGRmpVRE50VGt3ck5YZDJTMWR5WjJoelRUWXdhWFZVTTNGSGJIVjVVa0ZMZVM5emJrdzRkWFF5YmpOM2RucHZOSGdyVkZWdFluRkpWMnhqWTBGRVMzaHNUREZGVGl0MWFWcElaekZyYldsMWVuSkNVbE5WVnpabmFpOUZhWEp0YVRSTWMzWmhTbGhwUTJwdGNXOHlRaTk0U0VSMU5IWTFjbVpSUFQwPSI6MSwiVjJsdUlGUmxZMmh1YjJ4dloybGxjeUFvVlVzcElFeDBaQ0FqY1dOb09IVUtjSFZ5WTJoaGMyVnpRSGRwYm5SbFkyaHViMnh2WjJsbGN5NXVaWFFzVjJGc2JHRmllUzVxY3lCamIyMXdZVzU1SUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pBM0x6RXdMekl3TVRjS2RrdGpNV2N3T0V4dmRYQlBVRU5JUjFsSFNrZEhiR05tV1dwcVJrODVOMVpGZVd0S2RrNVhTbkZ3Y1RoNWRGTk9Ra0pWV2tGa1UwbFZPWEpEWldGRlNtODRZMkpvVGtwWlp6VlZkbUpLWVRWNVdYbGtkM1EyZVZwQ2IwcG9Sa3RaV2pCVmJGRXJkVU5SZGs5SVNsaEdaRXQ2U0dObVRubHJZbms0VDJaUGN6aE1VbUZQU0dOR2RVZzJOME00UzJaU2FtRklhVzVxZHpGelRGSlVaMEpSZFRZMlpFTnRWSFpuU25sNlVIUjNhbEJUT1RWUk9WTldkemhSU3pWM2FHSXdVekp5VEhBdlFteE5jbWcxV1dnMmFrVnBSa1J4TjFZelRYZ3JRV1Z6Uld4a1dIcEtZbGRJWmpOcVpFeEtTbkZFVnk5V01pOVNaemN5UW5adGIxaG1jRVJxVFdaM2RtUXdUbFl4U0hOSVV6ZzRkSEZNWjNsQ2NIbG9ibFpaU0RsbFMwVlNVa2x5Ym5OWWExWm1UMmRRYVRSc1YyUlRTbWRQZFVWNVVXbFlla3huUkd4SE1WSTNRWFZ2WkdkVVpVbzRjeTlrV1ZaUlBUMD0iOjEsIlUzUmxabUZ1SUZSb2IyMWhjd3B0YjI5dVFHcDFjM1J0YjI5dUxtUmxMRmRoYkd4aFlua3Vhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaU0FvUm5KbFpXUnZiU2tLTVRJdk1URXZNakF4TndwNk1WSmtValZGWldkcFZ6RllMell5VGtzMlIwVkpabEJxV1dnclVVRmhSWGRNVlV0dWIwd3hRVk5WYTBZeFozaEpNV2wxWVVkWVNYbEtabVJqTkdsT05tRkpialZPYVdoV1ZtOXNkMWt3YUV4RVIzcHRZV1pKUTJ0WFJWSnRZMUV3Y0c5MFIzWTNOMFl3Wm5FeGFUWlBRVVY2U0ZOelMzcFBlalowVlU4cmNtbFdjRlpqVUhCVWJFSjJkVUprVEhNMGVXY3pabXMyY2xsTFZucElhMk5IZWk4d1lubExkVVZZU1RORVRFUm9RM0ZLVTI4eFZYWk5hVWRQVmxCS1VXTlpXR3ByZGtwWFVYY3pRVlZJYWt0MU5YQlVUVk5CVG1OSWRGSnNVVmh4YWxGSVMxbGFaM0paTTBoNFdEUm1jRlZxUzBwV1NEWmpUVmhwU1RSNU1VbG5PRTgzT1RkVmRVRXlOR2c1WjNOdVJsVjFWMWhhVlZobGRFNUdXbFZNWW5KTWRWaHhUVWhoYUhFeFlqUmxXbXRyYVVKdFdXbEVaR0UxTkV3d0t6Uk1Ubk5hU0ZaT1FrZFJRVEZ3YzIwMmJDOUphMWQ2TjNjOVBRPT0iOjEsIlRIVmpZU0JUZEdWbFlncGpiMjUwWVdOMFFHeDFZMkV0YzNSbFpXSXVZMjl0TEZkaGJHeGhZbmt1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlNBb1JuSmxaV1J2YlNrS016RXZNVEl2TWpBeE53cHllRllyTlZac05sTlRRMnRSTjNBdmJrdG9iMDk0ZDNjMWRFTXJNbW81YUc5dU5FSmFlRWhXVDIxNVFrRnFNbTFaZUU4NFJGQlFUWE52Y1ZsM05tTk9VamRtVVVKd1ZIWmpla3huYW1JemMzaHVhR3A1T0VSMlRrdHRhMUZsY1dwVmRWaHFhVEJIUjFsVFNrZFpPVlpYUmpscVoybDFVbWhOWjBWT0wxY3dNelZaZEZNMFEwTXlSaTh3Y1VGWk1WZFdWamhTTWpaUVZETk9jeTh2VUVkMmJURTJlSG9yVmpoR2NrUmxlazQ1YXpSamFGRkxPRFJCUmpCR2RWb3hNRXB0TmpSMVpFaE5VM2xJZW1ka2VXRkxWM2RQVEdSaVlXc3dWblk1U2pnck9Ea3pjMVpFTVV0NldqWllTbWswWlRZd1psWTNSMUoyYlZoVWRGcG1hbEZITVRBd2RXUklORzlPT1Vsd09IZFVSSFk0YmtkTGVEaEtXSFZ1Wkc4Mk1sRjRjSEkyVDBwbldpdFlXQzh4UWxGbVQxUm9jMjlxVFdSblJHeFhRMDR3ZGtOWkwwNXFSVVprVUd0alVGcFFaRXRhUVU5MlFVRTlQUT09IjoxLFRHOTFhWE1nVm1GdUlHUmxJRU5oYkhObGVXUmxDblprWXk1c2IzVnBjMEJuYldGcGJDNWpiMjBzVjJGc2JHRmllUzVxY3lCd1pYSnpiMjVoYkNCc2FXTmxibk5sSUNoV1V5QkRiMlJsS1FveE9DOHdNUzh5TURFNENrUjRZMHhaVFZFMFVDODJiR1JwYjJwVFZVOVFaMFpsZVhwcGIzRkhaMDVoWjFjMmMzSk5Oak54T0RaWFF6RjBRVTUyV0ZWSWFpdDNjWHB5UW5kNlJrZE1aR0ZWZFhoVFJUVkZSa1l5YUVoT1EwZE5NMFpaZGxkT2NEbFRPVVJJY0N0dU5ETXdVSGROTTJGMFdWUTVNVU5CTlhWTFlqZGpha3gyT1VOaVRVVk5NRGhuTkhKSE5VUjFZbm8zV0hFeGVYUXhNamw0V1VWNmFteFpRbXRTT1U5SU1ucFBSWEpYYjBGcVVXNVBlVmgwY1cxVlJ6VlZOR0pNTVhwU2FFaENUa2h5UldOdGJtaDBaWGg1ZEhGRE5UZHlUSEpHZWpKRk5GTkxhMlZrZVRjMWMycHpibWhJTVZoWk5HeFBPSGR4UWtVNVNrcDZWblZYUm0xa2NVaHlZbkpDYlVaR2FVVkVNMWhPY2xaRVpVRmhibWQyVVdkT1EwNTBXa1JCVDNkMFFUTkdWMVpPVEVScU1qbHJjbUowUWpKUU4wdHRSV2xXVTFJMFdUZE5WMngxYWswMFduZzJlWFZvYnl0c09VZGxhRUo2VkhJMGR6MDk6MSwiUkc5dGFYTnZablFnVUdsdmRISWdUbTkzWVdzS2NDNXViM2RoYXpKQVoyMWhhV3d1WTI5dExGZGhiR3hoWW5rdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpTQW9WbE1nUTI5a1pTa0tNVEF2TURJdk1qQXhPQXAwVnpsMldsbE5ZVXBDUjNOcE0wSklSMGRZVTNscU9EVjJPVmROVlRNMVJsSmtlVmxSVVVOeFpYSm5VRmRMYmtsSFZGaHRlR1ZoSzNKUVRFaHJLMmx6UVV4NFpFTm1kVmd4TnpsUVl5OXFaM1IyWjFKTmNXY3JTWGxtYlhvMU9XTXJZMUE1Y0dKdk5EQjJPRllyYjBaR04zWkJaRmhWYzBVMVRGQnhTa3hDU25GMGVXaExLMEpKZVdkdk5UWjBhM2hGYzI5b01EazJhMDFEZG5kTlJtWXdiV3g0VUZvd2JrOXNRMWd2UWtKc0wwcHRkR1IzTjBwaksxTlllVGN5VlRaS2FHVnBXRWxWTkdoQ1JWRk1lVUpwUm10UU9HSllaM2N5WVdNclRtaDJTbGxaYlZoMGMyMUdMelJSVGpGemFVSkNaM3AxZEdaNlZVaGFTbkpXTkZkTE5HUmpWamM1WnpWellpdFpVWGxGZG1odE5qRlZZV1YxUW1acGFGcEpVa0o2Y0ZsRGFsUkNVMUkzZEVKaFZYZEdWemRuZEhoblluVlRRa1ExYzA1V1ZXRjBjR1V4ZFhCdFRGUnhNa1ZFTVVGS1NHWkxNRkU5UFE9PSI6MSwiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBalpubDZNSGNLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0tZMnRSVnprM1JuTmpTeXRIV1VaQ1NGcHRhVmhNVjI5VGRsRmhVMms0UXpRMEwxZDNZV0V3V0UxdlZtUjBSVVExY25Zck5pOWtZelJQVVRaVmFGVjFPRTF2WWsxVWR6ZHRaR3A1VEdWRU1qZDBjalpqUmsxeVlqQnRhSGR4TTNkNGF6WTBkVzk0YWt0TVZtczFTR1JvYUZWaVZGSkNLMmx2Ym00NU9XRm1MMmh0VFVkWFVWbG5hMHhSV1dkSGNrdEJaa2xKYXpFNVNWZFlNVTVxUWlzNVlWRmlNV05EV0ZSM1JIbzRRMHhPVW1SVU1EWktRbk52YjFCd2VsRnZNR2xDYmt0V1NGVlRWMDlTUzBnek9FRnNOMHhJYURjeGJVdzJWVzFrVkcxRmFWRkhZblE0UWpCWWRTODFTbFoxZFd0MlJIRTBablpMZUc1dmVrcGhWMUFyVFhweVIxTTBla3R2V0U5cGFrSmtSblU1VFRFemR5dFpUaTgxVlc5aVEwRXhTbFJ6UW1NeWRtYzJTSEZVTTFsNlExTkdOVmsyZGpWNFdUaHVlR014T1RWTGRETnRlbnBwTW04eWNtVk9Ra1I1UW5CSFRUQlJQVDA9IjoxLCJWMmx1ZEdWamFHNXZiRzluYVdWeklDaFZTeWtnVEdsdGFYUmxaQ0FqTUdZME4zY0tjSFZ5WTJoaGMyVnpRSGRwYm5SbFkyaHViMnh2WjJsbGN5NXVaWFFzVjJGc2JHRmllUzVxY3lCamIyMXdZVzU1SUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pFMkx6QTFMekl3TVRnS2QweHlUMUZ0VFZCbVJXcFZlSFpJY3paeGEwVmhhR3BVZFhkTVNrMURVbGxVY1VWS1pIZFhjamxNTlVwRFZGYzFiWGxwYlhNMVVXUldOazlXYmxSc2JsSndTMVZsUWtSSFdEY3djM3A0VERZdmJUVnZaV2RsU0dabVpUbGlRM0YzUVhaWkszcE9hMFJ4TDBRelIydGtkMnBaTmpsVGJXeHlSSGgyWjNGblVFOTJNVGd2VFd4SGVFaEdTbWRWYm05VFZuZ3JRako1YTNsM1dXSlRiekpITm5saldqZFhjRzlMT0hsMFpFbHRhbE1yYUZkNFEwTTJNME5vVUdvemIzVTBlWEI0TW1Jd2MwRlROVTF2YVdwYVdFaEtjM015UlU4dlZHaFlXVTlFWWpoTVVURldjMkY2VERoTFJEWjNWV2hPU0dWaFprUnNkR3BpVW1WdWJVTmlkbEEwT1d0dWJYRkxaazVUZFd4NGNrRjBlVEExYTFOR01qaHZTbVUwUVRWRFdHSm5aMWxMTXpONFducDFOR3Q0YW10UFYzSkpMMGR4YlRoeWJHSjZUelZXUmpOQlVFUXZZMFF2YVdOUmNUTjJUMm8wWlZGUlBUMD0iOjEsIlYybHVkR1ZqYUc1dmJHOW5hV1Z6SUNoVlN5a2dUR2x0YVhSbFpDQWpZalp0WXpnS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakUyTHpBMUx6SXdNVGdLYkdkNFJTdHVRa2R4YWpVcldYZDFhbGd5V1VGa2MweE5aMHgzYWs1cE9GbG1TSGRKVm5keFVXTllNa1ZwZGtoTldsRkZRelYxT0M4MmJ6ZE1PVmMwTjJsUFIzTlpTME5HUjBjeldrcGpTSGRFTURWM05VbFZRbEpyUWtnd1ZUSTVSbGd4VjAxUFdXVmtTVGhNVm1JNWQyVXpkVWs1T0c5UVNVbzVaSGR1VkdGNWVqQlZLMms1Y2tkNmNHNXJUWFZuV25oT1lqQjFWMnRZV0ZsRlZrdGxMMkZsYmlzNWJXdGFUVkJDTDFGeFpHZFFNVE5hYm1ab09FcDRSVWR3ZGpaWVZETlJZemx6YTBnNVNGSlBhVVoyV0ZBeFRtMTVOVGRuY1VwVWRYTXdhWEZaYTJwV1ZtTnNlbHBoUlUxSkswTlJlR1JFYTBzd2Jrb3lXWFZZTkRFMVl6a3paRnBvS3pkcWJGcG5aSFZCYTI1UFdVSnhhRlZ4TWpSNmJVdHJRems1WVZkaE4wNWFZV3BoY1V3dlJrOWhMMFJyTW1oWVpHWlBVbms0Y21sYWIyTlVLM0JKVjJWS1owaDBjWEpVUkZseVFtNXNSVXAzUFQwPSI6MSwiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBak16ZHJjSGdLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0taSGhwSzFKV2VrZFdORkpNVjNGVFZVNVlTV1pMVHl0ek0zSlVLM1l5U2pnMVl6UlNMMlpFVEhONmNtdzVXV2hGYW1OWUsyTk1UMFJIVVdOcVVXSmtkRkpMY0dSTFpVMXlTa1oyYVUwM1ZtVmpkbk12SzFGYWJteHVNR3RGY2t0WFUyNHJNRFJHTkdGdVoyWjBjR05pUm0xMVpqQkxMeXQ0VVhaaFUzQTRPRVJsVFRoWk1XcHVUakpSYXpKeGRFVlFjQ3RST0dkRFVpOWFRMnhGVkZaelVGbElSelJPTXk5SlVUSlZWblJXU1hoMmRIVjZOMGxrZVZWM1RFMTVXbVZLVDA5elNVZE5OV3BpTlhsdmQzQnhWVkpqY0VaWFRsQXZXWGhZWkZnclRtTlRRek12V20wd2JXaGxVSFJKUkdkbFRISXlXR3d2VTJGcmFTOVhRVFJYY0hkb2FYUXpkeXRpYjNsMWFGQnZaVWhFYUVaUE4za3dUalUzWW1SRFNTdGxUemMxVHpRMGNGcFZRbXQwTUc0NFduQmhXVk00VURkR1RVZFRXSHByTUVsTmFtSm9Wa3RaYTNvNGVqWXZaVTVESzB4c1JTdDNQVDA9IjoxLCJWMmx1ZEdWamFHNXZiRzluYVdWeklDaFZTeWtnVEdsdGFYUmxaQ0FqZGpKdmR6Z0tjSFZ5WTJoaGMyVnpRSGRwYm5SbFkyaHViMnh2WjJsbGN5NXVaWFFzVjJGc2JHRmllUzVxY3lCamIyMXdZVzU1SUd4cFkyVnVjMlVnS0ZaVElFTnZaR1VwQ2pFMkx6QTFMekl3TVRnS1Vra3hTelp0ZGpoNlFXcHRUa1JFZFhSWWJYVnhlbVU0Ykd0VGFGSlJlRFJGU1RsSVVUVlhRVGxZV25kaFZEYzFRbWRvY0hwVGFYcEJkRnA0WVZoNVpFTlJiRVpFVEdJd2MyaEZaV05DUW5OTmFreFhkRTFwUnpSSFowbFZkR1pOTVRWU1JFZDVNVGxzVWxrM1VXWlRTSGhKVmtsR2JUWTFWR3B1YTNWV05IWlFSSGRCTmxOU2VXbExhVVo1SzFkcEszUk5ZbmM1WVN0RVUyZzROamw2VWpGTmNuSlFXa1pwUldNeGRFbDFSV3BXVnk5VmJuaEhNbWhoTkdZclZWTTNlVnA1ZVdwS1R6UllXbmN4VlN0aFJVOVBia3hyUWxoc2EyOTBZM0ZsTUVFck1pOXZUMjlzVldZMldUUlJhVWxxZVdoc1dYUlVjVEl2WjNCVmRrVjNkWGxWYWxkeE1rUjVOVk01VG5WbEt6VnNMM0pOVUVoUVowUlZVek5XYldaeU1Ib3ZRakZGU0dOWlMzSnNWVEl4V21oUlQzaHdlRWxuVTJweldXUnRUa05ZWW5SUmNrdGtWalJZVm14SmQyWmtUbGhHWTBKblBUMD0iOjEsIlYybHVkR1ZqYUc1dmJHOW5hV1Z6SUNoVlN5a2dUR2x0YVhSbFpDQWpNalZpTW5JS2NIVnlZMmhoYzJWelFIZHBiblJsWTJodWIyeHZaMmxsY3k1dVpYUXNWMkZzYkdGaWVTNXFjeUJqYjIxd1lXNTVJR3hwWTJWdWMyVWdLRlpUSUVOdlpHVXBDakUyTHpBMUx6SXdNVGdLYUVwT09HMXlOR0V6YW1sNGVtVlNiMWx2TXpKd1VHMDNOWGd2TDJoNFFrdGxaM2RwZDFwWE0xRkVTazVOVld0Vk1XOXJObmxVVUV3MFpqSjBaR2hvYzJaUVUzaFFLMlpYVlRsSWFtOW9OMVJXVDNkVWNXVnpPRmxVWkZKR01EUnZhRkU1U21WcU1tRktlVTFKWTFSR05tRnRhMHRQV1ZaV1lVWkRORFpZT0VwYVRUVlVRMVZ2YkVOWFZpOU5UV2RqWWpkTE9FWlhORnBMWjNaMFVFRkRaVk42YlZwcGJuRlNkMGhpVGpCVk9Gb3hNRk01T1hWTEwxZExkVWxCZG5SaFVqZHRUV2RLWTJ4YWVGaDNOR2RWUkRGMGIxbzRhazFUT0VoQ1duWjJiMWxZYUV0VFZVeEZlVTR2V0U1amVEQTRZM0JWVjJVcmNYTjBNWEZWUkZBelpqZHROMVZNVjFsc1JuWTVVMDhyVVZobE5XRklRM3BsVERabFEzYzNXRkV3U0VaR1ZXTlliSGRpWjNWck0yMHlVMVp6VkRKc1ExWnplVzU1WW1sMFoyVk5NbUpSYlhoS2JuQkdkRmhYVUU1MFJVNUpRbWQzUFQwPSI6MSwiVjJsdWRHVmphRzV2Ykc5bmFXVnpJQ2hWU3lrZ1RHbHRhWFJsWkNBamJubDJhamNLY0hWeVkyaGhjMlZ6UUhkcGJuUmxZMmh1YjJ4dloybGxjeTV1WlhRc1YyRnNiR0ZpZVM1cWN5QmpiMjF3WVc1NUlHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTJMekExTHpJd01UZ0tVMWRZVVdoeGRrTm9ZamQyY21wWGRERjRWMjl4VFM5M2JrRkZZbkV4VDJsNVRteE9kMUZ5ZVdOYUwxUkpkVVl3VXk5M1ZuWllhbGxTV0VKTlZEWjVXamhrSzBsV0wxcHlSbEZDWkZOaFNqUlhZa0ZJTms1WlJqWllablkyWlRCcWN6UnpNbFI1ZUVaRlp6aDVabFJQT1hGb1JtRnlNMWxyVWs5UFRFeGlNV3N6Y3pCUk5ISldkRkpoSzBkUVdIY3dURVpyWVUxS1VFMTNSSGhtV1hwU2JUTkNiMkpxYkN0bmIyWk9XbUZJU1VJMWVYQXdUMjVhUmtVNVoyMVpkSEE0WkhKa1kyNXNkM2wwVFhGMFFXMWhPUzlqUVUwdk1TdGxTM0pFUnpod1NVWlZjVzVvZEhwbVJFMVlWVGh0VG04dlJVWnJTamREYVV4bk5uQlliRUkxTjB3eGRUQmhTbVl6VTBsemRFMXhkMHM0VFU5UVdGVkZZMVpPTDNWbFkwVlVLM0JGVjI5cFIzUjJPVlZKTTJSbE9XSnJTSGhrZFVaSVRHWjVlazFVT0ZkMVprMXJTMWhhVlRSa2NpdFdkMDAxTmtGUE1VTm5QVDA9IjoxLCJWbWx1WTJWdWRDQkdiM1Z5Ym1sbGNncDJhVzVqWlVCdWRHWnZkWEp1YVdWeUxtTnZiU3hYWVd4c1lXSjVMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVnS0VaeVpXVmtiMjBwQ2pFM0x6QTNMekl3TVRnS2JISkxPVlJqTjFNeVdXTldaMDlEY0RSV1dVbHhVRmxYYjNkbEx6RTFOR1pxWmxkUVNUTmtPRmhwWVROeWEzVldXVXhJYWtoSldEaElObkEwZDBjdk1XRkVNV2gwUkhsME1IWkdRa0Z3WnpSTFJYUTNZazl6UjJGb2NHNUhhMHR1T0hac2VqUjVUVXA0U0ROSlMxUnliRWxTZUdzeGJGaFhPREJHWm0welUwNXVkblZJYjNSUlkwTTRhRFIyVUZFMlpGcEVPRlI2VUhSc09Fb3hVRGwyU2xWRlUwSnNSbTlNZG5SUU0xVk9hQzk1VjJkUlFVTjRkSGt2UVc1aGVsRk5XSEZGVEVaWVNFVk9kVk5yTUdkRFRsZEZPRzlKZFVWNE9XNDVMM0k1UjJ0SU1sUnRjMWRDY2xKR2NEWnBXa1pQTjBsc01EUmFkME5OY2xkSlkwTXhOV2x5TlZSa1ZXeG1NelZKTDJGd1dVaHphbXA1VmpOeU1IVnNWVWhwTlZSVFRsbE9TalJrUTBSNGJWRkxObnBQZDFWbFIyMXVMMmt2ZUdnNVowTkZkV2htZERCck4xbHliSFUwY0RGeVkzazBXa2x3WnpSblBUMD0iOjEsVG1scmJHRnpJRXhwYkd4eGRtbHpkQXB1YVd0c1lYTXViR2xzYkhGMmFYTjBRR2R0WVdsc0xtTnZiU3hSZFc5cmEyRXVhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaUW95T0M4d09TOHlNREU0Q2xOSmVHZHpZbU5qTW10M1pXYzFUVU5rZVhoTGJHTTNObTVWVFVOU2VFUlRNUzlJT1RjMVFrbzNSek5pTldoV2NUbHdlRUY0ZG1kMk1HdFFUV3B2YTBsc1VUWnhjQ3QxUVZCVU1HRnJSa3hvZWtKM2JUZDNWbUpFU1U1UFNsbG1ja3AxWmtvNFVFTlRNU3RaZFVwV1NEZ3JVR3RxVGtsbFUzZENTRTQwTW1OcVdFaGxabFpqVlVNclFpdENURkpvYlZwSU0wRkNWMFJ1ZEZWaWRFRm9kRUU1WVU4MU5GcDBVbU5hVURCMUwyNTNWemRXZFZGdFEwdE5TM2xMUXk5RWFGaHZVVTlHV1VwcVNYVlRNV3BCVnpGRUszRk9laTh5V1VSQ2IxaHBNakl4YzFoVmRFdEpkM2hhYW1Gd05VbHNTVTFUTkU5V2IwVnhlV1UwWkVJNWFXTlFOVXRtYzFZclFqRmlhR1ZuV0ZOVlJXZGtOekoxSzNWSE5YbHlXSEJaWkRkcVVYQktSV3h2TW1NdlVYSnJlbGMyTlZoSVlqWllXV3htZUZsR1ZVMU9Sa2xwU2psb0wwWkdaakpVU1hKelVIRjFRbkVyZHowOToxLCJUV2xyWlNCQ2IySmhaR2xzYkdFS2JXbHJaUzVqTG1KdlltRmthV3hzWVVCbmJXRnBiQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qTXZNVEl2TWpBeE9BcEtNRk0xTTFWdFZ6SjVZV2hvTVVOWlUxUllMMDVsVTBvcldXdFRWa1ZCVTJkUUwyNUhjVk5IY1VOR1ZUVldUVEFyZVRrdlZXUlpObVE0VmxOS04zVmtVRTgxTTJoYU1tVjRRM2xTU1Nzd1RVSlhPSEJ0ZG1rdmRVd3JValZyZUc1SVlUUnlkSFJ6U201aFNqYzVhVU5uTDJSS2EydFBSM05XZW5RMlRuRTRkVTVrUjNkc1VrUm9kRkpHYlZBdlVqSlRORmMyTURVNWFEWktjRXRsWVRsVlFtNURRVEl4V2paTk4ybzVOVXcwUTB0NVQySTFZMEU0WTBSUVQySkdaV1kwVTJ0cFlWbE9Xa1ZMTWpsR2RqUjBaelkzUVM5blUxUTBRbnBaWWxOc1dtRXpkM1pMYW14RVJGQXlXRFpXTjNGNU5IVkJWVW9yU0ZVeWVYVXhWazQ0V2xCa1dYZ3pVWEpVZFU1cU5YbElNVEpsU2t0SWRFRXJjQ3RLZUVkNk1VTldaRVpDVDBobFNFbExUSFZUYjBkUGFHbzJSVGswSzFrdmFrZGlabGxsYldsSU5WcFNXSFF5Y3paeVJFRm5TRGRES3pSek4zYzlQUT09IjoxLFptVnNhWGdnYkdGdFltVnlkQXBzWVcxaVpYSjBabVZzYVhnNFFHZHRZV2xzTG1OdmJTeFJkVzlyYTJFdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpRb3dNUzh3TWk4eU1ERTVDbFEyZFVJemJHdE1NR05vUm5RNU9YZExkbUZ3ZURFemVFbzBabGhVTkhoSFpHRlNUa3cxY1hCa01XNUpTRWs1Y0ZwNk5DOTJZbU14ZDNBNVJEQmtTRUZ1UzNSVlRFTkpSblZ3TUhoUFV6aFpRVkZwVjBKQk1tNWllVEYyZWxsa05HMXRWMVpxUm5BeFFtNTJkazB2TmtaWVJVaGhlbk4yWW5WQ1NYQnVTamRrVlhCVmMzbE9OR0pwV1hGV2QybFdLMk14TWtWalUxZElOamN6ZDBvMk1FWlJlakVyZFVrMGVYbEVUMk55TVRselJVNDNNa05ZVTA5WmNXcHNSMUJKTkhaWU1qaHNMM2xwYzFwTU1WSlROVTk1VDJwQ1psWk1UamxGVjJkak1IQnJVbHBKVjNOWFRuazJSVlk1VlUxd1dqUm1UblpxVjBONk9ERllTRWRDU0RkU00zZ3ZOV1I0Y0VaT1UybHlOMWxVT1dSWkwxTXhTVFZ2Y0ZKdVdVbDZlbWxCTW5KeFZrRjRiRVphZDFSNWFESTVXRzAwTDJWWmNrVmFWeTgzYkRKSFRrVnVabVp1U0d4YVNEbE9WRlJXWW5rM2RVZGlVVDA5OjEsIlFtVnVJRWgxWjJobGN3cGlaVzVxWVcxcGJpNWlMbWgxWjJobGMwQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNVGt2TURJdk1qQXhPUXBwVDNaYU5YZHdTR1EwVWtKd2NVbzBlVTVDZFZKdVprY3phVEZGV0VWcE5rOWFMMGh1WVRSWWVWQTJZVmh4WTFSamJuQmtPRmxpUW5Gd1FVOXBLMHB2YVRWRVIybHFRbmRVZUdoUlIxQTFkbTVEZVRCSVFsVjBhMVUzWmt0dGQzVTBiSEEzYVU5blYwSXhUbFJxV1V4T1psbzBOUzlwTW5wbmFESXJXRU5xWlVwNmVYTlFVV2xpY1c1TWFVZFdlVkZYY0VsMU5uaE1UMlJ2TWxKa01HRXpZM0I0VG5GNFdVSlJZa1JFWm1sRWNDdHNWV2RWTW05aFVGSkNSek55WVhObFNtMTBkM2h6T0c5V1MyazJhVTlWY0RCV2Jsa3pZMGt3YzJaMk1qWk5PVXc1Y3l0SlRIcElSbmt5Vm5SM1QxVlNPRTFXVlhWSU1tNVFPREk0V1ROSWRXZFdTSE40VDBoTFFrdEdSVzlxY201bE1IRXhSVWRxVm01bU1GTXliWFZpYjFNM2NVRndNVlY1WTFoc1JWQmlka0YwYWxOMVZtTkxUemhpV0d4S2RURXlPR1ZzUnpsSmEwOUpVVTVHT0RZNWVXeExUbmM5UFE9PSI6MSxVMkZ1WkhKdklFUmhjeUJPWlhabGN3cHpZVzVrY205aGVtVnlkSGxBYVdOc2IzVmtMbU52YlN4UmRXOXJhMkV1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlFveE15OHdNeTh5TURFNUNsWXlZams0YUV0QlVUazJVV3gyZDJkdU16WXlVVTVFZUVwUU1TODRlV2t6T1dwSmJYaHVOMHhSV2poTU56UkZWVmhsY0dwcmFuZHZOMll2UkhaTmJIcHVhSHBZV2xOVE4wRk9hMEo1VW5kdmFEQk9jekJCTTFGUlpGbzNWM0ZDWmsxUWVWVk1PWGhYWjNvNE5tNHdNVk5JZVdsbFIzSnlXRGw2VEVWbk4zVlBhRGR4VlU5SlMyMU1XWEI2VlROeVJsQk9VRE5UTmpCdlpuQldaMlpKWkhCaVoxcFhWbTlPZDNCR1pFeEVhemd2YUROeFNtdDFWR2NyVEhGQ2JrcEVlbXhCWkcwMloxcE9jVk56VVZGV0syeFVkM2hLTkZGSlVXVmpaa1YwSzJ4Vk1FZDFRVGhLVTNCU1dqbFRkVlZzVURKWVJuSjJVME54ZUVSRlZqVnhXbXBKVEc5aWVVbHFjbXRVY25ZMWNYaDFabVJKVmxkRlEzRTBaelV6V1VzMFRUZEllREpMVm01NVNXTkNabTlXU0UxcVdURmxNalEzTjBKMFZWUnNVbUpDV0RscllWWjBXbll5VFhaWFFXTnJTa0ZSTkM5RlVUMDk6MSxRMjl5ZVNCTmFXeHNaWElLWTI5eWVXUm9iV2xzYkdWeVFHZHRZV2xzTG1OdmJTeFJkVzlyYTJFdWFuTWdjR1Z5YzI5dVlXd2diR2xqWlc1elpRb3lOaTh3TXk4eU1ERTVDazgwVVd0UlZYaERSVEJoZGt0Nk1qUXpjV1paUVhsVlZYcENaR3h5YTBvMVVHMWhUMUZ6ZG1Fd2NIZ3lXalpCYWpBNVQxVlFNMGhFV1dVMk1sZHlSakZ2VkhrMlNuUTRTRXN5T1VOa2FEaFBkWGhQUmt0M1pUZFllbUZQUTNWRE5YcFVkamxqV1ROekwydzBXVE5HZVc1TEwwSkNZa2hUT1dVMlNUWTVjbEZtYkVVMmNEaHNVbmMwUkV4NFJIRmlNM2x1TTIxNlNrSmxOSE5DWWtKV2JqazFSMHhOZEhoUVJVTnZWWEJwYTNKUVVUYzVVMUpaTVZCMVZWRnBkbEkwU1ZCSlYyOWlSMGRzVkhSSFRsQXdURzR4Y1haNlpYUjRRbWxxZURadVpIRmtVSHAzYVZKVk1tdG9NVTlIUkhkdlFXdHpSVkJKYmpSNFUzSjVlWEZMY3pGd2VHaEVaMEk0U0ZJMlMxQmpTM0k1ZWt0TWJXeHJiV05NY1d0TWVIVkdaVzVRUTJSWk5rVk1lV2xPTUdkQlFWTnVkblZoU2s5RFRHcHhOVTlMU2pCNmEwcFFLMVpzYWxSQmExQnVNa2w0UjNwVVIzWkRkejA5OjEsWkc5MWNtVjVaQXBrYjNWeVpYbGtRR2R0WVdsc0xtTnZiU3hSZFc5cmEyRXVhbk1nY0dWeWMyOXVZV3dnYkdsalpXNXpaUW95Tmk4d015OHlNREU1Q2tOdGNra3hTRmcwUWt0UmFXY3pNbTVOVmtoVlZTdENUbWdyZHpsNmVHSnpiSEF5Y2tsTFZWVjRRbFpUTmxseFRXSXdia2RIUVhodE1HSjRRa0Y2VUdkMWJsaFFXVFpsYjNsUGRGZHlZUzl1UjNaNFUzVk5TVkZVZVV0R05WUlJaMjByTjJRclVXbERjakU0ZFhscVpGRnpPVFp2VXl0V1pHNXhNMk15ZUhobGIxVldiRTVHYTNsSlZrTkdPVE5oVkUwMGJsSXpNbEJyTWpGYUsySmliRFpCYkhsb1MyVXplakZGYVc1WmRXWTRObEJuYWpWMVJrTnVSbTA0TkRGQ1ZuTjNVMVpEZVRSMGExSnhVekUxYmpKbmNXSTNZVkkxUjNoTllUaENTeTgwYzBFM1RqaFFOMGszVlZNNWFuTlNhekZpT0V0S1JsSlhlRkpIVEZwcmRtNVdVaXRWV1hSMmJ6SnhUWFZTWnpZeGMwTkxZU3RsYkVsV09YbHhTMmgzVGtSckwyWk1aVUZ0Y1hsNmMwRXpOR3gwVXpjd1NGVnJkaXRpTkVWRWJtbHVXRlJNU2todFdraE5lVGxJU0hsbll6SjFUbGhXZHowOToxLCJSR0Z1YVd4dklFMWxibVJ2ZW1FS1pHRnVhV3h2WkdWMmMwQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNRFl2TURVdk1qQXhPUXBZYVdGTGNrTm1TUzgxVTBOSE5YWk9OV2RTWWsxdU9WQkdNMEppY2xCaU5uZERZbnBxYW05M2JsbExTRE5aZEVKd2F5dHBlRkFyV0VWamJFeHFRUzh5TVc0MFkwaFNTbEpKTW1sblNGRnNlVTB5VkZweGVta3dOV1Z0ZEVWUlFsRXdZMGRZZHpseVoxbDJhRGhWT1VSNVdHRkhkakZPTnpWeWVIbzRjRUpXUm1NMk1FVmhlRUUzZWtZNFRXSTFNMHhFZGtoaFpYcFdORnBJYlhaalJIRm9RbTlrT1VsSE16VjRlakV4VXpSeEwxUkpVM2R0ZW5OVlZ6ZHZSVVZZTVV3MFkwdHliWHB0VVVGVGJYVjFkVW8zZWxOYU1YZExUM2xVYmxNelFYcG1hRWd4VEhweU1FbHBkMlJ3VDJWeVdFTnRZbU50TDFKNFNVbzVaVFJ1T0RKNk9YcE5jV3A0T0U1SWVHSkpUbE53UVhsdVFuaDJZV1pWTlN0V2RHWkZMMjQxWVdsc1RrNVVPREJGVVhCUk4yaFZTbTlWTmtoWGJGRXJUSHBXYmxVd1IzUkZiamw1WW05bFZrRlRSVmwxZGxscllXbDNRM2M5UFE9PSI6MSxSV3hzYVhNZ1MyVnVlVzhLWld4clpXNUFiWGxyYjJ4aFlpNWpiMjBzVjJGc2JHRmllUzVxY3lCd1pYSnpiMjVoYkNCc2FXTmxibk5sSUNoR2NtVmxaRzl0S1FveE5pOHdOUzh5TURFNUNtRmhXVzRyYlZOVmFDOVhWekZMTVZwR0wwcFZXSFkxWmpWQmVqTXlNblp1UlU5SlRtTTFLMmd3U1RaamJFUkZRMVZaZGpoc1dXSnBlVk40ZVhrclVFTjZNV2N6Tm1rd1JEVlJiRTFoTVdaUlZqTmpSamxwUlVNclUzVkxWM1ZHYzFSQlZUaHpTVWxaVG1GbE1FUlBLMFIyUlhKbGNVRlpiWGRVV1VaQ2RtNVBjMmhLYWpWMlNuaGFaVkZLUVU0MlFWWkdibTFGZVZobmJqVXJhMVZTVDJ3clJHeHBNbTg1YkdWeFQzVXJVbVJGYjNSM2RIVlhTbVZWYVZsUWJrOHlSa3hqTDJOVVdVMDBOSEF2V2s1eVZXTktLMmxSYmt0V0sxcEZjRXAzTVhreVVHTm1SVzVTV1dKVVQyZE1hM1l2WkdGcFZXTjJTSGhrV0RGYU4ySnFjWHBxZVhsMGVXaFRlVXgwZVRaSU5FRk1PWEpQZW5VNVdHMXRVbTlLY3l0dlNsWnRZMVJrUldJNWQwNHlNMjB2ZW5Ca1RuTjFSSEp0YUVGV1oyaEtVRTV1WW1GNlEzWnhiMFk0V0M4dlIzVkNTSGRRT1RCRVp6MDk6MSxVSEpoZG1WbGJpQktZWGxoYTJGeUNsQnlZWFpsWlc1cVlYbGhhMkZ5TjBCbmJXRnBiQzVqYjIwc1YyRnNiR0ZpZVM1cWN5QndaWEp6YjI1aGJDQnNhV05sYm5ObElDaEdjbVZsWkc5dEtRb3dNeTh4TUM4eU1ERTVDbFJ3YVhwemEwUkNaWGxFY2s1VFowcEtNQzlPV2tkaFNtVnFkRVJvTTNOdWVGcHRXamQ0YldSR05XbDRRa2xYVkhweVprMDFZVGROWnpoRlZXeFVOR1JEVFdJMFlqWjJjR2c1UmtaVmRWSktkVVVyWVVwRE1ubzNMM0JvZVd0alNtdFhhaXRwYURaVUwybHpPR1JrVERrelpVMUhaemRFTmtORWJFWlNVaXQ1ZUZwVFV6TlhabFo2YVZsUWQxa3JRWGRpVDFSM1Qwa3daWGxuZVhoNWVGUTVkSEJzVlZkdlFVOTVNbEJxWlc5M09IQTNSR0pRYWpac1VrRjZUR0ZpWW5GdVdWYzFOV001TWpCcFlVVldXRWRpWW5jclEwWTFURUl4UldocFpHUjRaMmRwYmt0blpucDFla1JDZW1SWVJVMDJOR1ZvZGpOSU4yNWxWVmwyYUVwVFdITnlia1V6VGtkMFZVZE1LMGd5YTFkelV6UnRPR3N5UW5wb2RDOWhWSEI0U0U5bU9FSmpNRFpuTnpGbUwxZG9TVFpXWVZRMmFGbElTR0lyTUVaMVlWTkVRa2hwWTJsNVpFRmtOemhTTUV4NU4wZGpaejA5OjEsIlIzSjZaV2R2Y25vZ1RYVmphR0VLWjNKNlpXZHZjbm91YlhWamFHRXViVUJuYldGcGJDNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTVRrdk1EVXZNakF4T1FwUFYwNUtXSFpPYjFkSU0wVm9jVTg0UldONVZ6SldWemxVYTJSdlZGWlRibHBHV0VsRGIwVndVaTlLUTFSQ2VrWjZXblV2TUhSa2NWQlRWbXBsVUhWdmJrdEdhelpMYW5ORWNXUnVTM3BoY1RGc1ZrSndPR2huUTFoNWJIUk9WbFJTY1RjM00zQndTVXN4UlZjMVMzRldhMlZtTjJRelRreE5UbVpxUkRkWVRVVkhaVFJKYWxSSGNVUm9SVFpRYm14TFlrNHZUbEV5ZW5CclVtZE9UbTVXTkVWT1VIRmtNRzF2YmtoV1lVRlliak5pTlRFeVkweFhiWGRXWjB0aE5tVlhZM0JrTm1WeVVGTnRjakJuWlRaTE5EVlRjMnRWWVdodlJqQnRjRXMyTTIxS1Z6WnVUbVY1Ym1aVk5scElRbHB1VGtkRVdsY3hXSFZKTUVNclYxaEVVRzVUZVU4NUwxbHlVWFJIWmxkQ2RWTmthVkJCSzI0MVN6VlZhMjFxTjJkRlJra3dUVE15UkU4NGNteFVSVzA0TjJkSVduWkthbEpGTHl0YU5EWkJWMkY2T1dKVFFXODJTV1ZLVTJVMU9XbDFUbUZzUzJjOVBRPT0iOjEsIlUyRnphQ0JPYjNKMGFXVnlDbk5oYzJodWIzSjBhV1Z5UUdsamJHOTFaQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qRXZNRFV2TWpBeE9RcEtZMEkwU2tnMFZtRXhSMWRqWmk4dlVVbDBiakpsVUdoaU4yNUhPRlUyYW5VNVJrVXdWakl5VjBZeVJXeGlNVWc1ZDJaS1MyUnZOMjFhTXpsYVZYQkpkVE5rTkU1QlIwMVJjMWRsWTFWTFoyVkhRVUpEWTNwTWQyaFVhM0phYkdKNVFtSm9UbXhrZWpWMk9VbG5kVEZXTkd4U1RrbExjRkV3TVhsbWRtbG5hRloyYmxreE5IUk9ka1poY1U0M1pVMXdTa3dyTjJjM1VYWTBNR2xzVkRKbk5UbG5MMFJGWjBzNWVXaFlTRkJXTHpWNllWVXdTRUpYUTNGdGNrdGxNVkpMUTFaMVl6bGtNQ3RSZEZkSlRGaFRXSHBhYm5selZ6bDJXRFF4UlRWeGVtOUpSM1l4V2k5Q1VGaG5OR1JFYkZwNllrSTRiREJxTW1SSGFWUkNOMHR4VVZOTFEzRkVlVFJGZERnek9YUldaV2xXZWpkSVRHcFFSREpUT1RVM04yTk1RVmhrYWtaUVNDOUdSbmxTVkVWelQwZ3ZVV3N6VDJNclZXSmxTWFpZVjBoRGNIVjZkbnBQYlhSS05HOVhlbEJEYTBwck4yYzlQUT09IjoxLFJXeGxZM1J5YjI1cFl5QkJjblJ6SUVsdVl5NGdJMmhzZFRFNENuUnpZMmgzWVhKMGVrQmxZUzVqYjIwc1VYVnZhMnRoTG1weklHTnZiWEJoYm5rZ2JHbGpaVzV6WlFveU5TOHdOQzh5TURFNUNrZDZPV0pqVlZrMmQxWXdSMDFDZVZaaGFFWkJWRVJ3VlZselVrMWpNRE5RZW01TldYTkZORGxYTWtSTGRUaHJhbFZEVlRoVVpEQXJLMGx2TjFwQk5rMUpOSFp4VEc1c1RWVjZZbTh3YlU1cFRtaGhLMHAxVDBaekwyUnRUMEZIYW5BcmN6TjFaSGRKYlV0clNVODJSamhXU0hSWU5FMXFTV2xaYWtJeFJqSnlVWEJVVkROT05uVmhPSGg1V25obGFraHpSR2xPVG5ob1Jra3djbmRzTkZSVldqZFZObGQxWjNkVFpGTkdNVTAwVG1kdk9WUTVZbFpwZVhsWlNVRTBLMnRRTjFkVGFrOTFNSGRhYjBsQ2RtTmpTMWg0WW5kcU1FRm1ZalIyY0c1Wk9UZEpLMlpoWTA1TGVqUXJTelJLYkVFeVdXaHpNemhXT1hsWFp6WmxkQ3RXWXpneWVtVmtjREE1ZEZvNGRFUjBWVFpuYzA1TU1UQlFPVlV5YVV0Nk1qa3lSSFJSVlRaV2MzUkZZMHdyZDJneFNFcFBNREpJTW1OUVdXRjBTRmhaY0ZSRlNtSkphVTEwVlVkQk56aGhVa0V3TTJsc1VUMDk6MSwiUVhOb1lXNGdSR1Y2YjNsellRcGhiSFJ0WVdsc05UVkFaMjFoYVd3dVkyOXRMRkYxYjJ0cllTNXFjeUJ3WlhKemIyNWhiQ0JzYVdObGJuTmxDakUzTHpBM0x6SXdNVGtLU1cxUFVXaFlVa2t5UW1wdlRrNUtVVXh1V0d4QlZsVlNhVEJNY2taWlRubE5ZMFUzTkVRMmJuSlpVSEJTY2pBd2IyVktWMHR6UlhSaU1UTm5USHB5YVhCWmJFaEpZV2hOWkc5NGNWTjNSSFZFSzFWSE5FbDZUemRDTkdGT00yeDNlbGhISzFGdVJHRjBRMFUyY2l0S2EzZzFUa2h4Wnpjd1VGZElSVlUzWlRGcFRVVlhhemsxUlRCdk1WaFBaMDkxYmtWTVJGRXllRlV3V2pkYU5YRXhTbFpPYUhOV1pGWlVWekJVYkhkTFRFUk1ZV2xLYWpGRWRVdzJRbTlVVmtObmNYQjZSRGx6YjBJNWVYWkRaRkpuUmpWc2VWZHRhVWsxUVVoaFZsQjJkRE40SzFnd1ZqRjNlVVpUYVhaQlpXVTFaVGRyUVVsRmMzTmthak5GVEhsd2MyaGhSVFZ2TlVWT09EaDFLMDVvUlU5d1V6QkJVVmxsV1ZGbFFWRXliRlpoZVdkV05GcERja2ROY1ZoMlNVMDJSV3B0ZDFCM1pFTk1LM1p4UzBsalJsaE1iUzkwTHpsNmVXMWtVbFo2Y0ROalNEVk9Xa2gzUFQwPSI6MSwiUTI5c2FXNGdRbVZzYkdsdWJ3cGlaV3hzYVc1dkxtTnZiR2x1UUdkdFlXbHNMbU52YlN4WFlXeHNZV0o1TG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVZ0tGWlRJRU52WkdVcENqRTBMekV3THpJd01Ua0tZbU50U1ZOdFJscENSSGRtZGk5aWVEZERkV3g0TTBoQk5XdFFPRFJIYVZWUWEwaE9OazlOVVc1NGRGcGthRVJEVUZRMWFGUk1kMFpxVG5sNVZIVmFiMDUzVFhkaFZrUlhNRXRUYkRoTlZVUmhiRTFxTVdsRlRHUXhSa1pwVjBkQ2EwcDBVVWQyVTNKdFpHbEpWbU0wUjNFd00yZzFjM2RuTjJVek5VNHdTa1IyYVZORWFXNTFWREp0UkVzeVkyWXZNRzVZYkZKSmFGaGpjWGMzZEVoT1drUjFRbWt5VmxKa2FuTkVTSE5rYmxaT09UWTFhM2hHUldOdVJYZFVSREZrTUZKUmVqVkNNa2xJVG1GbE1sSnVaR0pFVG01bU5FMWhPVkZYTVZCcU9GZGhNakprZGpVd1NFaHlWV3RtWWpCWlQwOXpXRzE2TVVNMmFWZGFaMHREUTBJd1lsbFNkUzhyVlVoU2FITnVkRzFFYWpZclNtVXZkVzVLWTJKUE9XODRNbEptZUhKcVdqSXdjRlF5UkZwaVprVnZVbXROY2l0ck1WVXdaM2hwUkZGWVVWRkNibWRQYm5Rd1EyZGFkRXN4VW1SQ1EzTm5QVDA9IjoxLCJZbkpwWVc0Z1l5QmlkWEp1WlhSMENtSmpZblZ5Ym1WMGRFQm5iV0ZwYkM1amIyMHNVWFZ2YTJ0aExtcHpJSEJsY25OdmJtRnNJR3hwWTJWdWMyVUtNRGd2TVRFdk1qQXhPUXByUjBabVRFVlBkbFJ3ZDA4d1UzbG9aMlprVG0wcmRXaEplVEpuU2xWSFZHUkVSVE5WZERGRVZuSlVTelpxVld0T00waFdWRXhTUkM4MVlUWTNaVlozYm1ka1REaEtaV0oxVFhkVFJtOTRlVVJXVXpObFZVdHNhM000UTFSclZ6VXZUa3hDZUVRMFVYTkthelZWWTAxRGJGRm1Zbm96Yld4M05YUm9SbEp2TlZGMFRWRm1SbFZsZUhKMGMyaEtiSFJSWTNSeU9XRTBaVnBCY25KbkswTkhXRk0wTjB3NGIzUTRPVVpWVTA4eFNUVnJaVUpOU1VvM2QyOWFVRzlKTmtGWmNVNXhaRVZyU0RBclNUQTFSVGhoYVdGaFJsaFRRMHRPYjI1dFNraHhkM0F2WlRWNmNqQmxNalpKVW5WS1RUVllhM1ZOYm1FeFVFcE1ZWGxPYmt0WFltdG9jRVI0UVVkQmRXTXhWSFJuYURWYVJrc3Jja3BHYTFGdk5rbGxaWEoyY2pKTVRWTnJObGhWU21kM1VHaEZibmt5VTNCdWNXNXpRbkpwYlVodmFGUkdWMjFSY1RKV04zRm9jbE13Ykdwc1lrbE5ZMmM5UFE9PSI6MSxVM1JsY0dobGJpQkVaVzFoYVc1bENuTjBaWEJvWlc1a1pXMWhhVzVsUUdkdFlXbHNMbU52YlN4UmRXOXJhMkV1YW5NZ2NHVnljMjl1WVd3Z2JHbGpaVzV6WlFveU1pOHhNUzh5TURFNUNrTm5aazlxVms1UGVIbG5lR3RPVUVaNFkzQTBhR1ZrWldZMk9Ia3hZV0pWUlRWa1dWTkZXRkoyVFdkUWNVUmhWMjVVYTBRMWNVaFhhV1JqZHpKaWFWcDFLeXMzVkhZM1J6ZzJZM05YVGpSYVVHSk5hV2xNY1cxYVZtOVBLM0ZLTVRkNk4zRkNUbFF3T1dOU1NEaExXbWhtUWs1Uk1EWTJiMGhPTURWblNVcEZRM2x2TTBaaWNUQkZPVFJhT1VSQ1FrSnNWMk5HZDFrMVdqRjZTelU1V1dVNWJXWnRWbkppZDFGblkzZGpiVFZhTUZwWFZHbHdhVkZsT1ZkV1FtOHhhVXR3ZFZBelowZEVPREJQTDFaTFpYbEdTbkZMTmtOWGNqWmlObVZrTHpBM1dUUmhjR1JDVG5FclNDdGxhbWxOVVRkS1kwWmpTVlI1VTNCR2JqSTNTRFpKY0RFdlJXeFRVRVJVY1ZvMU4xSjBjUzlIYW5abVZqbFNVRGxCZEZSUU1uRkdNbWxFVXpGbVRXOWxRbTR3T1hKWmEyVTFaVFp2Y25Sb1l5dG1NMWxVTkZCQlVtTmpXbGxwYnpGWmVVNUllVEJLWW1GTmR6MDk6MSwiVm1scmRHOXlJRUoxY21SNVpYa0tkbWxyZEc5eVFIRmhjM1Z1Y21selpTNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTWpRdk1URXZNakF4T1FwdE1FUkRiM1JWVGxrdksyRmxTSGhsTUhaTlRWQmlhRGd5VWxRMlFrWXhheTl1ZWpWS2QxbEtWMVY0UzBWTlZqZGhialpWYUhOTFkycGtVRFJxVlVOaGVHaDJXbXhGZUc5aGFFTkZNWG80ZEhGMk5YVnVVbTFVV1ZsRmMwRnJkRkpRTUV0RlpUaHhZWFJsVFVad1oxbDRSRGgxWVZobk1FOVNSbkpOUmxNNWNGUjZValZNYTJjd1dubElPRnB1VjBWVk0wTnVSVE5JVG5oTFJrZENjRmxSUzB4cFRWa3lTRGRJU0VGR05rdzRWVEYwZG1GcFYyTXZNMXBhYlRCcmIyZEpUeXRJZWs1eEszcGlNVEYwYkM5WmMxUk5UMDV4UW13NFJuQkRiMVF2YmxOdmRtZHpRV1pKVkdaQ1dVVlhlVko2TDB3eFVrUnJia2hqZDB3d1dHY3ZlREp6UTBwdllqQjFTM1UyUjB4RU1tRmxXVTUxYWpndlEzVnNOSEZVY1c1bWRqSkVORkpJTjNsWGRqVllhMlZKYTNsUE1tVkRUbTVzY3pnMVJWbFlVV2R6TVhwM2NVWkhibVUyWVRKRFdsZFBUMGx3UmtFOVBRPT0iOjEsIlRYVm9ZVzF0WVdRZ1FtbHNZV3dLWW1sc1lXdzVORFZBWjIxaGFXd3VZMjl0TEZGMWIydHJZUzVxY3lCd1pYSnpiMjVoYkNCc2FXTmxibk5sQ2pJMEx6RXhMekl3TVRrS1RFUnlkMU0wU0hSd2F6WkxXRnBMTVc5Q0sxVmtVMDg0Y2pKRlprOHJSM2Q1V1VFMlRUZDFUV1pXYkhKbUwycGFObWQ2ZGtRMFpDdGlja2xTU1ZsSGFsVTJVVGhETDFWUksweFVaa2h1YVVGQk5uUjRWR1ZvVERGaFNrNTBXVmxKU1VSSWEyUmtOblJaWVRodlptUXJjRWhFZFZGdWVFVlNWR1UwVm1oVlkxUnpMME5FVUcxWVRtMXNhMlJDYjB0bGNHNVVNVFJNYmsxSlVuUnhXWHBvVjBSQmNtVTJZa1ZHUWxKMlRYbE9aSGxvVlRCclkxZ3dlSGxrYkRCbGJYWkNSbE5FYm1OeE5VSkpjVXhsVjNWaVJqVkdhRXBQYjFWR1J6aEJVV1J2U3pKdFkwcEJRbEZCUjFCcU9HcHVjV3hrVkdSdWJuZ3lhalEzTmxRNE1qUk1XbGhNUkVoVlJEVlBjWGRzYUcxQ2IyWkpaVU4yYzJkV2QwOXNiVmhDWlZCak1IZEViRmRSTDJkc1JVWnJOR1ZRU25SUE5Ha3dXbEUxTkRsck5XVnZhRGxYYm1KaFZHUnVhWFpuVVN0MVFVNXlXRTF2UlhWQlBUMD0iOjEsIlNtRjVJRXhsWlFwcWFHeGxaVEV5TjBCbmJXRnBiQzVqYjIwc1VYVnZhMnRoTG1weklIQmxjbk52Ym1Gc0lHeHBZMlZ1YzJVS01qY3ZNVEV2TWpBeE9RcEhNa1F3TVNzek1UUklNRGhKY0dkeVJFdFZZbEpsUzBNdmJqTlNkRWd5ZFZOd2FEUmxTV3BJT0dRdmIwUkthMGhIUkdNeFNEaEJPVWx6UzFSRldqTlVhelZ6TURaUVEyWTBhVkJ1Y1U1elQyMXZiemMxYWtkQlREUjBjRTFUTW1aMFYxQlVTMnh2U2taUE0wMTJkMDVsVVhGRk1FZzNTelF5Tkd4NGVIRk1aa2xyZW0xWWJHdDBaREkzVDBReFVYcGhjM1ZMWlVwemJXaEJiR2xNY1ROdk56WjNWbkZJUW01T1JXTmhiR3BOYjFOUk9TdHBNaTh4UkdKa1JHbERVV0phTlZSb1JYQkxTbGxzVkU5WlR6SmhVa0pHU25NMFdYRlJXRVJyYUcwclNXbEtWV2RFWkN0TFFrdE5NRzFTZWxFclFrNTRia0pTUWxWVFNFRTVkV1JYV0RVdldscFdXbU4zYTNaQ1pURnpUVkVyWms5cVFYRlFlVkYwV2pBcmIwbFZOMjR2UW1sM1UwVkdSMXBpYlRKalZqaExUbGhpV0UxWk5FeDROR2dyY1VObldsbHZVbEZLV25OUFFXdDFTMFpoTDFneU9WRTlQUT09IjoxLCJVMlZoYmlCTllXZHBiZ3B6WldGdWJUQTNOMEJuYldGcGJDNWpiMjBzVVhWdmEydGhMbXB6SUhCbGNuTnZibUZzSUd4cFkyVnVjMlVLTURNdk1USXZNakF4T1FwbU1qaFhWemxRTWt4S05EWTVPR2gzVDJzNFZqWnZZa3RKTVRkNWFFUnpNazlzUkVOVFoyNUhMMmMyWmsxTGVtMDFMM2xDWlhNcmJrNU5kbkZaUmpSdE9FUllTRWh1U0VsM1ppOUVZVmxMWlM5S2RsbFdjR0ptZUdWTlJuTXZMMDU1YlU5RGJrZGxSalJEV1VSSU5YTlZXR1UxU1U0MVMxZFBlbVUwTDIweFozQndOMjA0ZGpKVFpEWkhUVEUyUVVjdlNFSlZNMnB2WmpWd09DOVpZM1pxTm1SSFJXd3ZhM012YkRJdmRWUmtOakoyVm5ZMmNreFpiSEZ6TTA5RGJscFllWFZpZDFSM1VEVmhXRkZQZEdabFJFa3dZMFZNVUcwMGEzQTNiaTg0Y1hVd1VWWkdValpDVmk5RlNVeDBURFZOVVVOa0wzWmFNM0JyVVhSV00zUTBhUzk0T0ZNM2JWcFVUekpxVkV4MmEyTjFhbVZwVlU5VVRWQXJhVWxTSzFSMUwxaDNha2s0V0dsR1QwOUVUbUV4ZVhsVWQzaEdWSEV2TTNkUlpGVndVSGxFWnpGUkwzWkZUQ3RYU1c5V1oxRkVWMUJWWTFFOVBRPT0iOjEsUzJGcllXOGdRMjl5Y0M0Z0kzUjFjemx5Q214cFkyVnVjMlZBZEdGdVozVnVjMjltZEM1amIyMHNVWFZ2YTJ0aExtcHpJR052YlhCaGJua2diR2xqWlc1elpRb3dOQzh4TWk4eU1ERTVDazB3VEV3dmJtUXlRMlJ1YTFsYWRpOUliak5wZFU0NFVXVnFjaTgyYkM4eE1TOXFRbUV2VUhGblIyTnlVMlZTZW1WV01FOUxSbVJDVjJoUlEzSXdaR0p5U1VkcldGUjJhU3QyYjJvNWFFaFBSVEZwWlhOTlQwdDRlR3BKWmk4MFFUSkdSMjByVUhaU1EwcHNiSFF6ZURCcFNXVlFUR3BNVGxGblNrVnNkV1kxU2tabFdFaHBjVFEzWkdWa1NIVXZRVzVCWXk5eFlsRjJiVU5TYkRSdVNraFFOVUZhTVhoeGJqbERRblEyYjFkQlJqWjJibU01VURGVFNGWk9WMGRXVFVoSFoxbEZWVXBWY1ZwYWF6ZzBhVXBoZWxrMlkzWjNaVFZHUzB0MWFUVTJVbTFtVEhKa1NXNVlWakZoWW5SNVltVlZRbWd2TjFablpuTk1la3h0TldoTFowMXJkbnBDZGtOSFdDdEJXRXRtUkd4SWVtSnBLM1ZJV2pOM2MzRlJPVEZRTm5oamNWRTBjMjVNUjNNMU9VeHhWRmRVVEZvNFRVODVjV3BpVHpOM2JGTTBiR2MyWjJKeE9HOUdNa1ZVV1M4d1NtdHVaejA5OjF9O18uZWFjaChiLGZ1bmN0aW9uKGUsdCl7dHJ5e2JbXy5ydHJpbShtLnBhcnNlS2V5KHQpLmxpY2Vuc2VTaWduYXR1cmUsIj0iKV09MX1jYXRjaChuKXt9fSk7dmFyIEk9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihlKXt2YXIgbj10LmNhbGwodGhpcyl8fHRoaXMsaT1uO24uX2RpZmZNYXRjaFBhdGNoPWUuZGlmZk1hdGNoUGF0Y2g7dmFyIGE9ZS5Qcm9qZWN0O24uX3Byb2plY3Q9bmV3IGEoZSksZS5xdW9ra2E/KFM9NmU1LHc9NSxEPTIpOmRlbGV0ZSBwcm9jZXNzLmVudi5xdW9ra2Esbi5fcXVva2thPWUucXVva2thLG4uX3F1b2trYUVkaXRpb249ZS5lZGl0aW9uLG4uX3Byb2plY3Qub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKHQpe2lmKCEhZS5xdW9ra2E9PSEhcHJvY2Vzcy5lbnYucXVva2thKXt2YXIgbj1pWyJwcm9qZWN0OiIrdC50eXBlXTtuJiZuLmNhbGwoaSx0KX19KSxuLl9mcz1uZXcgdShuLl9wcm9qZWN0Ll9sb2NhbFJvb3QsZSksbi5fbW9kZWw9bmV3IGgoe2ZpbGVJZEJ5UGF0aDpmdW5jdGlvbihlKXtyZXR1cm4gaS5fZnMuaWRCeVBhdGgoZSl9LHByb2plY3Q6bi5fcHJvamVjdCxhbHdheXNTZW5kQWxsTGluZXM6IlZTQ29kZSI9PT1lLmNsaWVudHx8bi5fcXVva2thJiYiQXRvbSIhPT1lLmNsaWVudH0pLG4uX21vZGVsLm9uKCJtZXNzYWdlIixmdW5jdGlvbihlKXt2YXIgdD1pWyJtb2RlbDoiK2UudHlwZV07dCYmdC5jYWxsKGksZSl9KSxuLl9wcm9qZWN0Ll9tb2RlbD1uLl9tb2RlbCxuLl9yZWFkRmlsZVN5bmM9ZS5yZWFkRmlsZVN5bmMsbi5fd3JpdGVGaWxlU3luYz1lLndyaXRlRmlsZVN5bmM7dmFyIG89bCxyPWwuY3JlYXRlVmVyaWZ5LHM9bC5jcmVhdGVIYXNoO3JldHVybiBsPXtjcmVhdGVWZXJpZnk6ZnVuY3Rpb24oKXt2YXIgZT1yLmFwcGx5KG8sYXJndW1lbnRzKSx0PWUudmVyaWZ5O3JldHVybiBlLnZlcmlmeT1mdW5jdGlvbihuKXt0cnl7dmFyIGE9by5jcmVhdGVIYXNoKCJtZDUiKS51cGRhdGUobikuZGlnZXN0KCJoZXgiKTsiNzk0NzlmZTk0ZmNkMmJkOWYxNDFhZDE3MTdjMzUyODIiIT09YSYmIjY2NTcxMDlmYjQ0MjYzM2Y0MTJmMTI4Nzg4ODcxOTYwIiE9PWEmJiJjYzQ4ZmRjOTFkODgyNWNhOTdiMzFjNTVjYTAzNGQ0NiIhPT1hJiYiNDdhYmZkZmE3YmNkNDE2ZTBmOWM2OTk5MWVjMWY4OTYiIT09YSYmIjA3ZWQxZmM2YTNhMzJkNjYwOTlmZTE4NzBjODNhMGNlIiE9PWEmJmkuX3RyaWFsTW9kZSgpfWNhdGNoKHIpe31yZXR1cm4gdC5hcHBseShlLGFyZ3VtZW50cyl9LGV9LGNyZWF0ZUhhc2g6ZnVuY3Rpb24oKXtyZXR1cm4gcy5hcHBseShvLGFyZ3VtZW50cyl9fSwoIWUucXVva2thfHxuLl9xdW9ra2FFZGl0aW9uKSYmbi5fdmVyaWZ5TGljZW5zZShlLnF1b2trYT8iUXVva2thIjplLmNsaWVudCxlLmxrcCxlLmNsaWVudCsiLSIrZS5jdiksbi5fY29uc29sZU91dHB1dD1bXSxufXJldHVybiBpKG4sdCksbi5wcm90b3R5cGUuY29uZmlndXJlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gZS5fcnVuSWZWZXJpZmllZChmdW5jdGlvbigpe3JldHVybiBlLl9wcm9qZWN0LmNvbmZpZ3VyZSgpfSl9LG4ucHJvdG90eXBlLmZpbGVDaGFuZ2VkSW5FZGl0b3I9ZnVuY3Rpb24oZSl7dGhpcy5fZnMuZmlsZUNoYW5nZWRJbkVkaXRvcihlLnBhdGgsZS5jb250ZW50LGUuY2hhbmdlRnJhbWUsZS50cmFuc2llbnRDaGFuZ2UpfSxuLnByb3RvdHlwZS5maWxlT3BlbmVkSW5FZGl0b3I9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fbW9kZWwuZmlsZUJ5UGF0aChlLnBhdGgpO3QmJih0Lm9wZW5lZEluRWRpdG9yKCksdGhpcy5fZW1pdERvY3VtZW50TGluZXModCkpfSxuLnByb3RvdHlwZS5maWxlQ2xvc2VkSW5BbGxFZGl0b3JzPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX21vZGVsLmZpbGVCeVBhdGgoZS5wYXRoKTt0JiZ0LmNsb3NlZEluQWxsRWRpdG9ycygpfSxuLnByb3RvdHlwZS5ydW5UZXN0cz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49ZnVuY3Rpb24oKXt2YXIgbj10Ll9tb2RlbC50ZXN0c0J5UmVxdWVzdChlLnJlcXVlc3QpO3QuX3Byb2plY3QucnVuVGVzdHMoe3Rlc3RzOm4ubGVuZ3RoJiZufHx2b2lkIDAsZXh0ZXJuYWxGaWxlQ2hhbmdlOmF9KX0saT10aGlzLl9wcm9qZWN0LnNldHRpbmdzKCksYT1lLnJlcXVlc3QmJmUucmVxdWVzdC5leHRlcm5hbEZpbGVDaGFuZ2Usbz1lLnJlcXVlc3QmJmUucmVxdWVzdC5pbnN0YWxsUGFja2FnZTsKbyYmaSYmaS5xdW9ra2EmJihpLnF1b2trYS5pbnN0YWxsUGFja2FnZS5hbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlc3x8by5wbHVnaW4pJiZvLm5hbWU9PT1tLnZhbGlkUGFja2FnZU5hbWUoby5uYW1lKSYmaS5xdW9ra2EuaW5zdGFsbFBhY2thZ2UuY29tbWFuZD8odGhpc1sicHJvamVjdDpidXN5Il0oKSxjKGZ1bmN0aW9uKCl7dHJ5e2lmKHAobS5mb3JtYXQoaS5xdW9ra2EuaW5zdGFsbFBhY2thZ2UuY29tbWFuZCx7cGFja2FnZU5hbWU6by5uYW1lfSkse3N0ZGlvOiJwaXBlIixjd2Q6by5sb2NhbD9wcm9jZXNzLmN3ZCgpOm8ucGx1Z2luP2kucXVva2thLmdsb2JhbFNldHRpbmdzRGlyOmkucXVva2thLmluc3RhbGxQYWNrYWdlLmRpcn0pLG8ucGx1Z2luJiZvLnBsdWdpbi5lZGl0Q29uZmlnKXt2YXIgZT1KU09OLnBhcnNlKHQuX3JlYWRGaWxlU3luYyhpLnF1b2trYS5nbG9iYWxTZXR0aW5nc0ZpbGUpKTtlLnBsdWdpbnM9Xy5pc1N0cmluZyhlLnBsdWdpbnMpP1tlLnBsdWdpbnNdOmUucGx1Z2luc3x8W10sIV8uZmluZChlLnBsdWdpbnMpLGZ1bmN0aW9uKGUpe3JldHVybiBlPT09by5uYW1lfSYmZS5wbHVnaW5zLnB1c2goby5uYW1lKSx0Ll93cml0ZUZpbGVTeW5jKGkucXVva2thLmdsb2JhbFNldHRpbmdzRmlsZSxKU09OLnN0cmluZ2lmeShlKSksdC5fcHJvamVjdC5yZWxvYWRRdW9ra2FTZXR0aW5ncygpfW4oKX1jYXRjaChhKXt0Ll9lbWl0U3RhdHNVcGRhdGUoYS5tZXNzYWdlKX19LDApKTpuKCl9LG4ucHJvdG90eXBlLmluc3RydW1lbnRlZEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToiaW5zdHJ1bWVudGVkRmlsZSIsaWQ6ZS5pZCxkYXRhOnRoaXMuX3Byb2plY3QuZ2V0SW5zdHJ1bWVudGVkSmF2YVNjcmlwdEZpbGVDb250ZW50QnlQYXRoKGUucmVxdWVzdC5wYXRoKX0pfSxuLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZzLnN0b3AoKSx0aGlzLl9wcm9qZWN0LnN0b3AoKX0sbi5wcm90b3R5cGUudW5jb3ZlcmVkUmVnaW9ucz1mdW5jdGlvbihlKXt2YXIgdD1lLnJlcXVlc3Qsbj17dHlwZToidW5jb3ZlcmVkUmVnaW9ucyIsZGF0YTp7fSxpZDplLmlkfSxpPXRoaXMuX21vZGVsLnVuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3QodCk7cmV0dXJuIGk/KG4uZGF0YS5yYW5nZXM9aSx2b2lkIHRoaXMuX2VtaXQobikpOnZvaWQgdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigiaW5mbyIsIkFjdGlvbiBpcyBub3QgYXZhaWxhYmxlIGZvciBmaWxlcyBvdXRzaWRlIHdhbGxhYnkuanMgc2NvcGUiKX0sbi5wcm90b3R5cGUubGluZVJlcG9ydD1mdW5jdGlvbihlKXt2YXIgdD1lLnJlcXVlc3Qsbj17dHlwZToibGluZVJlcG9ydCIsZGF0YTp7fSxpZDplLmlkfSxpPXRoaXMuX21vZGVsLmxpbmVSZXBvcnRCeVJlcXVlc3QodCk7cmV0dXJuIGk/KG4uZGF0YS5yZXBvcnQ9aSx2b2lkIHRoaXMuX2VtaXQobikpOnZvaWQgdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigiaW5mbyIsIkFjdGlvbiBpcyBub3QgYXZhaWxhYmxlIGZvciBmaWxlcyBvdXRzaWRlIHdhbGxhYnkuanMgc2NvcGUiKX0sbi5wcm90b3R5cGUubG9jYXRpb249ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXF1ZXN0LG49e3R5cGU6ImxvY2F0aW9uIixkYXRhOnt9LGlkOmUuaWR9LGk9dGhpcy5fbW9kZWwubG9jYXRpb25CeVJlcXVlc3QodCk7aT9pLmZpbGU/KG4uZGF0YS5maWxlPWkuZmlsZSxuLmRhdGEubG9jPWkubG9jLHRoaXMuX2VtaXQobikpOnRoaXMuX2VtaXROb3RpZmljYXRpb24oImluZm8iLCJDYW4gbm90IGxvY2F0ZSBhIGZhaWxpbmcgdGVzdCIpOnRoaXMuX2VtaXROb3RpZmljYXRpb24oImluZm8iLCJDYW4gbm90IGZpbmQgYW55IGZhaWxpbmcgdGVzdHMiKX0sbi5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5yZXF1ZXN0LG49e3R5cGU6ImVycm9yIixkYXRhOnt9LGlkOmUuaWR9LGk9dGhpcy5fbW9kZWwuZXJyb3JCeVJlcXVlc3QodCk7aT9uLmRhdGEuZXJyb3I9aToiZmFpbGluZ1Rlc3QiPT09dC50eXBlJiZ0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJpbmZvIiwiQ2FuIG5vdCBmaW5kIGFueSB0ZXN0IGVycm9ycyIpLHRoaXMuX2VtaXQobil9LG4ucHJvdG90eXBlLmNvcHlUb0NsaXBib2FyZD1mdW5jdGlvbihlKXt0aGlzLl9wcm9qZWN0LmNvcHlUb0NsaXBib2FyZChlLnJlcXVlc3QpfSxuLnByb3RvdHlwZS5leHByZXNzaW9uc1RvRXZhbHVhdGU9ZnVuY3Rpb24oZSl7dGhpcy5fcHJvamVjdC5leHByZXNzaW9uc1RvRXZhbHVhdGUoZS5yZXF1ZXN0KX0sbi5wcm90b3R5cGUubXV0ZU5vdGlmaWNhdGlvbj1mdW5jdGlvbihlKXt0aGlzLl9wcm9qZWN0Lm11dGVOb3RpZmljYXRpb24oZS5yZXF1ZXN0KX0sbi5wcm90b3R5cGUuY29udGludWVUcmlhbD1mdW5jdGlvbigpe3RoaXMuX2NvbnRpbnVlVHJpYWxTZXNzaW9uJiZ0aGlzLl9jb250aW51ZVRyaWFsU2Vzc2lvbigpfSxuLnByb3RvdHlwZS5nZXRGaWxlTWVzc2FnZXM9ZnVuY3Rpb24oZSl7dGhpcy5fbW9kZWwuZ2V0RmlsZU1lc3NhZ2VzKGUucmVxdWVzdCl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OnByb2plY3RDb25maWd1cmVkIl09ZnVuY3Rpb24odCl7dmFyIG49dGhpcztvPWUoImRlYnVnIikoIndhbGxhYnk6ZXh0ZW5kZWQtY29yZSIpLHRoaXMuX2VtaXRQcm9qZWN0Q29uZmlndXJlZCh2b2lkIDAsdCksdGhpcy5fZnMuc2V0dXAodC5maWxlcyx0aGlzLl9wcm9qZWN0JiZ0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCkpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIG4uX3N0YXJ0KHtmaWxlczpuLl9maWxlc0ZvclByb2plY3QoZSl9KX0pWyJjYXRjaCJdKGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBzZXQgdXAgcHJvamVjdCBmaWxlIHN5c3RlbTogIituLl9lcnJvck1lc3NhZ2UoZSkpLG4uX2VtaXRUZXN0UnVuRXJyb3Iobi5fdGVzdFJ1bkVycm9yTWVzc2FnZShlKSl9KSx0aGlzLl9mcy5vbigiYWRkZWQiLF8uYmluZCh0aGlzLl91cGRhdGVQcm9qZWN0RmlsZSx0aGlzLCExKSksdGhpcy5fZnMub24oImxvYWRlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITEpKSx0aGlzLl9mcy5vbigiY2hhbmdlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITEpKSx0aGlzLl9mcy5vbigiZGVsZXRlZCIsXy5iaW5kKHRoaXMuX3VwZGF0ZVByb2plY3RGaWxlLHRoaXMsITApKSx0aGlzLl9mcy5vbigiZXJyb3IiLGZ1bmN0aW9uKGUpe2NvbnNvbGUuZXJyb3IoIkZpbGUgc3lzdGVtIGVycm9yOiAiK24uX2Vycm9yTWVzc2FnZShlKSksbi5fZW1pdFRlc3RSdW5FcnJvcihuLl90ZXN0UnVuRXJyb3JNZXNzYWdlKGUpKX0pLHRoaXMuX2ZzLm9uKCJub3RDaGFuZ2VkIixmdW5jdGlvbihlLHQsaSl7dHJ5e2lmKGkmJmkuc3RhcnQ9PT1pLmVuZClyZXR1cm47bygiRmlsZSB3YXMgbm90IGNoYW5nZWQsIGJ1dCBmaWxlIG1hcmtlcnMgbWF5IG5lZWQgdG8gYmUgc3luY2VkIik7dmFyIGE9bi5fbW9kZWwuZmlsZUJ5SWQoZS5pZCk7aWYoIWEpcmV0dXJuO24uX2VtaXREb2N1bWVudExpbmVzKGEpfWZpbmFsbHl7bi5fZW1pdFN0YXRzVXBkYXRlKCl9fSl9LG4ucHJvdG90eXBlLl9lbWl0RG9jdW1lbnRMaW5lcz1mdW5jdGlvbihlKXt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpO3RbZS5wYXRoKCldPWUuYWxsTGluZXMoKSx0aGlzLl9lbWl0RG9jdW1lbnRVcGRhdGVzKHQpfSxuLnByb3RvdHlwZVsicHJvamVjdDp0ZXN0UnVuRXJyb3IiXT1mdW5jdGlvbihlKXtpZihwcm9jZXNzLmVudi5xdW9ra2EmJmUubWVzc2FnZSl7ZS5tZXNzYWdlPWUubWVzc2FnZS5yZXBsYWNlKCJQb3N0cHJvY2Vzc29yIHJ1biBmYWlsdXJlOiAiLCIiKTt2YXIgdD1lLm1lc3NhZ2UuaW5kZXhPZigiLCBTeW50YXhFcnJvcjoiKTtpZih0PjApe2UubWVzc2FnZT1lLm1lc3NhZ2Uuc3Vic3RyKHQrMik7Zm9yKHZhciBuPWUubWVzc2FnZS5zcGxpdCgiXG4iKSxpPTA7aTxuLmxlbmd0aCYmIV8uc3RhcnRzV2l0aChfLnRyaW1MZWZ0KG5baV0pLCJhdCAiKTtpKyspO2UubWVzc2FnZT1uLnNsaWNlKDAsaSkuam9pbigiXG4iKX19dGhpcy5fZW1pdFN0YXRzVXBkYXRlKGUubWVzc2FnZSl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OnRlc3RSdW5SZVF1ZXVlZCJdPWZ1bmN0aW9uKGUpe2lmKCFlLnRlc3RFcnJvclJlcG9ydGVkKXtpZihwcm9jZXNzLmVudi5xdW9ra2EmJiFlLnJlcnVuU2NoZWR1bGVkKXJldHVybjt0aGlzLl9lbWl0U3RhdHNVcGRhdGUodGhpcy5fbW9kZWwuZnVsbFRlc3RSZXN1bHRzUmVwb3J0KCkpfX0sbi5wcm90b3R5cGVbInByb2plY3Q6YnVzeSJdPWZ1bmN0aW9uKCl7dGhpcy5fY2xlYXJDb25zb2xlT3V0cHV0U2VuZFF1ZXVlKCksdGhpcy5fZW1pdCh7dHlwZToiYnVzeSJ9KX0sbi5wcm90b3R5cGVbInByb2plY3Q6bGl2ZSJdPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoZSl9LG4ucHJvdG90eXBlWyJwcm9qZWN0OmNvbmZpZ0NoYW5nZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9xdW9ra2E9e3Bybzp0aGlzLl9hZGp1c3RRdW9ra2FGZWF0dXJlcyhlLnBybyxlLnNldHRpbmdzKX07dmFyIHQ9Xy5vbWl0KGUsIl9pbnRlcm5hbCIsInNldHRpbmdzIik7InN0cmluZyI9PXR5cGVvZiB0LnBsdWdpbnMmJih0LnBsdWdpbnM9W3QucGx1Z2luc10pLHRoaXMuX211dGVQcm9FZGl0aW9uRm9yVmFsdWVFeHBsb3Jlck5vdGlmaWNhdGlvbj10aGlzLl9wcm9qZWN0LmlzTm90aWZpY2F0aW9uTXV0ZWQoVCksdGhpcy5fZW1pdCh0KX0sbi5wcm90b3R5cGVbInByb2plY3Q6ZXhwcmVzc2lvbnNUb0V2YWx1YXRlUmVjZWl2ZWQiXT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO2lmKHRoaXMuX3F1b2trYSYmIXRoaXMuX3F1b2trYS5wcm8pe3ZhciBuPTIsaT1mdW5jdGlvbihlLGEpe3JldHVybiBfLmVhY2goZSxmdW5jdGlvbihvLHIpe2E+PW4/KGVbcl09e30sXy5pc0VtcHR5KG8pfHx0Ll9tdXRlUHJvRWRpdGlvbkZvclZhbHVlRXhwbG9yZXJOb3RpZmljYXRpb258fCh0Ll9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIiwiT25seSAnUHJvJyBlZGl0aW9uIG9mIFF1b2trYS5qcyBzdXBwb3J0cyBtb3JlIHRoYW4gIituKyIgZXhwYW5kZWQgbGV2ZWxzIHdpdGhpbiBWYWx1ZSBFeHBsb3Jlci4iLHtzdWdnZXN0UHJvRWRpdGlvbjohMCxhbGxvd011dGluZzohMCxpZDpUfSksdC5fbXV0ZVByb0VkaXRpb25Gb3JWYWx1ZUV4cGxvcmVyTm90aWZpY2F0aW9uPSEwKSk6aShvLCsrYSl9KX07aShlLmV4cHJlc3Npb25zVG9FdmFsdWF0ZSwxKX19LG4ucHJvdG90eXBlWyJwcm9qZWN0Om1vZHVsZUxvYWRlZCJdPWZ1bmN0aW9uKGUpe3ZhciB0PWUuc2Vzc2lvbjtpZihkZWxldGUgZS5zZXNzaW9uLHRoaXMuX3F1b2trYSYmIXRoaXMuX3F1b2trYS5wcm8mJnQmJmUucGF0aCYmIX5lLnBhdGguaW5kZXhPZigibm9kZV9tb2R1bGVzIikmJn5lLnBhdGguaW5kZXhPZihyLnNlcCkpe3ZhciBuPSJPbmx5ICdQcm8nIGVkaXRpb24gb2YgUXVva2thLmpzIHN1cHBvcnRzIHByb2plY3QgZmlsZXMgaW1wb3J0LiI7dC5yZWplY3QobmV3IEVycm9yKG4pKSx0aGlzLl9zdWdnZXN0ZWRQcm9FZGl0aW9uRm9yUHJvamVjdEZpbGVJbXBvcnR8fCh0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIixuLHtzdWdnZXN0UHJvRWRpdGlvbjohMH0pLHRoaXMuX3N1Z2dlc3RlZFByb0VkaXRpb25Gb3JQcm9qZWN0RmlsZUltcG9ydD0hMCl9fSxuLnByb3RvdHlwZVsicHJvamVjdDpuYXZpZ2F0aW9uUmVxdWVzdGVkIl09ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZTplLnR5cGUsZmlsZTplLnBhdGgsbG9jOmUubGluZSsoZS5jb2x1bW4/IjoiK2UuY29sdW1uOiIiKX0pfSxuLnByb3RvdHlwZVsicHJvamVjdDpmaWxlc1JlcXVpcmVkIl09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9mcy5sb2FkRmlsZXMoZS5maWxlcylbImNhdGNoIl0oZnVuY3Rpb24oZSl7cmV0dXJuIHQuX2VtaXRUZXN0UnVuRXJyb3IodC5fZXJyb3JNZXNzYWdlKGUpKX0pfSxuLnByb3RvdHlwZVsicHJvamVjdDpsaWNlbnNlQ29sbGlzaW9uIl09ZnVuY3Rpb24oZSl7dmFyIHQ9cHJvY2Vzcy5lbnYucXVva2thPyJRdW9ra2EuanMgJ1BybyciOiJXYWxsYWJ5LmpzIixuPXByb2Nlc3MuZW52LnF1b2trYT8iaHR0cHM6Ly9xdW9ra2Fqcy5jb20vcHJvIjoiaHR0cHM6Ly93YWxsYWJ5anMuY29tL3B1cmNoYXNlIixpPXQrIiBpcyBzdG9wcGVkIGJlY2F1c2UgeW91ciBsaWNlbnNlIGlzIGJlaW5nIHVzZWQgZWxzZXdoZXJlIG9uIHRoZSBuZXR3b3JrIGJ5IDxiPiIrKGUuYWRkcmVzc3x8InVua25vd24gYWRkcmVzcyIpKyc8L2I+LiBPbmx5IG9uZSBhY3RpdmUgY29tcHV0ZXIgYXQgdGhlIHNhbWUgdGltZSBtYXkgdXNlIHRoZSBsaWNlbnNlLjxici8+SWYgeW91IHdvdWxkIGxpa2UgdG8gcHVyY2hhc2UgYW4gYWRkaXRpb25hbCBsaWNlbnNlLCBwbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPi4gSWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJyt5KyciPmFjdGl2YXRlIGl0PC9hPi4nO3RoaXMuX2VtaXROb3RpZmljYXRpb24oImVycm9yIixpKSx0aGlzLl9lbWl0U3RvcHBlZCgpfSxuLnByb3RvdHlwZVsibW9kZWw6c3RhdHNNYXliZUNoYW5nZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWUoKSxwcm9jZXNzLmVudi5xdW9ra2EmJnRoaXMuX3Byb2plY3Quc2V0dGluZ3MoKS5lcnJvcnx8dGhpcy5fZW1pdFN0YXRzVXBkYXRlKGUudGVzdFJlc3VsdHNDaGFuZ2VkfHxwcm9jZXNzLmVudi5xdW9ra2E/dGhpcy5fbW9kZWwuZnVsbFRlc3RSZXN1bHRzUmVwb3J0KGUudGltZSk6dm9pZCAwKX0sbi5wcm90b3R5cGVbIm1vZGVsOmRvY3VtZW50c1VwZGF0ZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9lbWl0RG9jdW1lbnRVcGRhdGVzKGUuZG9jdW1lbnRzKX0sbi5wcm90b3R5cGVbIm1vZGVsOmZpbGVBZGRlZCJdPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXRGaWxlc1RvVHJhY2soW2UuZmlsZS5wYXRoXSl9LG4ucHJvdG90eXBlWyJtb2RlbDpjb25zb2xlT3V0cHV0Il09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0Ll9jb25zb2xlT3V0cHV0LnB1c2goZS5tZXNzYWdlKSx0Ll9jb25zb2xlT3V0cHV0VGltZW91dHx8dC5fc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZCgpfSxuLnByb3RvdHlwZS5fc2NoZWR1bGVDb25zb2xlT3V0cHV0U2VuZD1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5fY29uc29sZU91dHB1dFRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe2lmKGUuX2NvbnNvbGVPdXRwdXQubGVuZ3RoKXt2YXIgdD1lLl9jb25zb2xlT3V0cHV0LnNwbGljZSgwLDIwKTtlLl9jb25zb2xlT3V0cHV0Lmxlbmd0aD9lLl9zY2hlZHVsZUNvbnNvbGVPdXRwdXRTZW5kKCk6ZS5fY2xlYXJDb25zb2xlT3V0cHV0U2VuZFF1ZXVlKCksZS5fZW1pdCh7dHlwZToiY29uc29sZU91dHB1dCIsbWVzc2FnZXM6dH0pfX0sMTAwKX0sbi5wcm90b3R5cGUuX2FkanVzdFF1b2trYUZlYXR1cmVzPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuaGludHM9dC5oaW50c3x8e30sdC5oaW50cy5jb21tZW50QXV0b0xvZz1lPyI/Ijp7dmFsdWU6Ij8iLGV4cDoiXCJMaXZlIENvbW1lbnRzIGFuZCBMaXZlIFZhbHVlIERpc3BsYXkgZmVhdHVyZXMgb25seSBzdXBwb3J0ZWQgaW4gJ1BybycgZWRpdGlvbiwgc2VlIGh0dHBzOi8vcXVva2thanMuY29tL3Byby8gZm9yIG1vcmUgZGV0YWlsc1wiIn0sZXx8ZGVsZXRlIHQucXVva2thLmluc3RhbGxQYWNrYWdlLmFsbG93VG9JbnN0YWxsSW1wb3J0ZWRNb2R1bGVzLGV9LG4ucHJvdG90eXBlLl9jbGVhckNvbnNvbGVPdXRwdXRTZW5kUXVldWU9ZnVuY3Rpb24oKXt0aGlzLl9jb25zb2xlT3V0cHV0Lmxlbmd0aD0wLGRlbGV0ZSB0aGlzLl9jb25zb2xlT3V0cHV0VGltZW91dH0sbi5wcm90b3R5cGVbIm1vZGVsOmZpbGVNZXNzYWdlcyJdPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoZSl9LG4ucHJvdG90eXBlLl91cGRhdGVQcm9qZWN0RmlsZT1mdW5jdGlvbihlLHQsbixpLGEpe3ZhciByPXRoaXMuX21vZGVsLmZpbGVCeUlkKHQuaWQpO2lmKCFlJiZyJiZyLmlzT3BlbmVkSW5FZGl0b3IoKSYmci5oYXNWYWxpZERvY3VtZW50KCkpe3ZhciBsPSEwO2lmKF8uaXNQYXRjaCh0LmNvbnRlbnQpJiZfLmlzU3RyaW5nKG4pJiZpKXt2YXIgcz10aGlzLl9kaWZmTWF0Y2hQYXRjaC5wYXRjaF9mcm9tVGV4dCh0LmNvbnRlbnQpO2lmKDE9PT1zLmxlbmd0aCl7dmFyIHA9c1swXTtpZihwJiZwLmRpZmZzJiZwLmRpZmZzLmxlbmd0aCYmcC5zdGFydDE9PT1wLnN0YXJ0Mil7bD0hMTt2YXIgYz1wLnN0YXJ0MSxkPXAuZGlmZnNbMF07MD09PWRbMF0mJihjKz1kWzFdLmxlbmd0aCk7dmFyIHU9MDtpZihfLmVhY2gocC5kaWZmcyxmdW5jdGlvbihlKXswIT09ZVswXSYmKHUrPWVbMF0qKF8udGV4dExpbmVzKGVbMV0pLmxlbmd0aC0xKSl9KSx1KXt2YXIgaD1fLnRleHRMaW5lcyhuLGMpLmxlbmd0aCxtPV8udGV4dExpbmVzKG4scC5zdGFydDEpLmxlbmd0aCxTPU1hdGguYWJzKHUpLGY9TWF0aC5tYXgoTWF0aC5taW4oaS5zdGFydCxtKS1TLDEpLHc9TWF0aC5tYXgoaS5lbmQsbSk7ci5zaGlmdERvY3VtZW50TGluZXMoaCx1LHtzdGFydDpmLGVuZDp3fSl9ZWxzZSBpLnN0YXJ0IT09aS5lbmQmJnIuaW52YWxpZGF0ZURvY3VtZW50TGluZXMoMCwwLGkpfX19bCYmKG8oIk5ldyBkb2N1bWVudCBvciBjb21wbGV4IGRvY3VtZW50IGNoYW5nZSIpLHIuaW52YWxpZGF0ZURvY3VtZW50KCkpfXRoaXMuX3Byb2plY3QuZmlsZSh7ZmlsZTp0aGlzLl9maWxlRm9yUHJvamVjdCh0KSwiZGVsZXRlIjplLGluRWRpdG9yOmF9KX0sbi5wcm90b3R5cGUuX2ZpbGVzRm9yUHJvamVjdD1mdW5jdGlvbihlKXtyZXR1cm4gXy5tYXAoZSx0aGlzLl9maWxlRm9yUHJvamVjdCl9LG4ucHJvdG90eXBlLl9maWxlRm9yUHJvamVjdD1mdW5jdGlvbihlKXtyZXR1cm57cGF0aDplLnBhdGgsaWQ6ZS5pZCx0czplLnRzLG9yZGVyOmUub3JkZXIsaW5jbHVkZTplLmxvYWQsdHJpZ2dlcnNUZXN0czplLnRyaWdnZXIsY292ZXJhYmxlOmUuaW5zdHJ1bWVudCx0ZXN0OmUudGVzdCx0eXBlOmUudHlwZSxiaW5hcnk6ZS5iaW5hcnksY29udGVudDplLmNvbnRlbnR9fSxuLnByb3RvdHlwZS5fc3RhcnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2VtaXRGaWxlc1RvVHJhY2soXy5tYXAoZS5maWxlcyxmdW5jdGlvbihlKXtyZXR1cm4gZS5wYXRofSkpLGUubGljZW5zZXx8KGUubGljZW5zZT10aGlzLl92ZXJpZmljYXRpb25SZXN1bHQmJnRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5oYXNofHx0aGlzLl9wcm9qZWN0Ll93YWxsYWJ5RW1haWwpLGUuZXhwaXJ5RGF0ZXx8KGUuZXhwaXJ5RGF0ZT10aGlzLl92ZXJpZmljYXRpb25SZXN1bHQmJnRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmF0aW9uRGF0ZSYmdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyYXRpb25EYXRlLnNwbGl0KCIvIikuam9pbigiLSIpfHx2b2lkIDApLHRoaXMuX3Byb2plY3Quc3RhcnQoZSl9LG4ucHJvdG90eXBlLl92ZXJpZnlMaWNlbnNlPWZ1bmN0aW9uKGUsdCxuKXt0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQ9dGhpcy5fbGljZW5zZVZlcmlmaWNhdGlvblJlc3VsdChlLHQsbil9LG4ucHJvdG90eXBlLl9ydW5JZlZlcmlmaWVkPWZ1bmN0aW9uKGUpe2lmKHByb2Nlc3MuZW52LnF1b2trYSYmIXRoaXMuX3F1b2trYUVkaXRpb24pcmV0dXJuIGUoKTt2YXIgdD1wcm9jZXNzLmVudi5xdW9ra2E/IlF1b2trYS5qcyAnUHJvJyI6IndhbGxhYnkuanMiLG49cHJvY2Vzcy5lbnYucXVva2thPyJodHRwczovL3F1b2trYWpzLmNvbS9wcm8iOiJodHRwczovL3dhbGxhYnlqcy5jb20vcHVyY2hhc2UiO3RoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdD10aGlzLl92ZXJpZmljYXRpb25SZXN1bHR8fHt2YWxpZDohMX07dmFyIGksbz17fTtpZihwcm9jZXNzLmVudi5xdW9ra2EmJihvLmV4cGlyeURhdGU9bmV3IGEodGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkKyIgVVRDIiksby5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZD10aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQpLHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC52YWxpZClyZXR1cm4gdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyZWQ/KGk9IllvdXIgIit0KyIgbGljZW5zZSA8Yj5mcmVlIHVwZ3JhZGVzIHBlcmlvZCBoYXMgZXhwaXJlZDwvYj4uIElmIHlvdSB3b3VsZCBsaWtlIHRvIHdvcmsgd2l0aCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgIit0KycgYW5kIGZ1dHVyZSB2ZXJzaW9ucyByZWxlYXNlZCB3aXRoaW4gdGhlIG5leHQgMTIgbW9udGhzLCBwbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPiB0byB1cGdyYWRlIHlvdXIgbGljZW5zZS48YnIvPklmIHlvdSBoYXZlIGFscmVhZHkgcHVyY2hhc2VkIHRoZSBuZXcgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK3krJyI+YWN0aXZhdGUgaXQ8L2E+LicsdGhpcy5fZW1pdEV4cGlyZWRMaWNlbnNlKCkpOnRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmluZ1Nvb24mJihwcm9jZXNzLmVudi5xdW9ra2E/KG8uZXhwaXJpbmdTb29uPSEwLGk9IllvdXIgIit0KyIgbGljZW5zZSIrKHByb2Nlc3MuZW52LnF1b2trYT8iIjoiIGZyZWUgdXBncmFkZXMgcGVyaW9kIikrIiA8Yj4gZXhwaXJlcyBvbiAiK3RoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZCsiPC9iPi4gSWYgeW91IHdvdWxkIGxpa2UgdG8gd29yayB3aXRoIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiAiK3QrJyBhbmQgZnV0dXJlIHZlcnNpb25zIHJlbGVhc2VkIHdpdGhpbiB0aGUgbmV4dCAxMiBtb250aHMsIHBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+IHRvIHVwZ3JhZGUgeW91ciBsaWNlbnNlLjxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIG5ldyBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicreSsnIj5hY3RpdmF0ZSBpdDwvYT4uIENsaWNrIDxhIGhyZWY9Imh0dHBzOi8vcXVva2thanMuY29tL2RvY3MvcHJldmlvdXMuaHRtbD9leHBpcnlkYXRlPScrby5leHBpcnlEYXRlLmdldFVUQ0Z1bGxZZWFyKCkrIi0iKyhvLmV4cGlyeURhdGUuZ2V0VVRDTW9udGgoKSsxKSsiLSIrby5leHBpcnlEYXRlLmdldFVUQ0RhdGUoKSsnIj5oZXJlPC9hPiBmb3IgaGVscC4nKTppPSJZb3VyICIrdCsiIGxpY2Vuc2UiKyhwcm9jZXNzLmVudi5xdW9ra2E/IiI6IiBmcmVlIHVwZ3JhZGVzIHBlcmlvZCIpKyIgPGI+IGV4cGlyZXMgb24gIit0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQrIjwvYj4uIElmIHlvdSB3b3VsZCBsaWtlIHRvIHdvcmsgd2l0aCB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgIit0KycgYW5kIGZ1dHVyZSB2ZXJzaW9ucyByZWxlYXNlZCB3aXRoaW4gdGhlIG5leHQgMTIgbW9udGhzLCBwbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPiB0byB1cGdyYWRlIHlvdXIgbGljZW5zZS48YnIvPklmIHlvdSBoYXZlIGFscmVhZHkgcHVyY2hhc2VkIHRoZSBuZXcgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK3krJyI+YWN0aXZhdGUgaXQ8L2E+LicpLGkmJnRoaXMuX2VtaXROb3RpZmljYXRpb24oIndhcm5pbmciLGksbyksZSgpO2lmKHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5leHBpcmVkVHJpYWwpaT0iWW91ciAiK3QrJyB0cmlhbCBwZXJpb2QgaXMgb3ZlciwgdGhhbmtzIGZvciB0cnlpbmcgaXQgb3V0LiBQbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPiB0byBwdXJjaGFzZSBhIGxpY2Vuc2Ugb3IgdG8gYXJyYW5nZSBhIGxvbmdlciB0cmlhbCBwZXJpb2QgZm9yIHlvdXJzZWxmIG9yIHlvdXIgdGVhbS48YnIvPklmIHlvdSBoYXZlIGFscmVhZHkgcHVyY2hhc2VkIHRoZSBsaWNlbnNlLCBwbGVhc2UgPGEgaHJlZj0iIyIgY2xhc3M9IicreSsnIj5hY3RpdmF0ZSBpdDwvYT4uJyx0aGlzLl9lbWl0Tm90aWZpY2F0aW9uKCJlcnJvciIsaSksdGhpcy5fZW1pdFN0b3BwZWQoKTtlbHNle2lmKCF0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuaW52YWxpZFZlcnNpb24pcmV0dXJuIGk9Ik5vIHZhbGlkICIrdCsnIGxpY2Vuc2UgZm91bmQsIHN0YXJ0aW5nIGluIHRyaWFsIG1vZGUuPGJyLz5JZiB5b3Ugd291bGQgbGlrZSB0byBwdXJjaGFzZSBhIGxpY2Vuc2UsIHBsZWFzZSB2aXNpdCA8YSBocmVmPSInK24rJyI+b3VyIHdlYnNpdGU8L2E+Ljxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJyt5KyciPmFjdGl2YXRlIGl0PC9hPi4nLHRoaXMuX2VtaXROb3RpZmljYXRpb24oIndhcm5pbmciLGkpLHRoaXMuX3RyaWFsTW9kZSgpLGUoKTt2YXIgcj17aW52YWxpZFZlcnNpb246ITB9O3Byb2Nlc3MuZW52LnF1b2trYT8oci5lZGl0b3JOYW1lPXMuZ2V0RWRpdG9yTmFtZSh0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZWRpdG9yKSxyLmVkaXRvclR5cGU9cy5nZXRFZGl0b3JUeXBlKHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5lZGl0b3IpLHIuZXhwaXJ5RGF0ZT1uZXcgYSh0aGlzLl92ZXJpZmljYXRpb25SZXN1bHQuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQrIiBVVEMiKSxyLmNvbXBhdGlibGVFZGl0b3JWZXJzaW9uPXMubGFzdENvbXBhdGlibGVFZGl0b3JWZXJzaW9uKHRoaXMuX3ZlcmlmaWNhdGlvblJlc3VsdC5lZGl0b3IsdGhpcy5fdmVyaWZpY2F0aW9uUmVzdWx0LmV4cGlyYXRpb25EYXRlKSxpPSJZb3UgYXJlIDxiPm5vdCBsaWNlbnNlZCB0byB1c2UgUFJPIGZlYXR1cmVzIGZvciB0aGlzIHZlcnNpb24gb2YgIit0Kycgd2l0aCB5b3VyIGN1cnJlbnQgZWRpdG9yPC9iPi4gQXMgeW91ciAxMiBtb250aHMgb2YgZnJlZSBRdW9ra2EgdXBkYXRlZCBoYXZlIGV4cGlyZWQsIHRoaXMgaXMgbGlrZWx5IGEgcmVzdWx0IG9mIHlvdXIgZWRpdG9yIGF1dG9tYXRpY2FsbHkgdXBkYXRpbmcgb24geW91ciBiZWhhbGYuIFRvIGNvbnRpbnVlIHVzaW5nIFF1b2trYSwgeW91IGNhbjogPGEgaHJlZj0iJytuKyciPltSZW5ld108L2E+LCA8YSBocmVmPSIjIiBjbGFzcz0iJyt5KyciPltBY3RpdmF0ZV08L2E+LCA8YSBocmVmPSJodHRwczovL3F1b2trYWpzLmNvbS9kb2NzL3ByZXZpb3VzLmh0bWw/ZXhwaXJ5ZGF0ZT0nK3IuZXhwaXJ5RGF0ZS5nZXRVVENGdWxsWWVhcigpKyItIisoci5leHBpcnlEYXRlLmdldFVUQ01vbnRoKCkrMSkrIi0iK3IuZXhwaXJ5RGF0ZS5nZXRVVENEYXRlKCkrIiZlZGl0b3J0eXBlPSIrci5lZGl0b3JUeXBlKyImZWRpdG9yPSIrZW5jb2RlVVJJQ29tcG9uZW50KHIuZWRpdG9yTmFtZSsiIHZlcnNpb24gIityLmNvbXBhdGlibGVFZGl0b3JWZXJzaW9uKSsnIj5bRG93bmdyYWRlXTwvYT4sIG9yIDxhIGhyZWY9IiMiIGNsYXNzPSInK1YrIlwiPltVc2UgJ0NvbW11bml0eScgRWRpdGlvbl08L2E+LiBUaGUgbGF0ZXN0IHZlcnNpb24gb2YgIityLmVkaXRvck5hbWUrIiB0aGF0IGlzIGNvbXBhdGlibGUgd2l0aCB5b3VyIGxpY2Vuc2UgaXM6ICIrci5jb21wYXRpYmxlRWRpdG9yVmVyc2lvbisiLiIpOmk9IkN1cnJlbnRseSBpbnN0YWxsZWQgdmVyc2lvbiBvZiAiK3QrJyBpcyA8Yj5ub3QgY292ZXJlZCBieSB5b3VyIGxpY2Vuc2U8L2I+LiBQbGVhc2UgdmlzaXQgPGEgaHJlZj0iJytuKyciPm91ciB3ZWJzaXRlPC9hPiB0byB1cGdyYWRlIHlvdXIgbGljZW5zZS48YnIvPklmIHlvdSBoYXZlIHB1cmNoYXNlZCBhIHJlbmV3YWwgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK3krJyI+YWN0aXZhdGUgaXQ8L2E+LicsdGhpcy5fZW1pdE5vdGlmaWNhdGlvbigiZXJyb3IiLGksciksdGhpcy5fZW1pdFN0b3BwZWQoKX19LG4ucHJvdG90eXBlLl90cmlhbE1vZGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxuPXByb2Nlc3MuZW52LnF1b2trYT8iUXVva2thLmpzICdQcm8nIjoid2FsbGFieS5qcyIsaT1wcm9jZXNzLmVudi5xdW9ra2E/Imh0dHBzOi8vcXVva2thanMuY29tL3BybyI6Imh0dHBzOi8vd2FsbGFieWpzLmNvbS9wdXJjaGFzZSI7ZT1lfHwwLGMoZnVuY3Rpb24oKXtlPj13Pyh0Ll9lbWl0Tm90aWZpY2F0aW9uKCJ3YXJuaW5nIiwiVG8ga2VlcCB0cmlhbGluZyAiK24rJywgcGxlYXNlIDxiPnJlc3RhcnQgeW91ciBlZGl0b3I8L2I+IG9yIHZpc2l0IDxhIGhyZWY9IicraSsnIj5vdXIgd2Vic2l0ZTwvYT4gdG8gcHVyY2hhc2UgYSBsaWNlbnNlLjxici8+SWYgeW91IGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgdGhlIGxpY2Vuc2UsIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJyt5KyciPmFjdGl2YXRlIGl0PC9hPi4nKSx0LnN0b3AoKSx0Ll9lbWl0U3RvcHBlZCghMCkpOih0Ll9jb250aW51ZVRyaWFsU2Vzc2lvbj1mdW5jdGlvbigpe2QodC5fc3RvcHBlclRpbWVvdXQpLHQuX3RyaWFsTW9kZShlKzEpfSx0Ll9zdG9wcGVyVGltZW91dD1jKGZ1bmN0aW9uKCl7dC5zdG9wKCksdC5fZW1pdFN0b3BwZWQoKX0sZiksdC5fZW1pdE5vdGlmaWNhdGlvbigid2FybmluZyIsIlRvIGNvbnRpbnVlICIrbisnIHRyaWFsIHNlc3Npb24sIHBsZWFzZSA8YSBocmVmPSIjIiBjbGFzcz0iJyt2KyciPmNsaWNrICJDb250aW51ZSI8L2E+Ljxici8+VmlzaXQgPGEgaHJlZj0iJytpKyciPm91ciB3ZWJzaXRlPC9hPiB0byBwdXJjaGFzZSBhIGxpY2Vuc2UuPGJyLz5JZiB5b3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCB0aGUgbGljZW5zZSwgcGxlYXNlIDxhIGhyZWY9IiMiIGNsYXNzPSInK3krJyI+YWN0aXZhdGUgaXQ8L2E+LicpKX0sUyl9LG4ucHJvdG90eXBlLl9saWNlbnNlVmVyaWZpY2F0aW9uUmVzdWx0PWZ1bmN0aW9uKGUsdCxuKXt2YXIgaSxvPXRoaXMscj17dmFsaWQ6ITEsZXhwaXJlZFRyaWFsOiEwfTt0cnl7aT1vLl9yZWFkRmlsZVN5bmModCl9Y2F0Y2gocyl7dHJ5e28uX3dyaXRlRmlsZVN5bmModCwrbmV3IGEpfWNhdGNoKHApe319dHJ5e2lmKF8uaXNTdHJpbmcoaSkpaWYoaS5sZW5ndGg+MTAwKXt2YXIgYz1tLnBhcnNlS2V5KGkpLGQ9Yy5saWNlbnNlU2lnbmF0dXJlO2lmKGJbXy5ydHJpbShkLCI9IildKXIuZXhwaXJlZD0hMDtlbHNle3IuZXhwaXJlZFRyaWFsPSExLHIua2V5PWk7dmFyIHU9Yy5saWNlbnNlZU5hbWUsaD1jLmxpY2Vuc2VlRW1haWwsUz1jLmxpY2Vuc2VUYWdzLGY9Yy5saWNlbnNlZFByb2R1Y3Qsdz1jLmV4cGlyYXRpb25EYXRlU3RyaW5nO3IubmFtZT11LHIuZXhwaXJhdGlvbkRhdGU9dyxyLmV4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkPWMuZXhwaXJhdGlvbkRhdGVTdHJpbmdGb3JtYXR0ZWQ7dmFyIHk9bC5jcmVhdGVWZXJpZnkoIlJTQS1TSEE1MTIiKTt5LnVwZGF0ZShuZXcgQnVmZmVyKHUrUyt3KSk7dmFyIHY9fmYuaW5kZXhPZigiV2FsbGFieS5qcyArIFF1b2trYS5qcyIpP2c6IlF1b2trYSI9PT1lP2U6fmYuaW5kZXhPZihnKT9nOmU7aWYoci52YWxpZD15LnZlcmlmeShSW3ZdLG5ldyBCdWZmZXIoZCwiYmFzZTY0IikpLHIudmFsaWQpe3ZhciBWPXcuc3BsaXQoIi8iKSxUPW5ldyBhKFZbMV0rIi8iK1ZbMF0rIi8iK1ZbMl0pLEk9bmV3IGEoMTU0NDY2MTIxODM4MCk7SS5zZXRIb3VycygwLDAsMCwwKTt2YXIgTT1oPT09by5fcHJvamVjdC5fd2FsbGFieUVtYWlsLEY9bmV3IGE7aWYoRi5zZXRIb3VycygwLDAsMCwwKSxJPlQpcHJvY2Vzcy5lbnYucXVva2thJiZ0aGlzLl9lZGl0b3JWZXJzaW9uSXNPa0FmdGVyRXhwaXJ5KFQsSSxGLG4pPyhyLmV4cGlyZWQ9ITAsci52YWxpZD0hTSxyLmV4cGlyZWRUcmlhbD1NKTooci5pbnZhbGlkVmVyc2lvbj0hMCxyLnZhbGlkPSExLHIuZWRpdG9yPW4pO2Vsc2V7dHJ5e3ZhciBOPXZvaWQgMDtyLmhhc2g9TT9vLl9wcm9qZWN0Ll93YWxsYWJ5RW1haWw6KE49bC5jcmVhdGVIYXNoKCJzaGE1MTIiKSxOLnVwZGF0ZShuZXcgQnVmZmVyKGksImJhc2U2NCIpKSxOLmRpZ2VzdCgiYmFzZTY0IikpfWNhdGNoKGspe3IuaGFzaD1vLl9wcm9qZWN0Ll93YWxsYWJ5RW1haWx9aWYoRj5UKSFwcm9jZXNzLmVudi5xdW9ra2F8fHByb2Nlc3MuZW52LnF1b2trYSYmdGhpcy5fZWRpdG9yVmVyc2lvbklzT2tBZnRlckV4cGlyeShULEksRixuKT8oci5leHBpcmVkPSEwLHIudmFsaWQ9IU0sci5leHBpcmVkVHJpYWw9TSk6KHIuaW52YWxpZFZlcnNpb249ITAsci52YWxpZD0hMSxyLmVkaXRvcj1uKTtlbHNle3ZhciBFPW5ldyBhO0Uuc2V0RGF0ZShFLmdldERhdGUoKStEKSxyLmV4cGlyaW5nU29vbj1FPlR9fX19fWVsc2V7dmFyIFU9cGFyc2VJbnQoaSwxMCk7ci5leHBpcmVkVHJpYWw9Xy5pc05hTihVKXx8VSsocHJvY2Vzcy5lbnYucXVva2thPzEzMTRlNjoyNjI4ZTYpPCtuZXcgYX1lbHNlIHIuZXhwaXJlZFRyaWFsPSExfWNhdGNoKGspe3IudmFsaWQ9ITF9cmV0dXJuIHJ9LG4ucHJvdG90eXBlLl9lZGl0b3JWZXJzaW9uSXNPa0FmdGVyRXhwaXJ5PWZ1bmN0aW9uKGUsdCxuLGkpe3ZhciBhPXMuZWRpdG9yRXhwaXJ5RGF0ZShpKTtyZXR1cm4gYT9lPj1hOit0KzEzMTRlNj49K24mJitlKzEzMTRlNj49K259LG4ucHJvdG90eXBlLl9lbWl0RmlsZXNUb1RyYWNrPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoe3R5cGU6ImZpbGVzVG9UcmFjayIsZmlsZXM6ZX0pfSxuLnByb3RvdHlwZS5fZW1pdFRlc3RSdW5FcnJvcj1mdW5jdGlvbihlKXt0aGlzLl9lbWl0KHt0eXBlOiJzdGF0cyIsZGF0YTplfSl9LG4ucHJvdG90eXBlLl9lbWl0RG9jdW1lbnRVcGRhdGVzPWZ1bmN0aW9uKGUpe3RoaXMuX2VtaXQoe3R5cGU6ImRvY3VtZW50VXBkYXRlcyIsdXBkYXRlczplfSl9LG4ucHJvdG90eXBlLl9lbWl0U3RhdHNVcGRhdGU9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToic3RhdHMiLGRhdGE6ZX0pfSxuLnByb3RvdHlwZS5fZW1pdFByb2plY3RDb25maWd1cmVkPWZ1bmN0aW9uKGUsdCl7dGhpcy5fZW1pdChfLmV4dGVuZCh7fSx0LHtmaWxlczplfSkpfSxuLnByb3RvdHlwZS5fZW1pdE5vdGlmaWNhdGlvbj1mdW5jdGlvbihlLHQsbil7dGhpcy5fZW1pdCh7dHlwZToibm90aWZpY2F0aW9uIixub3RpZmljYXRpb246Xy5leHRlbmQoe3RleHQ6dCx0eXBlOmV9LG58fHt9KX0pfSxuLnByb3RvdHlwZS5fZW1pdFN0b3BwZWQ9ZnVuY3Rpb24oZSl7dGhpcy5fZW1pdCh7dHlwZToic3RvcHBlZCIsZGVhY3RpdmF0ZTplfSl9LG4ucHJvdG90eXBlLl9lbWl0RXhwaXJlZExpY2Vuc2U9ZnVuY3Rpb24oKXt0aGlzLl9lbWl0KHt0eXBlOiJleHBpcmVkTGljZW5zZSJ9KX0sbi5wcm90b3R5cGUuX2VtaXQ9ZnVuY3Rpb24oZSl7dGhpcy5lbWl0KCJtZXNzYWdlIixlKX0sbi5wcm90b3R5cGUuX2Vycm9yTWVzc2FnZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fcHJvamVjdCYmdGhpcy5fcHJvamVjdC5fY2xlYW5TdGFjayhlKSxlJiYoZS5zdGFja3x8ZS5tZXNzYWdlKX0sbi5wcm90b3R5cGUuX3Rlc3RSdW5FcnJvck1lc3NhZ2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUubWVzc2FnZX0sbn0oRXZlbnRFbWl0dGVyKTt0LmV4cG9ydHM9SX0seyIuL3F1b2trYUVkaXRvclZlcnNpb25zIjozLCIuL3NlcnZlci9maWxlU3lzdGVtIjoxMSwiLi9zZXJ2ZXIvbW9kZWwiOjEyLCIuL3NoYXJlZC91dGlscyI6MTcsY2hpbGRfcHJvY2Vzczp2b2lkIDAsY3J5cHRvOnZvaWQgMCxkZWJ1Zzp2b2lkIDAscGF0aDp2b2lkIDAsdGltZXJzOnZvaWQgMH1dLDM6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaT10LmV4cG9ydHM9e30sYT17IkR1bW15SWRlLTEuMC4wIjpuZXcgRGF0ZSgiMDEgSmFuIDIwMDAiKSwiVlNDb2RlLTAuMTAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjEwIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuMTEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMC4xMC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMC4xMC42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTAuMTAuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0wLjEwLjkiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4wLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4zLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS40LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS41LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS42LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS42LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS43LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS44LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS44LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS45LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS45LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjEwLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjExLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjEyLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTQuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE2LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4xOS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMTkuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjE5LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjAuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIyLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjIzLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjQuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI2LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiVlNDb2RlLTEuMjcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIlZTQ29kZS0xLjI3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJWU0NvZGUtMS4yOC4wIjpuZXcgRGF0ZSgiMDkgT2N0IDIwMTgiKSwiVlNDb2RlLTEuMjguMSI6bmV3IERhdGUoIjEyIE9jdCAyMDE4IiksIlZTQ29kZS0xLjI4LjIiOm5ldyBEYXRlKCIxNyBPY3QgMjAxOCIpLCJWU0NvZGUtMS4yOS4wIjpuZXcgRGF0ZSgiMTIgTm92IDIwMTgiKSwiVlNDb2RlLTEuMjkuMSI6bmV3IERhdGUoIjEzIE5vdiAyMDE4IiksIlZTQ29kZS0xLjMwLjAiOm5ldyBEYXRlKCIxMiBEZWMgMjAxOCIpLCJBdG9tLTAuMC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjAuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4wLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4xNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMTkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjI1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4yNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjI4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMjkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjMxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjM0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjM3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuMzguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC4zOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQzLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQ2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNDcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC40OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjQ5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjUyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjU1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC41Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjU4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNTkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjYxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjY0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjY3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNjguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC42OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjcwLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjczLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzQuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjc2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuNzcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC43OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjc5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjgyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjg1LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC44Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjg4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuODkuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjkxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjk0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTUuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjk3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTAuOTguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMC45OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEwOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjExOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEyOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjEzOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE0OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE1OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE2OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE3OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE4OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5MC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5MS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5Mi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5My4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5NC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5NS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5Ni4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5Ny4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5OC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjE5OS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwMi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwNC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwNi4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwNy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwOC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIwOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIxMC4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0wLjIxMS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjExIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjE0IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjE3IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuMTgiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4xOSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjAuNyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4wLjgiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMC45IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS40LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjQuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS40LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjUuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS41LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjUuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS42LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjYuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS43LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS43LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuNy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuOS43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjkuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS45LjkiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEwLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTEuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjExLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMi43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjEyLjgiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTIuOSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksCiJBdG9tLTEuMTMuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTQuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE0LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTQuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE2LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTcuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTguMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE5LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTkuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE5LjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMTkuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4xOS42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjE5LjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIxLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIyLjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMy4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjIzLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI0LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjQuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNS4wIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI1LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjYuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI3LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI4LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMjguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4yOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiQXRvbS0xLjI5LjAiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJBdG9tLTEuMzAuMCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkF0b20tMS4zMS4wIjpuZXcgRGF0ZSgiMjggU2VwIDIwMTgiKSwiQXRvbS0xLjMxLjEiOm5ldyBEYXRlKCIwMiBPY3QgMjAxOCIpLCJBdG9tLTEuMzEuMiI6bmV3IERhdGUoIjAyIE9jdCAyMDE4IiksIkF0b20tMS4zMi4wIjpuZXcgRGF0ZSgiMTkgT2N0IDIwMTgiKSwiQXRvbS0xLjMyLjEiOm5ldyBEYXRlKCIxOSBPY3QgMjAxOCIpLCJBdG9tLTEuMzIuMiI6bmV3IERhdGUoIjggTm92IDIwMTgiKSwiQXRvbS0xLjMzLjAiOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTYuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMi41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjIuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4yLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMi44IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxNy4zLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTcuMy40IjpuZXcgRGF0ZSgiMjIgTm92IDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMS43IjpuZXcgRGF0ZSgiMjIgTm92IDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4yLjMiOm5ldyBEYXRlKCIxNyBTZXAgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMi40IjpuZXcgRGF0ZSgiMTcgT2N0IDIwMTgiKSwiSW50ZWxsaUotQXBwQ29kZSAyMDE4LjIuNSI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4yLjYiOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1BcHBDb2RlIDIwMTguMyI6bmV3IERhdGUoIjI2IE5vdiAyMDE4IiksIkludGVsbGlKLUFwcENvZGUgMjAxOC4zLjEiOm5ldyBEYXRlKCI2IERlYyAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE2LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTYuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjIuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxNy4zLjUiOm5ldyBEYXRlKCIyMiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjEuNyI6bmV3IERhdGUoIjIyIE5vdiAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMi40IjpuZXcgRGF0ZSgiMTcgU2VwIDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4yLjUiOm5ldyBEYXRlKCIxNCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1DTGlvbiAyMDE4LjIuNiI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLUNMaW9uIDIwMTguMi43IjpuZXcgRGF0ZSgiMjYgTm92IDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4zIjpuZXcgRGF0ZSgiMjYgTm92IDIwMTgiKSwiSW50ZWxsaUotQ0xpb24gMjAxOC4zLjEiOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTcuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxNy4zLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4xLjYiOm5ldyBEYXRlKCIxNCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1EYXRhR3JpcCAyMDE4LjIuNCI6bmV3IERhdGUoIjE3IFNlcCAyMDE4IiksIkludGVsbGlKLURhdGFHcmlwIDIwMTguMi41IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotRGF0YUdyaXAgMjAxOC4zIjpuZXcgRGF0ZSgiMjYgTm92IDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE3LjMuNSI6bmV3IERhdGUoIjEzIE5vdiAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4xLjciOm5ldyBEYXRlKCIxMyBOb3YgMjAxOCIpLCJJbnRlbGxpSi1Hb0xhbmQgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMi4zIjpuZXcgRGF0ZSgiMTcgU2VwIDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMi40IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotR29MYW5kIDIwMTguMyI6bmV3IERhdGUoIjIyIE5vdiAyMDE4IiksIkludGVsbGlKLUdvTGFuZCAyMDE4LjMuMSI6bmV3IERhdGUoIjYgRGVjIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTYuMy41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE2LjMuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNi4zLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTYuMy44IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMi41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjIuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4yLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxNy4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTcuMy41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNyBTZXAgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMi41IjpuZXcgRGF0ZSgiMTYgT2N0IDIwMTgiKSwiSW50ZWxsaUotSW50ZWxsaUogSURFQSAyMDE4LjIuNiI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4yLjciOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1JbnRlbGxpSiBJREVBIDIwMTguMyI6bmV3IERhdGUoIjIyIE5vdiAyMDE4IiksIkludGVsbGlKLUludGVsbGlKIElERUEgMjAxOC4zLjEiOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE3LjMuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLU1QUyAyMDE4LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1NUFMgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi41IjpuZXcgRGF0ZSgiMTkgT2N0IDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMi42IjpuZXcgRGF0ZSgiMTggTm92IDIwMTgiKSwiSW50ZWxsaUotTVBTIDIwMTguMyI6bmV3IERhdGUoIjUgRGVjIDIwMTgiKSwiSW50ZWxsaUotTVBTIDMuNC4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotTVBTIDMuNC40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNi4zLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE2LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjIuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMi41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTcuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxNy4zLjciOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMS43IjpuZXcgRGF0ZSgiNSBEZWMgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4yLjMiOm5ldyBEYXRlKCIxMyBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjIuNCI6bmV3IERhdGUoIjI4IFNlcCAyMDE4IiksIkludGVsbGlKLVBocFN0b3JtIDIwMTguMi41IjpuZXcgRGF0ZSgiMTIgT2N0IDIwMTgiKSwiSW50ZWxsaUotUGhwU3Rvcm0gMjAxOC4yLjYiOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjMiOm5ldyBEYXRlKCIyMyBPY3QgMjAxOCIpLCJJbnRlbGxpSi1QaHBTdG9ybSAyMDE4LjMuMSI6bmV3IERhdGUoIjYgRGVjIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTYuMy41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE2LjMuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4xLjYiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMS43IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjEuOCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4yLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjIuNyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxNy4zLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTcuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE3LjMuNyI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMS42IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4yLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMi40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUHlDaGFybSAyMDE4LjIuNSI6bmV3IERhdGUoIjE0IE5vdiAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4yLjYiOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1QeUNoYXJtIDIwMTguMyI6bmV3IERhdGUoIjIyIE5vdiAyMDE4IiksIkludGVsbGlKLVB5Q2hhcm0gMjAxOC4zLjEiOm5ldyBEYXRlKCI1IERlYyAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxNy4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE3LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE3LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTguMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUmlkZXIgMjAxOC4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SaWRlciAyMDE4LjIuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJpZGVyIDIwMTguMi4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNi4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE2LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTYuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjEuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMS4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4xLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjEuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMS42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMy4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4zLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE3LjMuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTcuMy40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxNy4zLjUiOm5ldyBEYXRlKCI0IERlYyAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjEuNiI6bmV3IERhdGUoIjQgRGVjIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMi4zIjpuZXcgRGF0ZSgiMjUgU2VwIDIwMTgiKSwiSW50ZWxsaUotUnVieU1pbmUgMjAxOC4yLjQiOm5ldyBEYXRlKCIxNyBPY3QgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjIuNSI6bmV3IERhdGUoIjE4IE5vdiAyMDE4IiksIkludGVsbGlKLVJ1YnlNaW5lIDIwMTguMi42IjpuZXcgRGF0ZSgiNiBEZWMgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjMiOm5ldyBEYXRlKCIyMyBOb3YgMjAxOCIpLCJJbnRlbGxpSi1SdWJ5TWluZSAyMDE4LjMuMSI6bmV3IERhdGUoIjEyIERlYyAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTYuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNi4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE2LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTYuMy42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNi4zLjciOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEuMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMS4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4xLjMiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjEuNCI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMS41IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjIuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMi4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4yLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjIuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMi42IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zLjEiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjMuMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTcuMy4zIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxNy4zLjQiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE3LjMuNSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMSI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMS4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4xLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjEuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMS40IjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4xLjUiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjEuNiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMiI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi4xIjpuZXcgRGF0ZSgiMTEgU2VwIDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4yLjIiOm5ldyBEYXRlKCIxMSBTZXAgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjIuMyI6bmV3IERhdGUoIjExIFNlcCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi40IjpuZXcgRGF0ZSgiMiBPY3QgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjIuNSI6bmV3IERhdGUoIjE5IE9jdCAyMDE4IiksIkludGVsbGlKLVdlYlN0b3JtIDIwMTguMi42IjpuZXcgRGF0ZSgiMTQgTm92IDIwMTgiKSwiSW50ZWxsaUotV2ViU3Rvcm0gMjAxOC4yLjciOm5ldyBEYXRlKCIyNiBOb3YgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjMiOm5ldyBEYXRlKCIxOCBOb3YgMjAxOCIpLCJJbnRlbGxpSi1XZWJTdG9ybSAyMDE4LjMuMSI6bmV3IERhdGUoIjUgRGVjIDIwMTgiKX07aS5lZGl0b3JFeHBpcnlEYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBhW2VdfSxpLmdldEVkaXRvclR5cGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuc3RhcnRzV2l0aCgiQXRvbS0iKT8iQXRvbSI6ZS5zdGFydHNXaXRoKCJWU0NvZGUtIik/IlZTQ29kZSI6IkpldEJyYWlucyJ9LGkuZ2V0RWRpdG9yTmFtZT1mdW5jdGlvbihlKXtpZihlLnN0YXJ0c1dpdGgoIkF0b20tIikpcmV0dXJuIkF0b20iO2lmKGUuc3RhcnRzV2l0aCgiVlNDb2RlLSIpKXJldHVybiJWUyBDb2RlIjt2YXIgdD1lLnNwbGl0KCIgIik7cmV0dXJuIHRbMF19LGkubGFzdENvbXBhdGlibGVFZGl0b3JWZXJzaW9uPWZ1bmN0aW9uKGUsdCl7dmFyIG47aWYoZS5zdGFydHNXaXRoKCJBdG9tLSIpKW49IkF0b20tIjtlbHNlIGlmKGUuc3RhcnRzV2l0aCgiVlNDb2RlLSIpKW49IlZTQ29kZS0iO2Vsc2V7dmFyIGk9ZS5zcGxpdCgiICIpO249aVswXSsiICJ9dmFyIG89W107Zm9yKHZhciByIGluIGEpci5zdGFydHNXaXRoKG4pJiZvLnB1c2goe2lkZTpyLGRhdGU6YVtyXX0pO3ZhciBsPW8uZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmRhdGU8dH0pO3JldHVybiBsLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5kYXRlPHQuZGF0ZT8xOmUuZGF0ZT50LmRhdGU/LTE6MH0pLDA9PT1sLmxlbmd0aD8iVW5rbm93biI6bFswXS5pZGUuc3Vic3RyaW5nKG4ubGVuZ3RoKX19LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtET01FeGNlcHRpb246MSxOYW1lZE5vZGVNYXA6MSxBdHRyOjEsTm9kZToxLEVsZW1lbnQ6MSxEb2N1bWVudEZyYWdtZW50OjEsSFRNTERvY3VtZW50OjEsRG9jdW1lbnQ6MSxYTUxEb2N1bWVudDoxLENoYXJhY3RlckRhdGE6MSxUZXh0OjEsQ0RBVEFTZWN0aW9uOjEsUHJvY2Vzc2luZ0luc3RydWN0aW9uOjEsQ29tbWVudDoxLERvY3VtZW50VHlwZToxLERPTUltcGxlbWVudGF0aW9uOjEsTm9kZUxpc3Q6MSxIVE1MQ29sbGVjdGlvbjoxLEhUTUxPcHRpb25zQ29sbGVjdGlvbjoxLERPTVN0cmluZ01hcDoxLERPTVRva2VuTGlzdDoxLFNWR0FuaW1hdGVkU3RyaW5nOjEsU1ZHTnVtYmVyOjEsU1ZHU3RyaW5nTGlzdDoxLEV2ZW50OjEsQ2xvc2VFdmVudDoxLEN1c3RvbUV2ZW50OjEsTWVzc2FnZUV2ZW50OjEsRXJyb3JFdmVudDoxLEhhc2hDaGFuZ2VFdmVudDoxLEZvY3VzRXZlbnQ6MSxQb3BTdGF0ZUV2ZW50OjEsVUlFdmVudDoxLE1vdXNlRXZlbnQ6MSxLZXlib2FyZEV2ZW50OjEsVG91Y2hFdmVudDoxLFByb2dyZXNzRXZlbnQ6MSxDb21wb3NpdGlvbkV2ZW50OjEsV2hlZWxFdmVudDoxLEV2ZW50VGFyZ2V0OjEsQmFyUHJvcDoxLExvY2F0aW9uOjEsSGlzdG9yeToxLFNjcmVlbjoxLFBlcmZvcm1hbmNlOjEsQmxvYjoxLEZpbGU6MSxGaWxlTGlzdDoxLERPTVBhcnNlcjoxLEZvcm1EYXRhOjEsWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldDoxLFhNTEh0dHBSZXF1ZXN0VXBsb2FkOjEsTm9kZUl0ZXJhdG9yOjEsVHJlZVdhbGtlcjoxLEhUTUxFbGVtZW50OjEsSFRNTEFuY2hvckVsZW1lbnQ6MSxIVE1MQXJlYUVsZW1lbnQ6MSxIVE1MQXVkaW9FbGVtZW50OjEsSFRNTEJhc2VFbGVtZW50OjEsSFRNTEJvZHlFbGVtZW50OjEsSFRNTEJSRWxlbWVudDoxLEhUTUxCdXR0b25FbGVtZW50OjEsSFRNTENhbnZhc0VsZW1lbnQ6MSxIVE1MRGF0YUVsZW1lbnQ6MSxIVE1MRGF0YUxpc3RFbGVtZW50OjEsSFRNTERldGFpbHNFbGVtZW50OjEsSFRNTERpYWxvZ0VsZW1lbnQ6MSxIVE1MRGlyZWN0b3J5RWxlbWVudDoxLEhUTUxEaXZFbGVtZW50OjEsSFRNTERMaXN0RWxlbWVudDoxLEhUTUxFbWJlZEVsZW1lbnQ6MSxIVE1MRmllbGRTZXRFbGVtZW50OjEsSFRNTEZvbnRFbGVtZW50OjEsSFRNTEZvcm1FbGVtZW50OjEsSFRNTEZyYW1lRWxlbWVudDoxLEhUTUxGcmFtZVNldEVsZW1lbnQ6MSxIVE1MSGVhZGluZ0VsZW1lbnQ6MSxIVE1MSGVhZEVsZW1lbnQ6MSxIVE1MSFJFbGVtZW50OjEsSFRNTEh0bWxFbGVtZW50OjEsSFRNTElGcmFtZUVsZW1lbnQ6MSxIVE1MSW1hZ2VFbGVtZW50OjEsSFRNTElucHV0RWxlbWVudDoxLEhUTUxMYWJlbEVsZW1lbnQ6MSxIVE1MTGVnZW5kRWxlbWVudDoxLEhUTUxMSUVsZW1lbnQ6MSxIVE1MTGlua0VsZW1lbnQ6MSxIVE1MTWFwRWxlbWVudDoxLEhUTUxNYXJxdWVlRWxlbWVudDoxLEhUTUxNZWRpYUVsZW1lbnQ6MSxIVE1MTWVudUVsZW1lbnQ6MSxIVE1MTWV0YUVsZW1lbnQ6MSxIVE1MTWV0ZXJFbGVtZW50OjEsSFRNTE1vZEVsZW1lbnQ6MSxIVE1MT2JqZWN0RWxlbWVudDoxLEhUTUxPTGlzdEVsZW1lbnQ6MSxIVE1MT3B0R3JvdXBFbGVtZW50OjEsSFRNTE9wdGlvbkVsZW1lbnQ6MSxIVE1MT3V0cHV0RWxlbWVudDoxLEhUTUxQYXJhZ3JhcGhFbGVtZW50OjEsSFRNTFBhcmFtRWxlbWVudDoxLEhUTUxQaWN0dXJlRWxlbWVudDoxLEhUTUxQcmVFbGVtZW50OjEsSFRNTFByb2dyZXNzRWxlbWVudDoxLEhUTUxRdW90ZUVsZW1lbnQ6MSxIVE1MU2NyaXB0RWxlbWVudDoxLEhUTUxTZWxlY3RFbGVtZW50OjEsSFRNTFNvdXJjZUVsZW1lbnQ6MSxIVE1MU3BhbkVsZW1lbnQ6MSxIVE1MU3R5bGVFbGVtZW50OjEsSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQ6MSxIVE1MVGFibGVDZWxsRWxlbWVudDoxLEhUTUxUYWJsZUNvbEVsZW1lbnQ6MSxIVE1MVGFibGVFbGVtZW50OjEsSFRNTFRpbWVFbGVtZW50OjEsSFRNTFRpdGxlRWxlbWVudDoxLEhUTUxUYWJsZVJvd0VsZW1lbnQ6MSxIVE1MVGFibGVTZWN0aW9uRWxlbWVudDoxLEhUTUxUZW1wbGF0ZUVsZW1lbnQ6MSxIVE1MVGV4dEFyZWFFbGVtZW50OjEsSFRNTFRyYWNrRWxlbWVudDoxLEhUTUxVTGlzdEVsZW1lbnQ6MSxIVE1MVW5rbm93bkVsZW1lbnQ6MSxIVE1MVmlkZW9FbGVtZW50OjEsU1ZHRWxlbWVudDoxLFNWR0dyYXBoaWNzRWxlbWVudDoxLFNWR1NWR0VsZW1lbnQ6MSxTdHlsZVNoZWV0OjEsTWVkaWFMaXN0OjEsQ1NTU3R5bGVTaGVldDoxLENTU1J1bGU6MSxDU1NTdHlsZVJ1bGU6MSxDU1NNZWRpYVJ1bGU6MSxDU1NJbXBvcnRSdWxlOjEsQ1NTU3R5bGVEZWNsYXJhdGlvbjoxLFN0eWxlU2hlZXRMaXN0OjEsWFBhdGhFeGNlcHRpb246MSxYUGF0aEV4cHJlc3Npb246MSxYUGF0aFJlc3VsdDoxLFhQYXRoRXZhbHVhdG9yOjEsTm9kZUZpbHRlcjoxLFVSTDoxLFVSTFNlYXJjaFBhcmFtczoxLFdpbmRvdzoxLGxlbmd0aDoxLHdpbmRvdzoxLGZyYW1lRWxlbWVudDoxLGZyYW1lczoxLHNlbGY6MSxwYXJlbnQ6MSx0b3A6MSxkb2N1bWVudDoxLGV4dGVybmFsOjEsbG9jYXRpb246MSxoaXN0b3J5OjEsbmF2aWdhdG9yOjEsbG9jYXRpb25iYXI6MSxtZW51YmFyOjEscGVyc29uYWxiYXI6MSxzY3JvbGxiYXJzOjEsc3RhdHVzYmFyOjEsdG9vbGJhcjoxLHBlcmZvcm1hbmNlOjEsc2NyZWVuOjEsYWRkRXZlbnRMaXN0ZW5lcjoxLHJlbW92ZUV2ZW50TGlzdGVuZXI6MSxkaXNwYXRjaEV2ZW50OjEsc2V0VGltZW91dDoxLHNldEludGVydmFsOjEsY2xlYXJJbnRlcnZhbDoxLGNsZWFyVGltZW91dDoxLE9wdGlvbjoxLEltYWdlOjEsQXVkaW86MSxwb3N0TWVzc2FnZToxLGF0b2I6MSxidG9hOjEsRmlsZVJlYWRlcjoxLFdlYlNvY2tldDoxLEFib3J0U2lnbmFsOjEsQWJvcnRDb250cm9sbGVyOjEsWE1MSHR0cFJlcXVlc3Q6MSxBcnJheUJ1ZmZlcjoxLEludDhBcnJheToxLFVpbnQ4QXJyYXk6MSxVaW50OENsYW1wZWRBcnJheToxLEludDE2QXJyYXk6MSxVaW50MTZBcnJheToxLEludDMyQXJyYXk6MSxVaW50MzJBcnJheToxLEZsb2F0MzJBcnJheToxLEZsb2F0NjRBcnJheToxLHN0b3A6MSxjbG9zZToxLGdldENvbXB1dGVkU3R5bGU6MSxjYXB0dXJlRXZlbnRzOjEscmVsZWFzZUV2ZW50czoxLGNvbnNvbGU6MSxuYW1lOjEsZGV2aWNlUGl4ZWxSYXRpbzoxLGlubmVyV2lkdGg6MSxpbm5lckhlaWdodDoxLG91dGVyV2lkdGg6MSxvdXRlckhlaWdodDoxLHBhZ2VYT2Zmc2V0OjEscGFnZVlPZmZzZXQ6MSxzY3JlZW5YOjEsc2NyZWVuWToxLHNjcm9sbFg6MSxzY3JvbGxZOjEsc2NyZWVuTGVmdDoxLHNjcmVlblRvcDoxLGFsZXJ0OjEsYmx1cjoxLGNvbmZpcm06MSxmb2N1czoxLG1vdmVCeToxLG1vdmVUbzoxLG9wZW46MSxwcmludDoxLHByb21wdDoxLHJlc2l6ZUJ5OjEscmVzaXplVG86MSxzY3JvbGw6MSxzY3JvbGxCeToxLHNjcm9sbFRvOjF9fSx7fV0sNTpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5fdGVzdElkPWUuc3BlYyx0aGlzLl9maWxlSWQ9ZS5maWxlLHRoaXMuX3JhbmdlPWUucmFuZ2UsdGhpcy5fdGV4dD1lLnRleHQsdGhpcy5fdmFsdWVCYWc9ZS52YWx1ZUJhZyx0aGlzLl90eXBlPWUudHlwZSx0aGlzLl9jb250ZXh0PWUuY29udGV4dCx0aGlzLl9hY3R1YWw9ZS5hY3R1YWwsdGhpcy5fZXhwZWN0ZWQ9ZS5leHBlY3RlZH1yZXR1cm4gZS5wcm90b3R5cGUudGVzdElkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Rlc3RJZH0sZS5wcm90b3R5cGUuZmlsZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVJZH0sZS5wcm90b3R5cGUucmFuZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFuZ2V9LGUucHJvdG90eXBlLnNldFJhbmdlPWZ1bmN0aW9uKGUpe3RoaXMuX3JhbmdlPWV9LGUucHJvdG90eXBlLnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGV4dH0sZS5wcm90b3R5cGUudmFsdWVCYWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmFsdWVCYWd9LGUucHJvdG90eXBlLmRldGFjaFZhbHVlQmFnPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdmFsdWVCYWc7cmV0dXJuIGRlbGV0ZSB0aGlzLl92YWx1ZUJhZyxlfSxlLnByb3RvdHlwZS50eXBlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3R5cGV9LGUucHJvdG90eXBlLnNldEZpbGU9ZnVuY3Rpb24oZSl7dGhpcy5fZmlsZT1lfSxlLnByb3RvdHlwZS5maWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGV9LGUucHJvdG90eXBlLmxpbmU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmFuZ2U/Xy5pc0FycmF5KHRoaXMuX3JhbmdlKT90aGlzLl9yYW5nZVswXTp0aGlzLl9yYW5nZS5zdGFydExpbmUoKTp2b2lkIDB9LGUucHJvdG90eXBlLmNvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGV4dH0sZS5wcm90b3R5cGUuYWN0dWFsPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FjdHVhbH0sZS5wcm90b3R5cGUuZXhwZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZXhwZWN0ZWR9LGV9KCk7dC5leHBvcnRzPWl9LHt9XSw2OltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLl9pdGVtcz1lLml0ZW1zLHRoaXMuX2hpdHM9ZS5oaXRzfXJldHVybiBlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKHQsbil7dmFyIGk9dGhpczt0aGlzLl9rZXk9ZS5yYW5nZUtleSh0aGlzLl9pdGVtcyksdGhpcy5fZmlsZT10LHRoaXMuX3N0YXJ0TGluZT10aGlzLl9pdGVtc1swXSx0aGlzLl9zdGFydENvbHVtbj10aGlzLl9pdGVtc1sxXSx0aGlzLl9lbmRMaW5lPXRoaXMuX2l0ZW1zWzJdLHRoaXMuX2VuZENvbHVtbj10aGlzLl9pdGVtc1szXSx0aGlzLl9udW1PZkNvdmVyaW5nVGVzdHM9MCx0aGlzLl9pc0NvdmVyZWQ9ITEsdGhpcy5faGl0cyYmKHRoaXMuX2NvdmVyaW5nVGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaCh0aGlzLl9oaXRzLGZ1bmN0aW9uKGUpe2lmKGUpe3ZhciB0PW5bZV07aWYoIXQpcmV0dXJuO3ZhciBhPXQua2V5KCk7aS5fY292ZXJpbmdUZXN0TWFwW2FdPXQsaS5fYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcodCl9ZWxzZSBpLl9pc0NvdmVyZWRCeU5vdFRlc3RzPSEwfSksaS5fbnVtT2ZDb3ZlcmluZ1Rlc3RzPV8uc2l6ZShpLl9jb3ZlcmluZ1Rlc3RNYXApLGkuX3NldElzQ292ZXJlZCgpKSxkZWxldGUgdGhpcy5faXRlbXMsZGVsZXRlIHRoaXMuX2hpdHN9LGUucHJvdG90eXBlLmxpbmVTaGlmdD1mdW5jdGlvbih0KXt0aGlzLl9zdGFydExpbmUrPXQsdGhpcy5fZW5kTGluZSs9dCx0aGlzLl9rZXk9ZS5yYW5nZUtleShbdGhpcy5fc3RhcnRMaW5lLHRoaXMuX3N0YXJ0Q29sdW1uLHRoaXMuX2VuZExpbmUsdGhpcy5fZW5kQ29sdW1uXSl9LGUucHJvdG90eXBlLnN0YXJ0TGluZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGFydExpbmV9LGUucHJvdG90eXBlLnN0YXJ0Q29sdW1uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXJ0Q29sdW1ufSxlLnByb3RvdHlwZS5lbmRMaW5lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2VuZExpbmV9LGUucHJvdG90eXBlLmVuZENvbHVtbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9lbmRDb2x1bW59LGUucHJvdG90eXBlLmZhaWxzPWZ1bmN0aW9uKGUpe3RoaXMuX2dsb2JhbEVycm9yc3x8KHRoaXMuX2dsb2JhbEVycm9ycz1bXSksfnRoaXMuX2dsb2JhbEVycm9ycy5pbmRleE9mKGUpfHx0aGlzLl9nbG9iYWxFcnJvcnMucHVzaChlKX0sZS5wcm90b3R5cGUuc2V0Q29uc29sZUxvZz1mdW5jdGlvbihlKXt0aGlzLl9jb25zb2xlTG9nPWV9LGUucHJvdG90eXBlLmNvbnNvbGVMb2c9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29uc29sZUxvZ30sZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleX0sZS5wcm90b3R5cGUuaXNEaXNwb3NlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc0Rpc3Bvc2VkfSxlLnByb3RvdHlwZS5pc0Vycm9yU291cmNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZhaWxlZEJ5TWVUZXN0cyYmIV8uaXNFbXB0eSh0aGlzLl9mYWlsZWRCeU1lVGVzdHMpfHx0aGlzLl9nbG9iYWxFcnJvcnMmJiFfLmlzRW1wdHkodGhpcy5fZ2xvYmFsRXJyb3JzKX0sZS5wcm90b3R5cGUuaXNPbkVycm9yUGF0aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9mYWlsZWRPbk1lVGVzdHMmJiFfLmlzRW1wdHkodGhpcy5fZmFpbGVkT25NZVRlc3RzKX0sZS5wcm90b3R5cGUuZXJyb3JzPWZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIHRoaXMuaXNFcnJvclNvdXJjZSgpPyh0aGlzLl9mYWlsZWRCeU1lVGVzdHMmJihlPWUuY29uY2F0KF8uZmxhdHRlbihfLnZhbHVlcyh0aGlzLl9mYWlsZWRCeU1lVGVzdHMpKSkpLHRoaXMuX2dsb2JhbEVycm9ycyYmKGU9ZS5jb25jYXQodGhpcy5fZ2xvYmFsRXJyb3JzKSksZSk6ZX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9maWxlLGRlbGV0ZSB0aGlzLl9jb3ZlcmluZ1Rlc3RNYXAsZGVsZXRlIHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyxkZWxldGUgdGhpcy5fZmFpbGVkQnlNZVRlc3RzLGRlbGV0ZSB0aGlzLl9nbG9iYWxFcnJvcnMsdGhpcy5faXNEaXNwb3NlZD0hMCxkZWxldGUgdGhpcy5fbnVtT2ZDb3ZlcmluZ1Rlc3RzfSxlLnByb3RvdHlwZS5zb3VyY2VGaWxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGV9LGUucHJvdG90eXBlLmZhaWxzVGVzdD1mdW5jdGlvbihlLHQpe3RoaXMuX2ZhaWxlZEJ5TWVUZXN0c3x8KHRoaXMuX2ZhaWxlZEJ5TWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSx0aGlzLl9mYWlsZWRCeU1lVGVzdHNbZS5rZXkoKV09dH0sZS5wcm90b3R5cGUubm90Q292ZXJlZEJ5PWZ1bmN0aW9uKGUpe3ZhciB0PWUua2V5KCksbj10aGlzLmlzQ292ZXJlZCgpO3RoaXMuX2NvdmVyaW5nVGVzdE1hcCYmdGhpcy5fY292ZXJpbmdUZXN0TWFwW3RdJiYoZGVsZXRlIHRoaXMuX2NvdmVyaW5nVGVzdE1hcFt0XSx0aGlzLl9udW1PZkNvdmVyaW5nVGVzdHMtLSx0aGlzLl9zZXRJc0NvdmVyZWQoKSksdGhpcy5fZmFpbGVkQnlNZVRlc3RzJiZkZWxldGUgdGhpcy5fZmFpbGVkQnlNZVRlc3RzW3RdLHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyYmZGVsZXRlIHRoaXMuX2ZhaWxlZE9uTWVUZXN0c1t0XSxudWxsIT10aGlzLl9maWxlJiZ0aGlzLl9maWxlLnJhbmdlQ292ZXJhZ2VDaGFuZ2VkKHRoaXMsbil9LGUucHJvdG90eXBlLmNvdmVyaW5nVGVzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gXy52YWx1ZXModGhpcy5fY292ZXJpbmdUZXN0TWFwKX0sZS5wcm90b3R5cGUuaXNDb3ZlcmVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzQ292ZXJlZH0sZS5wcm90b3R5cGUuX3NldElzQ292ZXJlZD1mdW5jdGlvbigpe3RoaXMuX2lzQ292ZXJlZD10aGlzLl9udW1PZkNvdmVyaW5nVGVzdHM+MHx8dGhpcy5faXNDb3ZlcmVkQnlOb3RUZXN0c30sZS5wcm90b3R5cGUuYXR0YWNoZWRUb1NvdXJjZUZpbGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2NvdmVyaW5nVGVzdE1hcCYmXy5lYWNoKHRoaXMuX2NvdmVyaW5nVGVzdE1hcCxmdW5jdGlvbih0KXtyZXR1cm4gdC5jb3ZlcnMoZSl9KX0sZS5wcm90b3R5cGUudXBkYXRlRnJvbT1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcztyZXR1cm4gdCYmbiYmXy5pc0VtcHR5KGUuX2NvdmVyaW5nVGVzdE1hcCk/dm9pZChlLl9jb25zb2xlTG9nJiYodGhpcy5fY29uc29sZUxvZz1lLl9jb25zb2xlTG9nKSk6KHRoaXMuX2lzQ292ZXJlZEJ5Tm90VGVzdHM9ZS5faXNDb3ZlcmVkQnlOb3RUZXN0cyx0aGlzLl9jb25zb2xlTG9nPWUuX2NvbnNvbGVMb2csdGhpcy5fZmFpbGVkQnlNZVRlc3RzJiYodGhpcy5fZmFpbGVkQnlNZVRlc3RzPU9iamVjdC5jcmVhdGUobnVsbCkpLHRoaXMuX2dsb2JhbEVycm9ycyYmKHRoaXMuX2dsb2JhbEVycm9ycz1bXSksZS5fY292ZXJpbmdUZXN0TWFwPyh0JiYhbj8odGhpcy5fY292ZXJpbmdUZXN0TWFwPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZmFpbGVkT25NZVRlc3RzJiYodGhpcy5fZmFpbGVkT25NZVRlc3RzPU9iamVjdC5jcmVhdGUobnVsbCkpLF8uZWFjaChlLl9jb3ZlcmluZ1Rlc3RNYXAsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5rZXkoKTtpLl9jb3ZlcmluZ1Rlc3RNYXBbdF09ZSxlLmNvdmVycyhpKSxpLl9hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZyhlKX0pKTppLl9mYWlsZWRPbk1lVGVzdHM/Xy5lYWNoKGUuX2NvdmVyaW5nVGVzdE1hcCxmdW5jdGlvbihlKXtyZXR1cm4gaS5fdXBkYXRlVGVzdFdpdGhQb3NzaWJsZUZhaWxlZE9uVGhlUmFuZ2UoZSxlLmtleSgpKX0pOl8uZWFjaChlLl9jb3ZlcmluZ1Rlc3RNYXAsZnVuY3Rpb24oZSl7cmV0dXJuIGkuX3VwZGF0ZVRlc3QoZSxlLmtleSgpKX0pLGkuX251bU9mQ292ZXJpbmdUZXN0cz1fLnNpemUoaS5fY292ZXJpbmdUZXN0TWFwKSk6KHRoaXMuX2NvdmVyaW5nVGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX251bU9mQ292ZXJpbmdUZXN0cz0wLHRoaXMuX2ZhaWxlZE9uTWVUZXN0cyYmKHRoaXMuX2ZhaWxlZE9uTWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSksdm9pZCB0aGlzLl9zZXRJc0NvdmVyZWQoKSl9LGUucHJvdG90eXBlLl91cGRhdGVUZXN0PWZ1bmN0aW9uKGUsdCl7dGhpcy5fY292ZXJpbmdUZXN0TWFwW3RdPWUsZS5jb3ZlcnModGhpcyksdGhpcy5fYWRkRmFpbGVkT25NZVRlc3RJZkZhaWxpbmcoZSl9LGUucHJvdG90eXBlLl91cGRhdGVUZXN0V2l0aFBvc3NpYmxlRmFpbGVkT25UaGVSYW5nZT1mdW5jdGlvbihlLHQpe2RlbGV0ZSB0aGlzLl9mYWlsZWRPbk1lVGVzdHNbdF0sdGhpcy5fdXBkYXRlVGVzdChlLHQpfSxlLnByb3RvdHlwZS5faXNJbnNpZGVPZj1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fc3RhcnRMaW5lPj1lLl9zdGFydExpbmUmJmUuX2VuZExpbmU+PXRoaXMuX2VuZExpbmUmJih0aGlzLl9zdGFydExpbmU+ZS5fc3RhcnRMaW5lfHx0aGlzLl9zdGFydENvbHVtbj49ZS5fc3RhcnRDb2x1bW4pJiYoZS5fZW5kTGluZT50aGlzLl9lbmRMaW5lfHxlLl9lbmRDb2x1bW4+PXRoaXMuX2VuZENvbHVtbil9LGUucHJvdG90eXBlLmNsb3NlclRvVGhlTGluZVRoYW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fc3RhcnRMaW5lPT09ZSYmdC5fc3RhcnRMaW5lPT09ZSYmdGhpcy5fc3RhcnRDb2x1bW4hPT10Ll9zdGFydENvbHVtbj90aGlzLl9zdGFydENvbHVtbjx0Ll9zdGFydENvbHVtbjp0aGlzLl9zdGFydExpbmU9PT1lJiZ0Ll9lbmRMaW5lPT09ZSYmdGhpcy5fc3RhcnRDb2x1bW4+dC5fZW5kQ29sdW1uPyEwOnRoaXMuX2lzSW5zaWRlT2YodCl9LGUucHJvdG90eXBlLl9hZGRGYWlsZWRPbk1lVGVzdElmRmFpbGluZz1mdW5jdGlvbihlKXsKZS5pc0ZhaWxpbmcoKSYmKHRoaXMuX2ZhaWxlZE9uTWVUZXN0c3x8KHRoaXMuX2ZhaWxlZE9uTWVUZXN0cz1PYmplY3QuY3JlYXRlKG51bGwpKSx0aGlzLl9mYWlsZWRPbk1lVGVzdHNbZS5rZXkoKV09ZSl9LGUucmFuZ2VLZXk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuam9pbigiLiIpfSxlfSgpO3QuZXhwb3J0cz1pfSx7fV0sNzpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKCIuL2RvY3VtZW50TGluZSIpLGE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dGhpcy5fbGluZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9yZWN5Y2xlZExpbmVzPVtdLHRoaXMuX2xpbmVTaGlmdE9ySW52YWxpZGF0aW9uU2luY2VMYXN0VXBkYXRlPSExfXJldHVybiBlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0LG4pe3ZhciBhPXRoaXMsbz10aGlzLl9saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZTtkZWxldGUgdGhpcy5fbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGUsbj8odGhpcy5fbGluZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9yZWN5Y2xlZExpbmVzPVtdKTp0JiZfLmVhY2godGhpcy5fbGluZXMsZnVuY3Rpb24oZSl7ZS5yZW1vdmVSYW5nZXMoKX0pO3ZhciByPVtdLGw9W107Xy5lYWNoKGUsZnVuY3Rpb24oZSl7aWYoIWUuaXNEaXNwb3NlZCgpKXt2YXIgbj1lLnN0YXJ0TGluZSgpLG89YS5fbGluZXNbbl07b3x8KG89bmV3IGkobiksYS5fbGluZXNbbl09byxsLnB1c2gobykpLG8uYWRkUmFuZ2UoZSx0KSxyLnB1c2gobyl9fSk7dmFyIHM9T2JqZWN0LmNyZWF0ZShudWxsKTtyPXQmJiFuP18udmFsdWVzKHRoaXMuX2xpbmVzKS5jb25jYXQobCk6cixfLmVhY2gocixmdW5jdGlvbihlKXtlLmhhc1JhbmdlcygpP2UudXBkYXRlTGluZURhdGEoKSYmKHNbZS5rZXkoKV09ZSk6KGUuZGlzcG9zZSgpLGRlbGV0ZSBhLl9saW5lc1tlLm51bWJlcigpXSxhLl9yZWN5Y2xlZExpbmVzLnB1c2goZSkpfSk7dmFyIHA9dGhpcy5fcmVjeWNsZWRMaW5lcy5zbGljZSgpO3JldHVybiB0aGlzLl9yZWN5Y2xlZExpbmVzPVtdLHtsaW5lczpuP18ubWFwKHRoaXMuX2xpbmVzLGZ1bmN0aW9uKGUpe3JldHVybiBhLl9jb21wYWN0TGluZShlKX0pOl8ubWFwKG8/dGhpcy5fbGluZXM6cyxmdW5jdGlvbihlKXt2YXIgdD1hLl9jb21wYWN0TGluZShlKTtyZXR1cm4gdC5jaGFuZ2VkPW8/ISFzW2Uua2V5KCldfHx2b2lkIDA6MSx0fSkuY29uY2F0KF8ubWFwKHAsZnVuY3Rpb24oZSl7cmV0dXJue2lkOmUua2V5KCksZGVsOjF9fSkpLGFsbExpbmVzOm58fG99fSxlLnByb3RvdHlwZS5saW5lPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9saW5lc1tlXX0sZS5wcm90b3R5cGUuYWxsTGluZXM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybntsaW5lczpfLm1hcCh0aGlzLl9saW5lcyxmdW5jdGlvbih0KXtyZXR1cm4gZS5fY29tcGFjdExpbmUodCl9KSxhbGxMaW5lczohMH19LGUucHJvdG90eXBlLl9jb21wYWN0TGluZT1mdW5jdGlvbihlKXtyZXR1cm57aWQ6ZS5rZXkoKSxudW06ZS5udW1iZXIoKSxzdGF0ZTplLnN0YXRlKCksbG9nOmUuY29uc29sZUxvZ1RleHQoKSxsb25nTG9nOmUubG9uZ0NvbnNvbGVMb2dUZXh0KCksZXJyOmUuZXJyb3JTb3VyY2VUZXh0KCl9fSxlLnByb3RvdHlwZS5pbnZhbGlkYXRlTGluZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9saW5lU2hpZnRPckludmFsaWRhdGlvblNpbmNlTGFzdFVwZGF0ZT0hMCxfLmVhY2goXy5yYW5nZShlLnN0YXJ0LGUuZW5kKSxmdW5jdGlvbihuKXt2YXIgaT10Ll9saW5lc1tuXTtpJiZ0Ll9yZWN5Y2xlTGluZUlmSW5DaGFuZ2VGcmFtZShpLGUpfSl9LGUucHJvdG90eXBlLnNoaWZ0TGluZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7dGhpcy5fbGluZVNoaWZ0T3JJbnZhbGlkYXRpb25TaW5jZUxhc3RVcGRhdGU9ITA7dmFyIGE9Xy52YWx1ZXModGhpcy5fbGluZXMpO3RoaXMuX2xpbmVzPU9iamVjdC5jcmVhdGUobnVsbCksXy5lYWNoKGEsZnVuY3Rpb24oYSl7dmFyIG89YS5udW1iZXIoKTtpZighaS5fcmVjeWNsZUxpbmVJZkluQ2hhbmdlRnJhbWUoYSxuKSl7bz5lJiYobys9dCxhLm51bWJlcihvKSk7dmFyIHI9aS5fbGluZXNbb107cj8oci5kaXNwb3NlKCksYS5kaXNwb3NlKCksaS5fcmVjeWNsZWRMaW5lcy5wdXNoKHIpLGkuX3JlY3ljbGVkTGluZXMucHVzaChhKSxkZWxldGUgaS5fbGluZXNbb10pOmkuX2xpbmVzW29dPWF9fSl9LGUucHJvdG90eXBlLl9yZWN5Y2xlTGluZUlmSW5DaGFuZ2VGcmFtZT1mdW5jdGlvbihlLHQpe3ZhciBuPWUubnVtYmVyKCk7cmV0dXJuIG4+PXQuc3RhcnQmJm48PXQuZW5kPyhlLmRpc3Bvc2UoKSx0aGlzLl9yZWN5Y2xlZExpbmVzLnB1c2goZSksITApOnZvaWQgMH0sZX0oKTt0LmV4cG9ydHM9YX0seyIuL2RvY3VtZW50TGluZSI6OH1dLDg6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9ZSgiLi4vc2hhcmVkL2VudW1zIikubGluZVN0YXRlLGE9MTI4LG89MTAyNCoocHJvY2Vzcy5lbnYucXVva2thPzI1NjoxMCkscj0xMjgsbD0wLHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuX2xpbmVOdW1iZXI9ZSx0aGlzLl9yYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9pZD0rK2x9cmV0dXJuIGUucHJvdG90eXBlLmhhc1Jhbmdlcz1mdW5jdGlvbigpe3JldHVybiFfLmlzRW1wdHkodGhpcy5fcmFuZ2VzKX0sZS5wcm90b3R5cGUucmFuZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jhbmdlc30sZS5wcm90b3R5cGUudXBkYXRlTGluZURhdGE9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9ITAsbj0hMCxsPSExLHM9ITEscD10aGlzLl9saW5lU3RhdGUsYz10aGlzLl9jb25zb2xlTG9nVGV4dCxkPXRoaXMuX2Vycm9yU291cmNlVGV4dDtyZXR1cm4gZGVsZXRlIHRoaXMuX2NvbnNvbGVMb2dUZXh0LGRlbGV0ZSB0aGlzLl9sb25nQ29uc29sZUxvZ1RleHQsZGVsZXRlIHRoaXMuX2Vycm9yU291cmNlVGV4dCxfLmVhY2godGhpcy5fcmFuZ2VzLGZ1bmN0aW9uKGkpe3ZhciBwPWkuY29uc29sZUxvZygpO2lmKHAmJnAubGVuZ3RoKXtfLmlzU3RyaW5nKGUuX2NvbnNvbGVMb2dUZXh0KXx8KGUuX2NvbnNvbGVMb2dUZXh0PSIiKTt2YXIgYz1wLmxlbmd0aD5hLGQ9Xy5tYXAoYz9wLnNsaWNlKHAubGVuZ3RoLWEpOnAsZnVuY3Rpb24oZSl7cmV0dXJuIiI9PT1lPyJbZW1wdHkgc3RyaW5nXSI6ZX0pLmpvaW4oIiwgIik7aWYoZC5sZW5ndGg+YSYmKGQ9KDA9PT1kLmluZGV4T2YoInRoZW4gIik/InRoZW4gIjoiIikrIi4uLiAiK2Quc3Vic3RyKGQubGVuZ3RoLWErNCkpLGUuX2NvbnNvbGVMb2dUZXh0Kz0oZS5fY29uc29sZUxvZ1RleHQ/IiB8ICI6IiIpK2QsIWUuX2xvbmdDb25zb2xlTG9nVGV4dHx8Xy5pc1N0cmluZyhlLl9sb25nQ29uc29sZUxvZ1RleHQpJiZlLl9sb25nQ29uc29sZUxvZ1RleHQubGVuZ3RoPG8pe18uaXNTdHJpbmcoZS5fbG9uZ0NvbnNvbGVMb2dUZXh0KXx8KGUuX2xvbmdDb25zb2xlTG9nVGV4dD0iIik7dmFyIHU9cC5sZW5ndGg+MWUzLGg9KHU/IiAgLi4uXG4iOiIiKSsiICIrKHU/cC5zbGljZShwLmxlbmd0aC0xZTMpOnApLmpvaW4oIiBcbiAiKTtlLl9sb25nQ29uc29sZUxvZ1RleHQrPShlLl9sb25nQ29uc29sZUxvZ1RleHQ/IlxuLS0tXG4iOiIiKStofX1pZihpLmlzRXJyb3JTb3VyY2UoKSl7bD0hMDt2YXIgbT1pLmVycm9ycygpO2lmKG0ubGVuZ3RoKXt2YXIgUz1tW20ubGVuZ3RoLTFdLm1lc3NhZ2UoKTtlLl9lcnJvclNvdXJjZVRleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKFN8fCIiLHIpfX1pLmlzT25FcnJvclBhdGgoKSYmKHM9ITApLGkuaXNDb3ZlcmVkKCk/bj0hMTp0PSExfSksZS5fY29uc29sZUxvZ1RleHQmJihfLmlzU3RyaW5nKGUuX2xvbmdDb25zb2xlTG9nVGV4dCkmJihlLl9sb25nQ29uc29sZUxvZ1RleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKGUuX2xvbmdDb25zb2xlTG9nVGV4dCxvLCEwKSksZS5fY29uc29sZUxvZ1RleHQ9ZS5fdHJ1bmNhdGVNZXNzYWdlKGUuX2NvbnNvbGVMb2dUZXh0LGEpKSx0aGlzLl9saW5lU3RhdGU9bD9pLmVycm9yU291cmNlOnM/aS5lcnJvclBhdGg6bj9pLm5vdENvdmVyZWQ6dD9pLmZ1bGx5Q292ZXJlZDppLnBhcnRpYWxseUNvdmVyZWQsdGhpcy5fbGluZVN0YXRlIT09cHx8dGhpcy5fY29uc29sZUxvZ1RleHQhPT1jfHx0aGlzLl9lcnJvclNvdXJjZVRleHQhPT1kfSxlLnByb3RvdHlwZS5jb25zb2xlTG9nVGV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9jb25zb2xlTG9nVGV4dH0sZS5wcm90b3R5cGUubG9uZ0NvbnNvbGVMb2dUZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xvbmdDb25zb2xlTG9nVGV4dH0sZS5wcm90b3R5cGUuZXJyb3JTb3VyY2VUZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Vycm9yU291cmNlVGV4dH0sZS5wcm90b3R5cGUuc3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbGluZVN0YXRlfSxlLnByb3RvdHlwZS5hZGRSYW5nZT1mdW5jdGlvbihlLHQpe3ZhciBuPWUua2V5KCk7dHx8ZGVsZXRlIHRoaXMuX3Jhbmdlc1tuXSx0aGlzLl9yYW5nZXNbbl09ZX0sZS5wcm90b3R5cGUucmVtb3ZlUmFuZ2VzPWZ1bmN0aW9uKCl7dGhpcy5fcmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCl9LGUucHJvdG90eXBlLm51bWJlcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49dGhpcy5fbGluZU51bWJlcjtpZihfLmlzVW5kZWZpbmVkKGUpKXJldHVybiBuO2lmKGUhPT1uKXt0aGlzLl9saW5lTnVtYmVyPWU7dmFyIGk9ZS1uLGE9Xy52YWx1ZXModGhpcy5fcmFuZ2VzKTt0aGlzLnJlbW92ZVJhbmdlcygpLF8uZWFjaChhLGZ1bmN0aW9uKGUpe2UubGluZVNoaWZ0KGkpLHQuX3Jhbmdlc1tlLmtleSgpXT1lfSl9fSxlLnByb3RvdHlwZS5kaXNwb3NlPWZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVSYW5nZXMoKSxkZWxldGUgdGhpcy5fY29uc29sZUxvZ1RleHQsZGVsZXRlIHRoaXMuX2Vycm9yU291cmNlVGV4dCxkZWxldGUgdGhpcy5fbGluZVN0YXRlLHRoaXMuX2lzRGlzcG9zZWQ9ITB9LGUucHJvdG90eXBlLmlzRGlzcG9zZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNEaXNwb3NlZH0sZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lkfSxlLnByb3RvdHlwZS5fdHJ1bmNhdGVNZXNzYWdlPWZ1bmN0aW9uKGUsdCxuKXt2YXIgaT1lLmxlbmd0aD50PyIuLi4iOiIiO3JldHVybiBlPWUuc3Vic3RyKDAsdCksKG4/ZTp0aGlzLl9jbGVhblN0cmluZyhlKSkraX0sZS5wcm90b3R5cGUuX2NsZWFuU3RyaW5nPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnJlcGxhY2UoL1xyXG5ccyovZywiICIpLnJlcGxhY2UoL1xuXHMqL2csIiAiKX0sZX0oKTt0LmV4cG9ydHM9c30seyIuLi9zaGFyZWQvZW51bXMiOjE2fV0sOTpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKCIuL3N0YWNrRW50cnkiKSxhPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLl9hY3R1YWw9ZS5hY3R1YWwsdGhpcy5fZXhwZWN0ZWQ9ZS5leHBlY3RlZCx0aGlzLl9tZXNzYWdlPWUubWVzc2FnZSx0aGlzLl9zdGFjaz1lLnN0YWNrLHRoaXMuX3NuYXBzaG90PWUuc25hcHNob3QsdGhpcy5fY29udGV4dD1lLmNvbnRleHR8fHt9fXJldHVybiBlLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXRoaXMuX3N0YWNrO3RoaXMuX3N0YWNrPVtdLF8uZWFjaCh0LGZ1bmN0aW9uKHQsbil7cmV0dXJuIGUuX3N0YWNrLnB1c2gobmV3IGkodFswXSx0WzFdLGUuX2NvbnRleHRbbl0pKX0pLGRlbGV0ZSB0aGlzLl9jb250ZXh0fSxlLnByb3RvdHlwZS5zdGFjaz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zdGFja30sZS5wcm90b3R5cGUubWVzc2FnZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9tZXNzYWdlfSxlLnByb3RvdHlwZS5hY3R1YWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWN0dWFsfSxlLnByb3RvdHlwZS5leHBlY3RlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9leHBlY3RlZH0sZS5wcm90b3R5cGUuc25hcHNob3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc25hcHNob3R9LGUucHJvdG90eXBlLmtleT1mdW5jdGlvbigpe3JldHVybih0aGlzLl9tZXNzYWdlfHwiIikrXy5yZWR1Y2UodGhpcy5fc3RhY2ssZnVuY3Rpb24oZSx0KXtyZXR1cm4gZSs9dC5rZXkoKX0sIiIpfSxlfSgpO3QuZXhwb3J0cz1hfSx7Ii4vc3RhY2tFbnRyeSI6MTR9XSwxMDpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKCIuL2Vycm9yRW50cnkiKSxhPShlKCIuL3N0YWNrRW50cnkiKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5faWQ9ZS5pZCx0aGlzLl9maWxlSWQ9ZS5maWxlSWQsdGhpcy5fbG9nPWUubG9nLHRoaXMuX25hbWU9ZS5uYW1lLHRoaXMuX3Rlc3RzPWUudGVzdHMsdGhpcy5fc3RhcnQ9ZS5zdGFydCx0aGlzLl90aW1lPWUudGltZSx0aGlzLl9zbG93PWUuc2xvd31yZXR1cm4gZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbih0LG4sYSxvKXt2YXIgcj10aGlzO2lmKHRoaXMuX3BhcmVudD10LHRoaXMuX2lkJiYodGhpcy5fYnVpbGRGdWxsTmFtZUFuZFBhdGgoKSx0aGlzLl9zZXRLZXkoKSxhKHRoaXMpLHRoaXMuX2NvdmVyZWRSYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9jb3ZlcmVkRmlsZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl90cz1uLHRoaXMuX2xvZyYmdGhpcy5fbG9nLmxlbmd0aCkpe3RoaXMuX2lzRmFpbGluZz0hMDt2YXIgbD10aGlzLl9sb2c7dGhpcy5fbG9nPVtdLHRoaXMuX2Vycm9yU3RhY2tNYXA9T2JqZWN0LmNyZWF0ZShudWxsKSxfLmVhY2gobCxmdW5jdGlvbihlKXt2YXIgdD1uZXcgaShlKTt0LmluaXQoKSxfLmVhY2godC5zdGFjaygpLGZ1bmN0aW9uKGUpe3ZhciBuPWUua2V5KCksaT1yLl9lcnJvclN0YWNrTWFwW25dO2k/fl8uaW5kZXhPZihpLHQpfHxpLnB1c2godCk6KGk9W10saS5wdXNoKHQpLHIuX2Vycm9yU3RhY2tNYXBbbl09aSksaS5zdGFja0VudHJ5PWUsbyhlKX0pLHIuX2xvZy5wdXNoKHQpfSl9dGhpcy5fdGVzdHMmJihfLmVhY2godGhpcy5fdGVzdHMsZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBlKHQpLmluaXQocixuLGEsbyl9KSxkZWxldGUgdGhpcy5fdGVzdHMpfSxlLnByb3RvdHlwZS5pZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9pZH0sZS5wcm90b3R5cGUua2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleXx8KHRoaXMuX3NldEtleSgpLHRoaXMuX2tleSl9LGUucHJvdG90eXBlLl9zZXRLZXk9ZnVuY3Rpb24oKXt0aGlzLl9rZXk9dGhpcy5fZmlsZUlkKyJfIit0aGlzLl9mdWxsTmFtZX0sZS5wcm90b3R5cGUuZmlsZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVJZH0sZS5wcm90b3R5cGUuZmlsZVBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdGVzdEZpbGUmJnRoaXMuX3Rlc3RGaWxlLnBhdGgoKX0sZS5wcm90b3R5cGUudGltZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl90aW1lfSxlLnByb3RvdHlwZS5lcnJvcnM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9nfSxlLnByb3RvdHlwZS5hZGRDb25zb2xlTWVzc2FnZT1mdW5jdGlvbihlKXt0aGlzLl9jb25zb2xlTWVzc2FnZXN8fCh0aGlzLl9jb25zb2xlTWVzc2FnZXM9W10pLHRoaXMuX2NvbnNvbGVNZXNzYWdlcy5wdXNoKGUpfSxlLnByb3RvdHlwZS5jb25zb2xlTWVzc2FnZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29uc29sZU1lc3NhZ2VzfSxlLnByb3RvdHlwZS5pc0ZhaWxpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNGYWlsaW5nfSxlLnByb3RvdHlwZS5zbG93PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Nsb3d9LGUucHJvdG90eXBlLnNldFRlc3RGaWxlPWZ1bmN0aW9uKGUpe3RoaXMuX3Rlc3RGaWxlPWV9LGUucHJvdG90eXBlLm9ic29sZXRlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIGRlbGV0ZSB0aGlzLl9zdGFydFJhbmdlLGRlbGV0ZSB0aGlzLl90ZXN0RmlsZSx0aGlzLl9jb3ZlcmVkUmFuZ2VzJiYoXy5lYWNoKHRoaXMuX2NvdmVyZWRSYW5nZXMsZnVuY3Rpb24obil7aWYobi5ub3RDb3ZlcmVkQnkoZSksIW4uaXNEaXNwb3NlZCgpKXt2YXIgaT1uLnNvdXJjZUZpbGUoKTt0W2kua2V5KCldPWl9fSksZGVsZXRlIHRoaXMuX2NvdmVyZWRSYW5nZXMpLGRlbGV0ZSB0aGlzLl9lcnJvclN0YWNrTWFwLGRlbGV0ZSB0aGlzLl9jb25zb2xlTWVzc2FnZXMsZGVsZXRlIHRoaXMuX2NvdmVyZWRGaWxlcyx0fSxlLnByb3RvdHlwZS5jb3ZlcnM9ZnVuY3Rpb24oZSl7dGhpcy5fY292ZXJlZFJhbmdlc1tlLmtleSgpXT1lO3ZhciB0PWUuc291cmNlRmlsZSgpO3QmJiF0LmlzVGVzdEZpbGUoKSYmKHRoaXMuX2NvdmVyZWRGaWxlc1t0LmtleSgpXT10KX0sZS5wcm90b3R5cGUuY292ZXJlZEZpbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIF8ubWFwKHRoaXMuX2NvdmVyZWRGaWxlcyxmdW5jdGlvbihlKXtyZXR1cm4gZX0pfSxlLnByb3RvdHlwZS5zdGFydFJhbmdlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3N0YXJ0UmFuZ2V9LGUucHJvdG90eXBlLmNvbXBsZXRlSW5pdGlhbGl6YXRpb249ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9lcnJvclN0YWNrTWFwJiZfLmVhY2godGhpcy5fZXJyb3JTdGFja01hcCxmdW5jdGlvbihuKXt2YXIgaT1uLnN0YWNrRW50cnk7aWYoaSl7dmFyIGE9ZVtpLmZpbGVJZCgpXTtpZihhKXt2YXIgbz1hLmNsb3Nlc3RSYW5nZShpLmxpbmUoKSk7byYmKGkuc2V0UmFuZ2Uobyksby5mYWlsc1Rlc3QodCxuKSl9fX0pLHRoaXMuX2NvbnNvbGVNZXNzYWdlcyYmXy5lYWNoKHRoaXMuX2NvbnNvbGVNZXNzYWdlcyxmdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUoKTt0JiZlLnNldFJhbmdlKHQuY2xvc2VzdFJhbmdlKGUubGluZSgpKSl9KSx0aGlzLl9jb3ZlcmVkUmFuZ2VzJiYoXy5pc1VuZGVmaW5lZCh0aGlzLl9zdGFydCl8fCh0aGlzLl9zdGFydFJhbmdlPXRoaXMuX3Rlc3RGaWxlLmNsb3Nlc3RSYW5nZSh0aGlzLl9zdGFydCksZGVsZXRlIHRoaXMuX3N0YXJ0KSx0aGlzLl9zdGFydFJhbmdlfHxfLmVhY2godGhpcy5fY292ZXJlZFJhbmdlcyxmdW5jdGlvbihlKXt2YXIgbj1lLnNvdXJjZUZpbGUoKTtuPT10Ll90ZXN0RmlsZSYmKHQuX3N0YXJ0UmFuZ2U/ZS5lbmRMaW5lKCk8dC5fc3RhcnRSYW5nZS5lbmRMaW5lKCkmJih0Ll9zdGFydFJhbmdlPWUpOnQuX3N0YXJ0UmFuZ2U9ZSl9KSl9LGUucHJvdG90eXBlLnBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGF0aH0sZS5wcm90b3R5cGUudHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdHN9LGUucHJvdG90eXBlLl9idWlsZEZ1bGxOYW1lQW5kUGF0aD1mdW5jdGlvbigpe3ZhciBlPVtdO2UucHVzaCh0aGlzLl9uYW1lKTtmb3IodmFyIHQ9dGhpcy5fcGFyZW50O251bGwhPXQ7KXt2YXIgbj10Ll9uYW1lO2UucHVzaChuKSx0PXQuX3BhcmVudH1lLnJldmVyc2UoKSx0aGlzLl9mdWxsTmFtZT1lLmpvaW4oIuKYhiIpLHRoaXMuX3BhdGg9ZX0sZX0oKSk7dC5leHBvcnRzPWF9LHsiLi9lcnJvckVudHJ5Ijo5LCIuL3N0YWNrRW50cnkiOjE0fV0sMTE6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGksYT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxvPWUoInBhdGgiKSxyPWUoImNob2tpZGFyIikuRlNXYXRjaGVyLGw9ZSgibWluaW1hdGNoIikscz1lKCIuLi9zaGFyZWQvdXRpbHMiKSxwPTFlMyxjPTUwMCxkPTUwLHU9e2FwazoxLGJtcDoxLGNnbToxLGczOjEsZ2lmOjEsaWVmOjEsaXJ4OjEsanBlZzoxLGpwZzoxLGpwZToxLGt0eDoxLHBuZzoxLGJ0aWY6MSxzZ2k6MSxzdmc6MSxzdmd6OjEsdGlmZjoxLHRpZjoxLHBzZDoxLHV2aToxLHV2dmk6MSx1dmc6MSx1dnZnOjEsZGp2dToxLGRqdjoxLHN1YjoxLGR3ZzoxLGR4ZjoxLGZiczoxLGZweDoxLGZzdDoxLG1tcjoxLHJsYzoxLG1kaToxLHdkcDoxLG5weDoxLHdibXA6MSx4aWY6MSx3ZWJwOjEsIjNkcyI6MSxyYXM6MSxjbXg6MSxmaDoxLGZoYzoxLGZoNDoxLGZoNToxLGZoNzoxLGljbzoxLHNpZDoxLHBjeDoxLHBpYzoxLHBjdDoxLHBubToxLHBibToxLHBnbToxLHBwbToxLHJnYjoxLHRnYToxLHhibToxLHhwbToxLHh3ZDoxLGJpbjoxLHhsczoxLHhsc3g6MSx6aXA6MSxtcDQ6MSxtbzoxLG5vZGU6MSxkdW1wOjEsZGxsOjEsbWFwOjEsbGliOjEsZXhwOjEsb2JqOjEscGRiOjEsZ3ppcDoxLGd6OjEsZGI6MSxkb2N4OjF9LGg9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gbihuLGkpe3ZhciBhPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gYS5fZGlmZk1hdGNoUGF0Y2g9aS5kaWZmTWF0Y2hQYXRjaCxhLl9iYXNlRGlyPW4sYS5faXNSZWFkeT0hMSxhLl9pc1N0b3BwZWQ9ITEsYS5fZmlsZXNCeVBhdGg9T2JqZWN0LmNyZWF0ZShudWxsKSxhLl9maWxlc0J5SWQ9T2JqZWN0LmNyZWF0ZShudWxsKSxhLl9maWxlSWQ9MCxhLl9scnVDYWNoZT1lKCJscnUtY2FjaGUiKSh7bWF4OjEwNDg1NzYqZCxsZW5ndGg6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGVuZ3RofX0pLGEuX3JlYWRGaWxlUHJvbWlzZT1pLnJlYWRGaWxlUHJvbWlzZSxhLl9yZWFscGF0aFN5bmM9aS5yZWFscGF0aFN5bmMsYX1yZXR1cm4gYShuLHQpLG4ucHJvdG90eXBlLnNldHVwPWZ1bmN0aW9uKHQsbil7dmFyIGE9dGhpcyxsPXRoaXM7aWYoaT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OmZzIikscHJvY2Vzcy5lbnYucXVva2thKXt2YXIgcz10WzBdLGQ9e307cmV0dXJuIGwuX2lzUmVhZHk9ITAsZFtzLnBhdHRlcm5dPWwuX2ZpbGVBZGRlZChzLnBhdHRlcm4se21ldGFkYXRhOnMsbXRpbWU6e2dldFRpbWU6ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9fX0pLFEud2hlbihkKX12YXIgdT1bXSxoPVtdLG09e30sUz17fSxmPTA7Xy5lYWNoKHQsZnVuY3Rpb24oZSl7ZS5pZ25vcmU/aC5wdXNoKGUpOih1LnB1c2goZSksZS5vcmRlcj0rK2YpfSk7dmFyIHc9biYmbi5nbG9iLEQ9biYmbi5kb3Q7biYmbi5maWxlU2NhblRpbWVvdXQmJihwPWM9bi5maWxlU2NhblRpbWVvdXQpO3ZhciB5PXRoaXMuX2lzSW5jbHVkZWQobC5fYmFzZURpcix1LGgsbSx3LEQpLHY9e2lnbm9yZUluaXRpYWw6ITEsaWdub3JlUGVybWlzc2lvbkVycm9yczohMCx1c2VQb2xsaW5nOiJkYXJ3aW4iPT09cHJvY2Vzcy5wbGF0Zm9ybXx8ImxpbnV4Ij09PXByb2Nlc3MucGxhdGZvcm0saWdub3JlZDpmdW5jdGlvbihlLHQpe2lmKCF0KXJldHVybiExO2lmKHQuaXNTeW1ib2xpY0xpbmsoKSl0cnl7U1tlXT17cGF0aDplLHJlYWxQYXRoOmwuX3JlYWxwYXRoU3luYyhlKX19Y2F0Y2gobil7fXZhciBpPXQuaXNGaWxlKCk7aWYoIWkpe3ZhciByPWEuX2lzRW50aXR5RXhjbHVkZWQoby5qb2luKG8ucmVsYXRpdmUobC5fYmFzZURpcixlKSwiLyIpLGgsdyxEKTtyZXR1cm4gci5maWxlJiZyLnRlc3R9dmFyIHM9IXkoZSx0KTtpZihzKXt2YXIgcD1fLmZpbmQoUyxmdW5jdGlvbih0KXtyZXR1cm4gXy5zdGFydHNXaXRoKGUsdC5yZWFsUGF0aCl9KTtwJiYocz0heShlLnJlcGxhY2UocC5yZWFsUGF0aCxwLnBhdGgpLHQpKX1yZXR1cm4gc30sY3dkOmwuX2Jhc2VEaXJ9O2lmKGwuX2lzR2xvYihsLl9iYXNlRGlyKSl0aHJvdyBuZXcgRXJyb3IoIllvdXIgcHJvamVjdCBmaWxlIHBhdGggbG9va3MgbGlrZSBhIHZhbGlkIGdsb2IgcGF0dGVybiBhbmQgY29udGFpbnMgZ2xvYiBjaGFyYWN0ZXJzLCBsaWtlIGB7YCwgYH1gLCBgW2AsIGBdYCwgYChgLCBgKWAsIGAqYCwgYHxgOyBpdCBtYXkgY2F1c2UgdGhlIHByb2plY3QgZmlsZSBzY2FubmluZyB0byBmYWlsLCBwbGVhc2UgcmVtb3ZlIGdsb2IgY2hhcmFjdGVycyBmcm9tIHRoZSBwcm9qZWN0IHBhdGguIik7dGhpcy5fd2F0Y2hlcj1uZXcgcih2KTt2YXIgVj1fLnJlZHVjZSh1LGZ1bmN0aW9uKGUsdCl7dmFyIG49bC5fZ2V0QmFzZURpcih0LnBhdHRlcm4pO3JldHVybiBlW25dPW4sZX0se30pLGc9MDtfLmVhY2goVixmdW5jdGlvbihlKXtpZighXy5maW5kKFYsZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1lJiZlLnN1YnN0cigwLHQubGVuZ3RoKzEpPT09dCsiLyJ9KSl7dmFyIHQ9dm9pZCAwLG49by5ub3JtYWxpemUoby5qb2luKGwuX2Jhc2VEaXIsZSkpO3RyeXt0PW8ubm9ybWFsaXplKGwuX3JlYWxwYXRoU3luYyhuKSl9Y2F0Y2goYSl7ZysrfXQmJnQhPT1uPyhpKCJQb3NzaWJsZSBzeW1saW5rOiAlcyAtPiAlcyIsdCxuKSxtW3RdPXtyZWFsUGF0aDp0LGxpbmtlZFBhdGg6bn0sbC5fd2F0Y2hlci5hZGQodCkpOmwuX3dhdGNoZXIuYWRkKGUpfX0pLGcmJmc9PT1fLmtleXMoVikubGVuZ3RoJiZjb25zb2xlLndhcm4oIkxvb2tzIGxpa2Ugbm9uZSBvZiB0aGUgcGF0aHMgc3BlY2lmaWVkIGluIHlvdXIgZmlsZXMvdGVzdHMgbGlzdCBleGlzdCBpbiAiK2wuX2Jhc2VEaXIrIi4iKTt2YXIgVDtyZXR1cm4gUS5wcm9taXNlKGZ1bmN0aW9uKGUsdCl7dmFyIG49ZnVuY3Rpb24odCl7bC5faXNSZWFkeXx8KGwuX2lzUmVhZHk9ITAsdCYmaSgiRmlsZSBzeXN0ZW0gc2NhbiBoYXMgZmluaXNoZWQgYnkgdGltZW91dCIpLGUobC5fZmlsZXNCeVBhdGgpKX07dHJ5e2wuX3dhdGNoZXIub24oImFsbCIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoVCksVD1zZXRUaW1lb3V0KF8uYmluZChuLG51bGwsITApLHApfSkub24oImFkZCIsXy5iaW5kKGwuX3dpdGhOb3JtYWxpemVkUGF0aCxsLGwuX2ZpbGVBZGRlZCkpLm9uKCJjaGFuZ2UiLF8uYmluZChsLl93aXRoTm9ybWFsaXplZFBhdGgsbCxsLl9maWxlQ2hhbmdlZCkpLm9uKCJ1bmxpbmsiLF8uYmluZChsLl93aXRoTm9ybWFsaXplZFBhdGgsbCxsLl9maWxlRGVsZXRlZCkpLm9uKCJyZWFkeSIsXy5kZWJvdW5jZShuLGMpKS5vbigiZXJyb3IiLF8uYmluZChsLmVtaXQsbCwiZXJyb3IiKSl9Y2F0Y2goYSl7dChhKX19KX0sbi5wcm90b3R5cGUuX2hhc0dsb2JDaGFycz1mdW5jdGlvbihlKXtyZXR1cm5+ZS5pbmRleE9mKCIoIil8fH5lLmluZGV4T2YoIikiKXx8fmUuaW5kZXhPZigifCIpfHx+ZS5pbmRleE9mKCJ7Iil8fH5lLmluZGV4T2YoIn0iKXx8fmUuaW5kZXhPZigiKiIpfHx+ZS5pbmRleE9mKCJbIil8fH5lLmluZGV4T2YoIl0iKX0sbi5wcm90b3R5cGUuX2lzR2xvYj1mdW5jdGlvbihlKXt2YXIgdD17InsiOiJ9IiwiKCI6IikiLCJbIjoiXSJ9O2lmKCJzdHJpbmciIT10eXBlb2YgZXx8IiI9PT1lKXJldHVybiExO2lmKC9bQD8hKypdXCgvLnRlc3QoZSkpcmV0dXJuITA7Zm9yKHZhciBuLGk9L1xcKC4pfCheIXxcKnxbXF0uKyldXD98XFtbXlxcXF1dK1xdfFx7W15cXH1dK1x9fFwoXD9bOiE9XVteXFwpXStcKXxcKFtefF0rXHxbXlxcKV0rXCkpLztuPWkuZXhlYyhlKTspe2lmKG5bMl0pcmV0dXJuITA7dmFyIGE9bi5pbmRleCtuWzBdLmxlbmd0aCxvPW5bMV0scj1vP3Rbb106bnVsbDtpZihvJiZyKXt2YXIgbD1lLmluZGV4T2YocixhKTstMSE9PWwmJihhPWwrMSl9ZT1lLnNsaWNlKGEpfXJldHVybiExfSxuLnByb3RvdHlwZS5sb2FkRmlsZXM9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gUS5hbGwoXy5tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gdC5fbG9hZEZpbGUoZSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gdC5lbWl0KCJsb2FkZWQiLGUpfSl9KSl9LG4ucHJvdG90eXBlLmZpbGVDaGFuZ2VkSW5FZGl0b3I9ZnVuY3Rpb24oZSx0LG4sYSl7dmFyIG89dGhpcy5fZmlsZXNCeVBhdGhbZV07aWYobyYmIW8uYmluYXJ5KXtpKCJGaWxlIGNoYW5nZWQgaW4gZWRpdG9yOiAlcyIsby5wYXRoKTt2YXIgcj10aGlzLl9scnVDYWNoZS5nZXQoby5wYXRoKTt0aGlzLl9scnVDYWNoZS5zZXQoby5wYXRoLGEmJl8uaXNTdHJpbmcocik/cjp0KSxvLmNoYW5nZVRzKyssdGhpcy5fZW1pdEZpbGVDaGFuZ2UoXy5leHRlbmQoe30sbyx7Y29udGVudDp0fSkscixuLCEwLGEpLG8uaGFkVHJhbnNpZW50Q2hhbmdlPWF9fSxuLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7dGhpcy5faXNTdG9wcGVkPSEwLHRoaXMuX3dhdGNoZXImJih0aGlzLl93YXRjaGVyLmNsb3NlKCksZGVsZXRlIHRoaXMuX2xydUNhY2hlKX0sbi5wcm90b3R5cGUuaWRCeVBhdGg9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZmlsZXNCeVBhdGhbZV07aWYodClyZXR1cm4gdC5pZH0sbi5wcm90b3R5cGUuX2xvYWRGaWxlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2ZpbGVzQnlJZFtlXTtpZighdCl0aHJvdyBuZXcgRXJyb3IoIk5vIGZpbGUgd2l0aCBpZCAiK2UrIiBmb3VuZCIpO3JldHVybiB0aGlzLl9sb2FkRmlsZVdpdGhDYWNoZSh0KX0sbi5wcm90b3R5cGUuX2xvYWRGaWxlV2l0aENhY2hlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMsbj1lLmNoYW5nZVRzLGk9dGhpcy5fbHJ1Q2FjaGUuZ2V0KGUucGF0aCk7cmV0dXJuKF8uaXNVbmRlZmluZWQoaSk/dGhpcy5fcmVhZEZpbGVQcm9taXNlKG8uam9pbih0Ll9iYXNlRGlyLGUucGF0aCkpOlEud2hlbihpKSkudGhlbihmdW5jdGlvbihpKXtyZXR1cm4gaT1pP2UuYmluYXJ5P2kudG9TdHJpbmcoImJhc2U2NCIpOmkudG9TdHJpbmcoKToiIix0Ll9pc1N0b3BwZWR8fG4hPT1lLmNoYW5nZVRzfHx0Ll9scnVDYWNoZS5zZXQoZS5wYXRoLGkpLFEud2hlbihfLmV4dGVuZCh7fSxlLHtjb250ZW50Oml9KSl9KVsiY2F0Y2giXShmdW5jdGlvbihlKXtyZXR1cm4gdC5lbWl0KCJlcnJvciIsZSl9KX0sbi5wcm90b3R5cGUuX2ZpbGVBZGRlZD1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYoaSgiRmlsZSBhZGRlZDogJXMiLGUpLHQmJnQubWV0YWRhdGEpe3ZhciBhPXQubWV0YWRhdGEscj1vLmV4dG5hbWUoZSkuc3Vic3RyKDEpO3JldHVybiBhLmNoYW5nZVRzPTEsYS5pZD0rK3RoaXMuX2ZpbGVJZCxhLnRzPXQubXRpbWUuZ2V0VGltZSgpLGEudHlwZT1yJiZyLnRvTG93ZXJDYXNlKCksYS5iaW5hcnk9YS5iaW5hcnl8fHVbYS50eXBlXSxhLnBhdGg9ZSx0aGlzLl9maWxlc0J5UGF0aFtlXT1hLHRoaXMuX2ZpbGVzQnlJZFthLmlkXT1hLHRoaXMuX2lzUmVhZHkmJih0aGlzLl9scnVDYWNoZS5kZWwoZSksdGhpcy5fbG9hZEZpbGVXaXRoQ2FjaGUoYSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gbi5lbWl0KCJhZGRlZCIsZSl9KSksYX1pKCJObyBtZXRhZGF0YSBmb3IgYWRkZWQgZmlsZSBmb3VuZDogJXMiLGUpfSxuLnByb3RvdHlwZS5fZmlsZUNoYW5nZWQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpKCJGaWxlIGNoYW5nZWQ6ICVzIixlKTt2YXIgbj10aGlzLl9maWxlc0J5UGF0aFtlXTtpZihuKXtpZih0aGlzLl9pc1JlYWR5KXt2YXIgYT10aGlzLl9scnVDYWNoZS5nZXQoZSk7dGhpcy5fbHJ1Q2FjaGUuZGVsKGUpO3ZhciBvPSsrbi5jaGFuZ2VUczt0aGlzLl9sb2FkRmlsZVdpdGhDYWNoZShuKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlLmNoYW5nZVRzPT09byYmdC5fZW1pdEZpbGVDaGFuZ2UoZSxhKX0pfX1lbHNlIGkoIk5vIG1ldGFkYXRhIGZvciBjaGFuZ2VkIGZpbGUgZm91bmQ6ICVzIixlKX0sbi5wcm90b3R5cGUuX2VtaXRGaWxlQ2hhbmdlPWZ1bmN0aW9uKGUsdCxuLGEsbyl7dmFyIHI9ZS5jb250ZW50O2lmKF8uaXNTdHJpbmcodCkpe3ZhciBsPXRoaXMuX2RpZmZNYXRjaFBhdGNoLnBhdGNoX21ha2UodCxyKTtpZighbC5sZW5ndGgpcmV0dXJuIGkoIk5vIGNoYW5nZXMgZGV0ZWN0ZWQgZm9yICVzIixlLnBhdGgpLHZvaWQgdGhpcy5lbWl0KCJub3RDaGFuZ2VkIixlLHIsbik7ZS5oYWRUcmFuc2llbnRDaGFuZ2V8fG98fChlLmNvbnRlbnQ9dGhpcy5fZGlmZk1hdGNoUGF0Y2gucGF0Y2hfdG9UZXh0KGwpKX10aGlzLmVtaXQoImNoYW5nZWQiLGUscixuLGEpfSxuLnByb3RvdHlwZS5fZmlsZURlbGV0ZWQ9ZnVuY3Rpb24oZSl7aSgiRmlsZSBkZWxldGVkOiAlcyIsZSksdGhpcy5fbHJ1Q2FjaGUuZGVsKGUpO3ZhciB0PXRoaXMuX2ZpbGVzQnlQYXRoW2VdO3Q/KGRlbGV0ZSB0aGlzLl9maWxlc0J5UGF0aFtlXSxkZWxldGUgdGhpcy5fZmlsZXNCeUlkW3QuaWRdLHRoaXMuX2lzUmVhZHkmJnRoaXMuZW1pdCgiZGVsZXRlZCIsdCkpOmkoIk5vIG1ldGFkYXRhIGZvciBkZWxldGVkIGZpbGUgZm91bmQ6ICVzIixlKX0sbi5wcm90b3R5cGUuX3dpdGhOb3JtYWxpemVkUGF0aD1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG4mJm4ubGlua2VkUGF0aCYmKHQ9bi5saW5rZWRQYXRoKSxlLmNhbGwodGhpcyxzLm5vcm1hbGl6ZVBhdGgodCksbil9LG4ucHJvdG90eXBlLl9pc0luY2x1ZGVkPWZ1bmN0aW9uKGUsdCxuLGksYSxyKXt2YXIgcz10aGlzO3JldHVybiBmdW5jdGlvbihwLGMpe3ZhciBkPWlbcF07aWYoZClwPW8ucmVsYXRpdmUoZSxkLmxpbmtlZFBhdGgpLGMmJihjLmxpbmtlZFBhdGg9cCk7ZWxzZSBpZigwPT09cC5pbmRleE9mKGUpKXA9by5yZWxhdGl2ZShlLHApO2Vsc2V7dmFyIHU9Xy5maW5kKGksZnVuY3Rpb24oZSx0KXtyZXR1cm4gMD09PXAuaW5kZXhPZih0KX0pO2lmKCF1KXJldHVybiExO3A9by5yZWxhdGl2ZShlLHAucmVwbGFjZSh1LnJlYWxQYXRoLHUubGlua2VkUGF0aCkpLGMmJihjLmxpbmtlZFBhdGg9cCl9dmFyIGg9cy5faXNFbnRpdHlFeGNsdWRlZChwLG4sYSxyKTtpZihoLmZpbGUmJmgudGVzdClyZXR1cm4hMTt2YXIgbT1hPyIuLyIrcDpwLFM9Xy5jbG9uZShfLmZpbmQodCxmdW5jdGlvbihlKXtyZXR1cm4oIWguZmlsZSYmIWUudGVzdHx8IWgudGVzdCYmZS50ZXN0KSYmbChtLChhPyIuLyI6IiIpK2UucGF0dGVybix7ZG90OnJ9KX0pKTtyZXR1cm4gYyYmKGMubWV0YWRhdGE9UyksISFTfX0sbi5wcm90b3R5cGUuX2lzRW50aXR5RXhjbHVkZWQ9ZnVuY3Rpb24oZSx0LG4saSl7Zm9yKHZhciBhLG8scj1uPyIuLyIrZTplLHM9MCxwPXQubGVuZ3RoO3A+cztzKyspe3ZhciBjPXRbc10sZD1jLnRlc3Q7aWYoKCFhfHxkKSYmbChyLChuPyIuLyI6IiIpK2MucGF0dGVybix7ZG90Oml9KSl7aWYoZCl7bz1jO2JyZWFrfWE9Y319cmV0dXJue2ZpbGU6YSx0ZXN0Om99fSxuLnByb3RvdHlwZS5fZ2V0QmFzZURpcj1mdW5jdGlvbihlKXt2YXIgdD1zLm5vcm1hbGl6ZVBhdGgoZS5yZXBsYWNlKC9bXC9cXF1bXlwvXFxdKlwqLiokLywiIikucmVwbGFjZSgvW1wvXFxdW15cL1xcXSpbXCFcK11cKC4qJC8sIiIpLnJlcGxhY2UoL1tcL1xcXVteXC9cXF0qXClcPy4qJC8sIiIpfHxvLnNlcCk7cmV0dXJuIHRoaXMuX2hhc0dsb2JDaGFycyh0KSYmKHQ9Ii4vIiksdH0sbn0oRXZlbnRFbWl0dGVyKTt0LmV4cG9ydHM9aH0seyIuLi9zaGFyZWQvdXRpbHMiOjE3LGNob2tpZGFyOnZvaWQgMCxkZWJ1Zzp2b2lkIDAsImxydS1jYWNoZSI6dm9pZCAwLG1pbmltYXRjaDp2b2lkIDAscGF0aDp2b2lkIDB9XSwxMjpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT10aGlzJiZ0aGlzLl9fZXh0ZW5kc3x8ZnVuY3Rpb24oKXt2YXIgZT1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24oZSx0KXtlLl9fcHJvdG9fXz10fXx8ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4gaW4gdCl0Lmhhc093blByb3BlcnR5KG4pJiYoZVtuXT10W25dKX07cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaSgpe3RoaXMuY29uc3RydWN0b3I9dH1lKHQsbiksdC5wcm90b3R5cGU9bnVsbD09PW4/T2JqZWN0LmNyZWF0ZShuKTooaS5wcm90b3R5cGU9bi5wcm90b3R5cGUsbmV3IGkpfX0oKSxhPShlKCJwYXRoIiksZSgibWluaW1hdGNoIikpLG89ZSgiLi4vc2hhcmVkL3V0aWxzIikscj1fLm9taXQoZSgiLi9icm93c2VyR2xvYmFscyIpLCJsZW5ndGgiLCJzZWxmIiwidG9wIiwicGFyZW50Iiwic3RvcCIsImNsb3NlIiwibmFtZSIsImNvbmZpcm0iLCJibHVyIiwiZm9jdXMiLCJvcGVuIiwicHJpbnQiLCJwcm9tcHQiKSxsPWUoIi4vdHJhY2tlZFNvdXJjZUZpbGUiKSxzPWUoIi4vY292ZXJhYmxlUmFuZ2UiKSxwPWUoIi4vZXhlY3V0ZWRUZXN0IiksYz1lKCIuL2NvbnNvbGVNZXNzYWdlIiksZD1lKCIuL2Vycm9yRW50cnkiKSx1PWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7dmFyIG49ZS5jYWxsKHRoaXMpfHx0aGlzLGk9bjtuLl9maWxlSWRCeVBhdGg9dC5maWxlSWRCeVBhdGgsbi5fYWx3YXlzU2VuZEFsbExpbmVzPXQuYWx3YXlzU2VuZEFsbExpbmVzLG4uX2ZpbGVzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fbnVtYmVyT2ZBbGxSYW5nZXM9MCxuLl9udW1iZXJPZkNvdmVyZWRSYW5nZXM9MCxuLl9jb3ZlcmFnZT17dmFsdWU6MCxsb3c6ITB9LG4uX3Rlc3RzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fZmFpbGluZ1Rlc3RzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fZ2xvYmFsRXJyb3JzPU9iamVjdC5jcmVhdGUobnVsbCksbi5fdGVzdFJ1bkdsb2JhbExvZ3M9W10sbi5fZmlsZXNXaXRoTWVzc2FnZXM9e30sbi5fZmlsZXNXaXRoTG9hZGFibGVNZXNzYWdlcz17fSxuLl9jaGFuZ2VkPSEwLG4uX3Byb2plY3Q9dC5wcm9qZWN0O3ZhciBhPWZ1bmN0aW9uKGUpe3ZhciB0PWlbInByb2plY3Q6IitlLnR5cGVdO3QmJnQuY2FsbChpLGUpfTtyZXR1cm4gbi5fcHJvamVjdC5fbW9kZWx8fHByb2Nlc3MuZW52LnF1b2trYT9uLl9wcm9qZWN0Lm9uKCJtZXNzYWdlIixhKTpuLl9wcm9qZWN0Lm9uKCJtZXNzYWdlIixmdW5jdGlvbihlKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBhKGUpfSwzMCl9KSxufXJldHVybiBpKHQsZSksdC5wcm90b3R5cGUuY29uZmlnRmlsZVBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gby5ub3JtYWxpemVQYXRoKHRoaXMuX3Byb2plY3QuY29uZmlnRmlsZVBhdGgoKSl9LHQucHJvdG90eXBlLnByb2plY3ROYW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3QucHJvamVjdE5hbWUoKX0sdC5wcm90b3R5cGUucHJvamVjdENvbmZpZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCl9LHQucHJvdG90eXBlLmxvd0NvdmVyYWdlVGhyZXNob2xkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb2plY3Quc2V0dGluZ3MoKS5sb3dDb3ZlcmFnZVRocmVzaG9sZH0sdC5wcm90b3R5cGUuY29yZVZlcnNpb249ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcHJvamVjdC5jb3JlVmVyc2lvbigpfSx0LnByb3RvdHlwZS5maWxlQnlQYXRoPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2ZpbGVJZEJ5UGF0aChlKTtpZih0KXJldHVybiB0aGlzLl9maWxlc1t0XX0sdC5wcm90b3R5cGUuZmlsZUJ5SWQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ZpbGVzW2VdfSx0LnByb3RvdHlwZS5maWxlQ29udGVudEJ5UGF0aD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmZpbGVCeVBhdGgoZSk7cmV0dXJuIHQmJnRoaXMuX3Byb2plY3QucmVhZFNvdXJjZUZpbGUodC5rZXkoKSl9LHQucHJvdG90eXBlLnRlc3RzQnlSZXF1ZXN0PWZ1bmN0aW9uKGUpe3ZhciB0PVtdO2lmKGUuZmlsZSl7dmFyIG49dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7biYmKGUubGluZXx8IW4uaXNUZXN0RmlsZSgpPyhfLmVhY2goZS5saW5lP24ubGluZVRlc3RzKGUubGluZSk6bi5jb3ZlcmluZ1Rlc3RzKCksZnVuY3Rpb24oZSl7dC5wdXNoKFtlLmZpbGVJZCgpXS5jb25jYXQoZS5wYXRoKCkpKX0pLCF0Lmxlbmd0aCYmbi5pc1Rlc3RGaWxlKCkmJnQucHVzaChbbi5rZXkoKV0pKTp0LnB1c2goW24ua2V5KCldKSl9cmV0dXJuIHR9LHQucHJvdG90eXBlLnVuY292ZXJlZFJlZ2lvbnNCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7aWYodClyZXR1cm4gXy5jaGFpbihlLmxpbmU/dC5saW5lUmFuZ2VzKGUubGluZSk6dC5yYW5nZXMoKSkuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiFlLmlzQ292ZXJlZCgpfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybltlLnN0YXJ0TGluZSgpLGUuc3RhcnRDb2x1bW4oKSxlLmVuZExpbmUoKSxlLmVuZENvbHVtbigpXX0pLnZhbHVlKCl9LHQucHJvdG90eXBlLmxpbmVSZXBvcnRCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5maWxlQnlQYXRoKGUuZmlsZSk7aWYodClyZXR1cm4gdGhpcy5fbGluZVJlcG9ydCh0LGUubGluZSl9LHQucHJvdG90eXBlLmxvY2F0aW9uQnlSZXF1ZXN0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2xhdGVzdEZhaWxpbmdUZXN0QnlGaWxlQW5kTGluZShlKTtpZih0KXtpZigiZmFpbGluZ1Rlc3QiPT09ZS50eXBlKXt2YXIgbj10LnN0YXJ0UmFuZ2UoKTtyZXR1cm4gbj97ZmlsZTp0LmZpbGVQYXRoKCksbG9jOltuLnN0YXJ0TGluZSgpLG4uc3RhcnRDb2x1bW4oKV19Ont9fWlmKCJlcnJvclNvdXJjZSI9PT1lLnR5cGUpe3ZhciBpPV8uZmluZCh0LmVycm9ycygpLGZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnN0YWNrJiZlLnN0YWNrKCkubGVuZ3RofSk7aWYoIWkpe3ZhciBuPXQuc3RhcnRSYW5nZSgpO3JldHVybiBuP3tmaWxlOnQuZmlsZVBhdGgoKSxsb2M6W24uc3RhcnRMaW5lKCksbi5zdGFydENvbHVtbigpXX06e319dmFyIGE9aS5zdGFjaygpWzBdLG89YS5yYW5nZSgpLHI9e307cmV0dXJuIHIuZmlsZT1hLmZpbGVQYXRoKCksbyYmKHIubG9jPVtvLnN0YXJ0TGluZSgpLG8uc3RhcnRDb2x1bW4oKV0pLHJ9fX0sdC5wcm90b3R5cGUuX2xhdGVzdEZhaWxpbmdUZXN0QnlGaWxlQW5kTGluZT1mdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUmJnRoaXMuZmlsZUJ5UGF0aChlLmZpbGUpLG49dCYmZS5saW5lJiZ0LmxpbmVDb3ZlcmluZ1Rlc3RzT3JkZXJlZEJ5RmFpbGluZ1RoZW5EYXRlKGUubGluZSxmdW5jdGlvbihlKXtyZXR1cm4gZS5pc0Vycm9yU291cmNlKCl8fGUuaXNPbkVycm9yUGF0aCgpfSlbMF07cmV0dXJuIG4mJm4uaXNGYWlsaW5nKCl8fChuPXRoaXMubGF0ZXN0RmFpbGluZ1Rlc3QoKSksbn0sdC5wcm90b3R5cGUuZXJyb3JCeVJlcXVlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fbGF0ZXN0RmFpbGluZ1Rlc3RCeUZpbGVBbmRMaW5lKGUpO2lmKHQpe3ZhciBuPXQuZXJyb3JzKCk7aWYoIW4ubGVuZ3RoKXJldHVybjt2YXIgaT10LmZpbGVJZCgpO2lmKCJlcnJvclNvdXJjZSI9PT1lLnR5cGUpcmV0dXJuIHRoaXMuX21hcEVycm9ycyhfLmZpbHRlcihuLGZ1bmN0aW9uKHQpe3JldHVybiBfLmZpbmQodC5zdGFjaygpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmZpbGVJZCgpPT09aSYmdC5saW5lKCk9PT1lLmxpbmV9KX0pKVswXTtpZigiZmFpbGluZ1Rlc3QiPT09ZS50eXBlKXJldHVybiB0aGlzLl9tYXBFcnJvcnMobilbMF19fSx0LnByb3RvdHlwZS5sYXRlc3RGYWlsaW5nVGVzdD1mdW5jdGlvbigpe3JldHVybiBfLmxhc3QoXy52YWx1ZXModGhpcy5fZmFpbGluZ1Rlc3RzKSl9LHQucHJvdG90eXBlLmZ1bGxUZXN0UmVzdWx0c1JlcG9ydD1mdW5jdGlvbihlKXtpZih0aGlzLl9ydW5FcnJvcilyZXR1cm4gdGhpcy5fcnVuRXJyb3I7dmFyIHQ9e2Vycm9yczp0aGlzLl9tYXBFcnJvcnModGhpcy5fZ2xvYmFsRXJyb3JzKSx0aW1lOmUsYWRkaXRpb25hbEhlYWRlck1lc3NhZ2U6dGhpcy5fYWRkaXRpb25hbEhlYWRlck1lc3NhZ2V9O2lmKHByb2Nlc3MuZW52LnF1b2trYSl7dC5tZXNzYWdlcz10aGlzLl9tYXBNZXNzYWdlcyh0aGlzLl90ZXN0UnVuR2xvYmFsTG9ncyk7dmFyIG49dGhpcy5fcHJvamVjdC5zZXR0aW5ncygpO24mJm4ucXVva2thJiZfLmVhY2godC5lcnJvcnMsZnVuY3Rpb24oZSl7aWYoZSYmZS5tZXNzYWdlKXtpZihuLnF1b2trYS5pbnN0YWxsUGFja2FnZS5hbGxvd1RvSW5zdGFsbEltcG9ydGVkTW9kdWxlcyl7dmFyIHQ9ZS5tZXNzYWdlLm1hdGNoKC9DYW5ub3QgZmluZCBtb2R1bGUgJyhbXidccyZ8O10rKScvKTt0JiZ0WzFdJiYoZS5taXNzaW5nUGFja2FnZT1vLnZhbGlkUGFja2FnZU5hbWUodFsxXSkpfXZhciBpPWUubWVzc2FnZS5tYXRjaCgvKFteXHNdKykgaXMgbm90IGRlZmluZWQvKTtpJiZpWzFdJiYoaT1pWzFdLHJbaV0/ZS5taXNzaW5nQnJvd3Nlckdsb2JhbD1pOmUudW5kZWZpbmVkTmFtZT1pKX19KX1lbHNlIHQudG90YWxOdW1iZXI9Xy5zaXplKHRoaXMuX3Rlc3RzKSx0LmZhaWxpbmdOdW1iZXI9Xy5zaXplKHRoaXMuX2ZhaWxpbmdUZXN0cyksdC50ZXN0cz10aGlzLl9tYXBUZXN0cyh0aGlzLl9mYWlsaW5nVGVzdHMpLnJldmVyc2UoKS52YWx1ZSgpO3JldHVybiB0fSx0LnByb3RvdHlwZS5hbGxUZXN0RmlsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gXy5maWx0ZXIodGhpcy5fZmlsZXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuaXNUZXN0RmlsZSgpfSl9LHQucHJvdG90eXBlLnN1bW1hcnk9ZnVuY3Rpb24oKXt2YXIgZT1fLnNpemUodGhpcy5fdGVzdHMpLHQ9Xy5zaXplKHRoaXMuX2ZhaWxpbmdUZXN0cyk7cmV0dXJue3RvdGFsOmUscGFzc2VkOmUtdCxmYWlsZWQ6dCxjb3ZlcmFnZTp0aGlzLl9jb3ZlcmFnZX19LHQucHJvdG90eXBlLmFsbEZpbGVzPWZ1bmN0aW9uKCl7cmV0dXJuIF8ubWFwKHRoaXMuX2ZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybntwYXRoOmUucGF0aCgpLGlkOmUua2V5KCl9fSl9LHQucHJvdG90eXBlLmdsb2JhbEVycm9ycz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9nbG9iYWxFcnJvcnN9LHQucHJvdG90eXBlLmdldEZpbGVNZXNzYWdlcz1mdW5jdGlvbihlKXt0aGlzLl9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzW2VdPXt9LHRoaXMuX2VtaXRGaWxlc01lc3NhZ2VzKGUpfSx0LnByb3RvdHlwZVsicHJvamVjdDpzdGFydGluZyJdPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Xy5lYWNoKGUuZmlsZXMsZnVuY3Rpb24oZSl7cmV0dXJuIHQuX2FkZEZpbGUobmV3IGwoZSkpfSksdGhpcy5fZW1pdCgiYWxsRmlsZXMiLHtmaWxlczplLmZpbGVzfSl9LHQucHJvdG90eXBlWyJwcm9qZWN0OmZpbGUiXT1mdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUsbj1lWyJkZWxldGUiXSxpPXRoaXMuZmlsZUJ5SWQodC5pZCk7aWYoaSYmIW4mJnRoaXMuX2VtaXQoImZpbGVDaGFuZ2VkIix7ZmlsZTp0fSksaXx8bnx8KGk9bmV3IGwodCksdGhpcy5fYWRkRmlsZShpKSx0aGlzLl9lbWl0KCJmaWxlQWRkZWQiLHtmaWxlOnR9KSksaSYmbil7dGhpcy5fZGVsZXRlRmlsZSh0LmlkKTt2YXIgYT1PYmplY3QuY3JlYXRlKG51bGwpLG89aS5vd25UZXN0cygpO3RoaXMuX3Rlc3RzUmVtb3ZlZChvKSxfLmVhY2gobyxmdW5jdGlvbihlKXtyZXR1cm4gXy5leHRlbmQoYSxlLm9ic29sZXRlKCkpfSksZGVsZXRlIGFbdC5pZF0saS5pc1Rlc3RGaWxlKCkmJnRoaXMuX2VtaXQoInRlc3RGaWxlRGVsZXRlZCIse2ZpbGU6dH0pLHRoaXMuX2VtaXQoImZpbGVEZWxldGVkIix7ZmlsZTp0fSksdGhpcy5fdXBkYXRlQWZmZWN0ZWRGaWxlcyhhKSx0aGlzLl9hZ2dyZWdhdGVGaWxlQ292ZXJhZ2UoaSwhMCksdGhpcy5fdXBkYXRlVG90YWxDb3ZlcmFnZSgpLGkuZGlzcG9zZSgpfX0sdC5wcm90b3R5cGVbInByb2plY3Q6Y29uc29sZU91dHB1dCJdPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBjKGUuZGF0YSksbj10LmZpbGVJZCgpO2lmKG4pe3ZhciBpPXRoaXMuZmlsZUJ5SWQobiksYT10LnJhbmdlKCk7aSYmYSYmdC5zZXRGaWxlKGkpfXRoaXMuX2VtaXQoImNvbnNvbGVPdXRwdXQiLHttZXNzYWdlOnRoaXMuX21hcE1lc3NhZ2UodCl9KX0sdC5wcm90b3R5cGVbInByb2plY3Q6dGVzdFJ1bkVycm9yIl09ZnVuY3Rpb24oZSl7dGhpcy5fcmVwb3J0RmFpbGVkUnVuKGUubWVzc2FnZSl9LHQucHJvdG90eXBlWyJwcm9qZWN0OmV4cHJlc3Npb25zVG9FdmFsdWF0ZVJlY2VpdmVkIl09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt0aGlzLl9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzPXt9LF8uZWFjaChlLmV4cHJlc3Npb25zVG9FdmFsdWF0ZSxmdW5jdGlvbihlLG4pe3ZhciBpPW4uc3BsaXQoIiwiKVswXTt0Ll9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzW2ldPXt9fSl9LHQucHJvdG90eXBlWyJwcm9qZWN0OnRlc3RSZXN1bHRzIl09ZnVuY3Rpb24oZSl7dmFyIHQsbj10aGlzLGk9T2JqZWN0LmNyZWF0ZShudWxsKSxhPU9iamVjdC5jcmVhdGUobnVsbCksbz17fTtuLl9hZGRpdGlvbmFsSGVhZGVyTWVzc2FnZT1lLmFkZGl0aW9uYWxIZWFkZXJNZXNzYWdlLHRoaXMuX3JlcG9ydE5vcm1hbFJ1bigpLHRoaXMuX3Rlc3RSdW5HbG9iYWxMb2dzPVtdLF8uZWFjaChlLnRlc3RzLGZ1bmN0aW9uKGEpe3ZhciBvPW5ldyBwKGEpO28uaW5pdChudWxsLGUudHMsZnVuY3Rpb24oZSl7aVtlLmlkKCldPWUsdCE9PSExJiYodD90LmlzRmFpbGluZygpfHwodD1lLmlzRmFpbGluZygpP2U6ITEpOnQ9ZSl9LGZ1bmN0aW9uKGUpe3JldHVybiBlLnNldEZpbGUobi5maWxlQnlJZChlLmZpbGVJZCgpKSl9KX0pLF8uZWFjaChlLmxvZyxmdW5jdGlvbihlKXt2YXIgdD1uZXcgYyhlKSxhPXQudGVzdElkKCk7aWYoMCE9PWEpe3ZhciByPWlbYV07ciYmci5hZGRDb25zb2xlTWVzc2FnZSh0KX12YXIgbD10LmZpbGVJZCgpO2lmKGwpe3ZhciBzPW4uZmlsZUJ5SWQobCkscD10LnJhbmdlKCk7aWYocyYmcCYmKHMuc2V0UmFuZ2VDb25zb2xlTG9nKCJkaWZmIiE9PXQudHlwZSgpP3QudGV4dCgpOiI8c2VlIHRoZSBkaWZmIGluIHF1b2trYSBvdXRwdXQ+IixwKSx0LnNldEZpbGUocykpLHQudmFsdWVCYWcoKSl7dmFyIGQ9b1tsXT1vW2xdfHx7ZmlsZTpzLnBhdGgoKSxtZXNzYWdlczpbXX07ZC5tZXNzYWdlcy5wdXNoKHQpfX0wPT09YSYmcHJvY2Vzcy5lbnYucXVva2thJiZuLl90ZXN0UnVuR2xvYmFsTG9ncy5wdXNoKHQpfSk7dmFyIHI9T2JqZWN0LmNyZWF0ZShudWxsKSxsPU9iamVjdC5jcmVhdGUobnVsbCkscz1fLm1hcChlLmZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybntjb3ZlcmFnZTplLGZpbGU6bi5maWxlQnlJZChlLmlkKX19KSx1PV8uZmlsdGVyKHMsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5maWxlLmlzVGVzdEZpbGUoKSxuPWUuY292ZXJhZ2UuY2hhbmdlZCYmIWUuY292ZXJhZ2Uuc2luZ2xlVGVzdENoYW5nZWQsaT10JiZuO3JldHVybiBpP3JbZS5maWxlLmtleSgpXT1lLmZpbGU6dCYmKGxbZS5maWxlLmtleSgpXT1lLmZpbGUpLGl9KTtfLmVhY2godSxmdW5jdGlvbihlKXt2YXIgdD1lLmZpbGU7bi5fdGVzdHNSZW1vdmVkKHQub3duVGVzdHMoKSksXy5lYWNoKHQucmVtb3ZlQWxsVGVzdHMoKSxmdW5jdGlvbihlKXthW2Uua2V5KCldPWV9KX0pLF8uZWFjaChpLGZ1bmN0aW9uKGUpe3ZhciB0PW4uZmlsZUJ5SWQoZS5maWxlSWQoKSk7Xy5lYWNoKHQuYWRkVGVzdChlKSxmdW5jdGlvbihlKXthW2Uua2V5KCldPWV9KSxuLl90ZXN0QWRkZWQoZSl9KSxfLmVhY2gocyxmdW5jdGlvbihlKXtuLl91cGRhdGVGaWxlUmFuZ2VzKGUsaSksYVtlLmZpbGUua2V5KCldPWUuZmlsZX0pLF8uZWFjaChpLGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbXBsZXRlSW5pdGlhbGl6YXRpb24obi5fZmlsZXNCeUlkKCkpfSk7dmFyIGg9W107Xy5lYWNoKGUuZ2xvYmFsRXJyb3JzLGZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBkKGUpO3QuaW5pdCgpLF8uZWFjaCh0LnN0YWNrKCksZnVuY3Rpb24oZSl7dmFyIGk9bi5maWxlQnlJZChlLmZpbGVJZCgpKTtpZihpKXtlLnNldEZpbGUoaSk7dmFyIGE9aS5jbG9zZXN0UmFuZ2UoZS5saW5lKCkpO251bGwhPWEmJihlLnNldFJhbmdlKGEpLGEuZmFpbHModCkpfX0pLGgucHVzaCh0KX0pLF8uZWFjaChuLl90ZXN0UnVuR2xvYmFsTG9ncyxmdW5jdGlvbihlKXt2YXIgdD1lLmZpbGUoKTt0JiZlLnNldFJhbmdlKHQuY2xvc2VzdFJhbmdlKGUubGluZSgpKSl9KSx0aGlzLl9yZXBvcnRHbG9iYWxFcnJvcnMoaCksdGhpcy5fdXBkYXRlQWZmZWN0ZWRGaWxlcyhhLGUudGltZSxvKSx0aGlzLl9lbWl0KCJ0ZXN0c0V4ZWN1dGVkIix7Zmlyc3RGYWlsaW5nT3JTaW5nbGVFeGVjdXRlZFRlc3Q6dHx8dm9pZCAwLGFsbEFmZmVjdGVkRmlsZXM6YSxjaGFuZ2VkOnIsZXhlY3V0ZWQ6bCxmdWxsUnVuOmUuZnVsbFJ1bn0pfSx0LnByb3RvdHlwZS5fYWRkRmlsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3RoaXMuX2ZpbGVzW2Uua2V5KCldPWUsZS5oYXNSZXBvcnRhYmxlQ292ZXJhZ2UoKSYmKGUuX25vQ292ZXJhZ2VDYWxjdWxhdGlvbj0hIV8uZmluZCh0aGlzLl9wcm9qZWN0LnNldHRpbmdzKCkuZmlsZXNXaXRoTm9Db3ZlcmFnZUNhbGN1bGF0ZWQsZnVuY3Rpb24obil7cmV0dXJuIGEoZS5wYXRoKCksbix7ZG90OnQuX3Byb2plY3Quc2V0dGluZ3MoKS5kb3R9KX0pKX0sdC5wcm90b3R5cGUuX2RlbGV0ZUZpbGU9ZnVuY3Rpb24oZSl7ZGVsZXRlIHRoaXMuX2ZpbGVzW2VdLGRlbGV0ZSB0aGlzLl9maWxlc1dpdGhNZXNzYWdlc1tlXX0sdC5wcm90b3R5cGUuX2xpbmVSZXBvcnQ9ZnVuY3Rpb24oZSx0KXtyZXR1cm57dGVzdHM6dGhpcy5fbWFwVGVzdHMoZS5saW5lQ292ZXJpbmdUZXN0c09yZGVyZWRCeUZhaWxpbmdUaGVuRGF0ZSh0KSl9fSx0LnByb3RvdHlwZS5fcmVwb3J0RmFpbGVkUnVuPWZ1bmN0aW9uKGUpe3RoaXMuX2NoYW5nZWQ9ITAsdGhpcy5fcnVuRXJyb3I9ZX0sdC5wcm90b3R5cGUuX3JlcG9ydE5vcm1hbFJ1bj1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9ydW5FcnJvcn0sdC5wcm90b3R5cGUuX3JlcG9ydEdsb2JhbEVycm9ycz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49T2JqZWN0LmNyZWF0ZShudWxsKTt0aGlzLl9jaGFuZ2VkPXRoaXMuX2NoYW5nZWR8fF8uc2l6ZSh0aGlzLl9nbG9iYWxFcnJvcnMpIT09ZS5sZW5ndGgsXy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIGk9ZS5rZXkoKTtkZWxldGUgdC5fZ2xvYmFsRXJyb3JzW2ldLG5baV09ZX0pLHRoaXMuX2NoYW5nZWQ9dGhpcy5fY2hhbmdlZHx8IV8uaXNFbXB0eSh0aGlzLl9nbG9iYWxFcnJvcnMpLHRoaXMuX2dsb2JhbEVycm9ycz1ufSx0LnByb3RvdHlwZS5fdGVzdHNSZW1vdmVkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Xy5lYWNoKGUsZnVuY3Rpb24oZSl7dmFyIG49ZS5rZXkoKSxpPSEhdC5fZmFpbGluZ1Rlc3RzW25dO2RlbGV0ZSB0Ll90ZXN0c1tuXSxkZWxldGUgdC5fZmFpbGluZ1Rlc3RzW25dLHQuX2NoYW5nZWQ9aXx8dC5fY2hhbmdlZH0pfSx0LnByb3RvdHlwZS5fdGVzdEFkZGVkPWZ1bmN0aW9uKGUpe3ZhciB0PWUua2V5KCksbj10aGlzLl90ZXN0c1t0XTt0aGlzLl90ZXN0c1t0XT1lLGRlbGV0ZSB0aGlzLl9mYWlsaW5nVGVzdHNbdF0sZS5pc0ZhaWxpbmcoKSYmKHRoaXMuX2ZhaWxpbmdUZXN0c1t0XT1lKSx0aGlzLl9jaGFuZ2VkPSFufHxuJiZuLmlzRmFpbGluZygpfHxlLmlzRmFpbGluZygpfHx0aGlzLl9jaGFuZ2VkfSx0LnByb3RvdHlwZS5fZmlsZXNCeUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGVzfSx0LnByb3RvdHlwZS5fdXBkYXRlQWZmZWN0ZWRGaWxlcz1mdW5jdGlvbihlLHQsbil7dmFyIGk9dGhpcyxhPXRoaXMsbz1PYmplY3QuY3JlYXRlKG51bGwpLHI9W107Xy5lYWNoKGUsZnVuY3Rpb24oZSl7YS5fYWdncmVnYXRlRmlsZUNvdmVyYWdlKGUpJiZyLnB1c2goZSk7dmFyIHQ9ZS51cGRhdGVEb2N1bWVudCgpO2lmKHQmJihvW2UucGF0aCgpXT1hLl9hbHdheXNTZW5kQWxsTGluZXM/ZS5hbGxMaW5lcygpOnQpLG4pe3ZhciBsPWUua2V5KCkscz1uW2xdO3M/aS5fZmlsZXNXaXRoTWVzc2FnZXNbbF09czpkZWxldGUgaS5fZmlsZXNXaXRoTWVzc2FnZXNbbF19fSksXy5pc0VtcHR5KG8pfHx0aGlzLl9lbWl0KCJkb2N1bWVudHNVcGRhdGVkIix7ZG9jdW1lbnRzOm99KTt2YXIgbD10aGlzLl9jaGFuZ2VkO2wmJmRlbGV0ZSB0aGlzLl9jaGFuZ2VkLHIubGVuZ3RoJiZ0aGlzLl91cGRhdGVUb3RhbENvdmVyYWdlKCksdGhpcy5fZW1pdCgic3RhdHNNYXliZUNoYW5nZWQiLHt0ZXN0UmVzdWx0c0NoYW5nZWQ6bCxmaWxlc1dpdGhDaGFuZ2VkQ292ZXJhZ2U6cix0aW1lOnR9KSxwcm9jZXNzLmVudi5xdW9ra2F8fHRoaXMuX2VtaXRGaWxlc01lc3NhZ2VzKCl9LHQucHJvdG90eXBlLl9lbWl0RmlsZXNNZXNzYWdlcz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLG49e307Xy5lYWNoKGU/KGk9e30saVtlXT10aGlzLl9maWxlc1dpdGhNZXNzYWdlc1tlXXx8e30saSk6dGhpcy5fZmlsZXNXaXRoTWVzc2FnZXMsZnVuY3Rpb24oZSxpKXt2YXIgYT10Ll9maWxlc1dpdGhMb2FkYWJsZU1lc3NhZ2VzW2ldO25baV09e21lc3NhZ2VzOmE/dC5fbWFwTWVzc2FnZXMoZS5tZXNzYWdlcywhMCk6W10sbmFtZTplLmZpbGV9LGEmJihlLm1lc3NhZ2VzPVtdKX0pLChfLmlzRW1wdHkobil8fGUmJiFuW2VdLm5hbWUpJiYobj12b2lkIDApLHRoaXMuX2VtaXQoImZpbGVNZXNzYWdlcyIse2ZpbGVzOm4sc3BlY2lmaWNGaWxlOmV9KTt2YXIgaX0sdC5wcm90b3R5cGUuX2FnZ3JlZ2F0ZUZpbGVDb3ZlcmFnZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7aWYoZS5oYXNSZXBvcnRhYmxlQ292ZXJhZ2UoKSl7dmFyIGk9dD8wOmUubnVtYmVyT2ZBbGxSYW5nZXMoKSxhPXQ/MDplLm51bWJlck9mQ292ZXJlZFJhbmdlcygpLG89MCxyPTA7aWYoZS5fdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlPyhvPWktZS5fdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlLm51bWJlck9mQWxsUmFuZ2VzLHI9YS1lLl92YWx1ZXNJbmNsdWRlZEluQ292ZXJhZ2VBZ2dyZWdhdGUubnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzKToobz1pLHI9YSksZS5fdmFsdWVzSW5jbHVkZWRJbkNvdmVyYWdlQWdncmVnYXRlPXtudW1iZXJPZkFsbFJhbmdlczppLG51bWJlck9mQ292ZXJlZFJhbmdlczphfSxuLl9udW1iZXJPZkFsbFJhbmdlcys9byxuLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMrPXIsMCE9PW98fDAhPT1yKXJldHVybiEwfX0sdC5wcm90b3R5cGUuX3VwZGF0ZVRvdGFsQ292ZXJhZ2U9ZnVuY3Rpb24oKXt2YXIgZT1NYXRoLnJvdW5kKDFlNCp0aGlzLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMvdGhpcy5fbnVtYmVyT2ZBbGxSYW5nZXMpLzEwMHx8MDt0aGlzLl9jb3ZlcmFnZT17dmFsdWU6ZSxsb3c6ZTx0aGlzLmxvd0NvdmVyYWdlVGhyZXNob2xkKCl9fSx0LnByb3RvdHlwZS5fdXBkYXRlRmlsZVJhbmdlcz1mdW5jdGlvbihlLHQpe3ZhciBuPVtdLGk9ZS5maWxlLGE9ZS5jb3ZlcmFnZTtfLmVhY2goYS5yYW5nZXMsZnVuY3Rpb24oZSl7dmFyIGE9bmV3IHMoZSk7YS5pbml0KGksdCksYS5zZXRDb25zb2xlTG9nKGkucmFuZ2VDb25zb2xlTG9nKGEpKSxuLnB1c2goYSl9KSxpLnNldFJhbmdlcyhuLGEuY2hhbmdlZCxlLmNvdmVyYWdlLnNpbmdsZVRlc3RDaGFuZ2VkKSxpLmNsZWFyUmFuZ2VDb25zb2xlTG9nKCl9LHQucHJvdG90eXBlLl9tYXBUZXN0cz1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBfKGUpLm1hcChmdW5jdGlvbihlKXtyZXR1cm57ZmFpbGluZzplLmlzRmFpbGluZygpLGxvYzp0Ll9yYW5nZVRvTG9jKGUuc3RhcnRSYW5nZSgpKSxmaWxlOmUuZmlsZVBhdGgoKSx0aW1lOmUudGltZSgpLGVycm9yczp0Ll9tYXBFcnJvcnMoZS5lcnJvcnMoKSkscGF0aDplLnBhdGgoKSxtZXNzYWdlczp0Ll9tYXBNZXNzYWdlcyhlLmNvbnNvbGVNZXNzYWdlcygpKX19KX0sdC5wcm90b3R5cGUuX21hcE1lc3NhZ2VzPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gXy5jaGFpbihlKS5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIXR8fGUudmFsdWVCYWcoKX0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gbi5fbWFwTWVzc2FnZShlLHQpfSkudmFsdWVzKCl9LHQucHJvdG90eXBlLl9tYXBNZXNzYWdlPWZ1bmN0aW9uKGUsdCl7cmV0dXJue3R5cGU6ZS50eXBlKCksdGV4dDp0P3ZvaWQgMDplLnRleHQoKSxmaWxlOmUuZmlsZSgpJiZlLmZpbGUoKS5wYXRoKCksbG9jOnRoaXMuX3JhbmdlVG9Mb2MoZS5yYW5nZSgpKXx8ZS5saW5lKCksY29udGV4dDplLmNvbnRleHQoKSx2YWx1ZUJhZzp0P2UuZGV0YWNoVmFsdWVCYWcoKTpwcm9jZXNzLmVudi5xdW9ra2E/ZS52YWx1ZUJhZygpOnZvaWQgMCxleHBlY3RlZDplLmV4cGVjdGVkKCksYWN0dWFsOmUuYWN0dWFsKCl9fSx0LnByb3RvdHlwZS5fbWFwRXJyb3JzPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7cmV0dXJuIF8ubWFwKGUsZnVuY3Rpb24oZSl7cmV0dXJue21lc3NhZ2U6ZS5tZXNzYWdlKCksc3RhY2s6Xy5tYXAoZS5zdGFjaygpLGZ1bmN0aW9uKGUpe3JldHVybntmaWxlOmUuZmlsZVBhdGgoKSxsb2M6dC5fcmFuZ2VUb0xvYyhlLnJhbmdlKCkpfHxlLmxpbmUoKSxjb250ZXh0OmUuY29udGV4dCgpfX0pLGV4cGVjdGVkOmUuZXhwZWN0ZWQoKSxhY3R1YWw6ZS5hY3R1YWwoKSxzbmFwc2hvdDplLnNuYXBzaG90KCl9fSl9LHQucHJvdG90eXBlLl9yYW5nZVRvTG9jPWZ1bmN0aW9uKGUpe3JldHVybiBlJiZlLnN0YXJ0TGluZSYmZS5zdGFydExpbmUoKSsiOiIrZS5zdGFydENvbHVtbigpfHx2b2lkIDB9LHQucHJvdG90eXBlLl9lbWl0PWZ1bmN0aW9uKGUsdCl7dGhpcy5lbWl0KCJtZXNzYWdlIixfLmV4dGVuZCh7dHlwZTplfSx0KSl9LHR9KEV2ZW50RW1pdHRlcik7dC5leHBvcnRzPXV9LHsiLi4vc2hhcmVkL3V0aWxzIjoxNywiLi9icm93c2VyR2xvYmFscyI6NCwiLi9jb25zb2xlTWVzc2FnZSI6NSwiLi9jb3ZlcmFibGVSYW5nZSI6NiwiLi9lcnJvckVudHJ5Ijo5LCIuL2V4ZWN1dGVkVGVzdCI6MTAsIi4vdHJhY2tlZFNvdXJjZUZpbGUiOjE1LG1pbmltYXRjaDp2b2lkIDAscGF0aDp2b2lkIDB9XSwxMzpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1lKCJkZ3JhbSIpLGE9ZSgib3MiKSxvPWUoIi4vLi4vLi4vdXRpbHMiKSxyPW8ucmFuZG9tSWQoKSxsPW4ub3B0aW9ucz17dHRsOjEyOCxhZGRyZXNzOiIyMzAuMC4wLjMiLHBvcnQ6NTYzOTh9LHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dHJ5e3ZhciBlPXRoaXM7dGhpcy5fbGlzdGVuZXJzPXt9LHRoaXMuX3NlbmRlcj1pLmNyZWF0ZVNvY2tldCgidWRwNCIpLHRoaXMuX3NlbmRlci5iaW5kKGZ1bmN0aW9uKCl7ZS5fc2VuZGVyLnNldEJyb2FkY2FzdCghMCksZS5fc2VuZGVyLnNldE11bHRpY2FzdFRUTChsLnR0bCl9KSx0aGlzLl9zZW5kZXIub24oImVycm9yIixmdW5jdGlvbigpe3RyeXtlLl9zZW5kZXIuY2xvc2UoKX1jYXRjaCh0KXt9fSksdGhpcy5fcmVjZWl2ZXI9aS5jcmVhdGVTb2NrZXQoInVkcDQiKSx0aGlzLl9yZWNlaXZlci5vbigibGlzdGVuaW5nIixmdW5jdGlvbigpe3RyeXtlLl9yZWNlaXZlci5zZXRCcm9hZGNhc3QoITApLGUuX3JlY2VpdmVyLnNldE11bHRpY2FzdFRUTChsLnR0bCksZS5fcmVjZWl2ZXIuYWRkTWVtYmVyc2hpcChsLmFkZHJlc3MpfWNhdGNoKHQpe319KSx0aGlzLl9yZWNlaXZlci5vbigibWVzc2FnZSIsZnVuY3Rpb24odCl7dHJ5e3Q9SlNPTi5wYXJzZSh0LnRvU3RyaW5nKCJ1dGY4IikpLHQuZXZlbnQmJnQuc291cmNlJiZ0LnNvdXJjZUlkJiZ0LnNvdXJjZSE9PWUuX3NvdXJjZSgpJiZ0LnNvdXJjZUlkIT09ciYmXy5lYWNoKGUuX2xpc3RlbmVyc1t0LmV2ZW50XSxmdW5jdGlvbihlKXtlLmFwcGx5KG51bGwsW3QuZGF0YSx0LnNvdXJjZV0pfSl9Y2F0Y2gobil7fX0pLHRoaXMuX3JlY2VpdmVyLm9uKCJlcnJvciIsZnVuY3Rpb24oKXt0cnl7ZS5fcmVjZWl2ZXIuY2xvc2UoKX1jYXRjaCh0KXt9fSksdGhpcy5fcmVjZWl2ZXIuYmluZChsLnBvcnQpfWNhdGNoKHQpe319cmV0dXJuIGUucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGUsdCl7dGhpcy5fbGlzdGVuZXJzJiYodGhpcy5fbGlzdGVuZXJzW2VdfHwodGhpcy5fbGlzdGVuZXJzW2VdPVtdKSx0aGlzLl9saXN0ZW5lcnNbZV0ucHVzaCh0KSl9LGUucHJvdG90eXBlLmVtaXQ9ZnVuY3Rpb24oZSx0KXt0cnl7dmFyIG49bmV3IEJ1ZmZlcihKU09OLnN0cmluZ2lmeSh7ZXZlbnQ6ZSxkYXRhOnQsc291cmNlOnRoaXMuX3NvdXJjZSgpLHNvdXJjZUlkOnJ9KSk7dGhpcy5fc2VuZGVyLnNlbmQobiwwLG4ubGVuZ3RoLGwucG9ydCxsLmFkZHJlc3MpfWNhdGNoKGkpe319LGUucHJvdG90eXBlLl9zb3VyY2U9ZnVuY3Rpb24oKXtyZXR1cm4gYS5ob3N0bmFtZSgpKyIgKCIrZS5fZ2V0SVB2NEFkZHJlc3MoKSsiKSJ9LGUucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXsKdHJ5e3RoaXMuX3NlbmRlci5jbG9zZSgpfWNhdGNoKGUpe310cnl7dGhpcy5fcmVjZWl2ZXIuY2xvc2UoKX1jYXRjaChlKXt9fSxlLl9nZXRJUHY0QWRkcmVzcz1mdW5jdGlvbigpe3ZhciBlPSIiO3JldHVybiBfLmVhY2goYS5uZXR3b3JrSW50ZXJmYWNlcygpLGZ1bmN0aW9uKHQpe2lmKCFlKWZvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgaT10W25dO2lmKCJJUHY0Ij09PWkuZmFtaWx5JiYiMTI3LjAuMC4xIiE9PWkuYWRkcmVzcyYmIWkuaW50ZXJuYWwpcmV0dXJuIHZvaWQoZT1pLmFkZHJlc3MpfX0pLGV8fCIwLjAuMC4wIn0sZX0oKTt0LmV4cG9ydHM9bmV3IHN9LHsiLi8uLi8uLi91dGlscyI6MTksZGdyYW06dm9pZCAwLG9zOnZvaWQgMH1dLDE0OltmdW5jdGlvbihlLHQsbil7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl0aGlzLl9maWxlSWQ9YXJndW1lbnRzWzBdLHRoaXMuX2xpbmU9YXJndW1lbnRzWzFdLHRoaXMuX2NvbnRleHQ9YXJndW1lbnRzWzJdO2Vsc2UgaWYoYXJndW1lbnRzLmxlbmd0aCl7dmFyIGU9YXJndW1lbnRzWzBdLnNwbGl0KCJfIik7dGhpcy5fZmlsZUlkPXBhcnNlSW50KGVbMF0sMTApLHRoaXMuX2xpbmU9cGFyc2VJbnQoZVsxXSwxMCl9fXJldHVybiBlLnByb3RvdHlwZS5rZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsZUlkKyJfIit0aGlzLl9saW5lfSxlLnByb3RvdHlwZS5maWxlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZmlsZUlkfSxlLnByb3RvdHlwZS5saW5lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xpbmV9LGUucHJvdG90eXBlLmNvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY29udGV4dH0sZS5wcm90b3R5cGUuc2V0RmlsZT1mdW5jdGlvbihlKXt0aGlzLl9maWxlPWV9LGUucHJvdG90eXBlLmZpbGVQYXRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpbGUmJnRoaXMuX2ZpbGUucGF0aCgpfHx0aGlzLl9maWxlSWQmJn50aGlzLl9maWxlSWQuaW5kZXhPZigiLiIpJiZ0aGlzLl9maWxlSWR9LGUucHJvdG90eXBlLnNldFJhbmdlPWZ1bmN0aW9uKGUpe3RoaXMuX3JhbmdlPWV9LGUucHJvdG90eXBlLnJhbmdlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JhbmdlfSxlfSgpO3QuZXhwb3J0cz1pfSx7fV0sMTU6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIGk9ZSgiLi9jb3ZlcmFibGVSYW5nZSIpLGE9ZSgiLi9kb2N1bWVudEluRWRpdG9yIiksbz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5fZGF0YT1lLHRoaXMuX3JhbmdlQ29uc29sZUxvZz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX3Jhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX25ld1Jhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2FmZmVjdGVkUmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fb3V0ZGF0ZWRSYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9saW5lVG9SYW5nZU1hcD1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX3Rlc3RNYXA9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9udW1iZXJPZkNvdmVyZWRSYW5nZXM9MH1yZXR1cm4gZS5wcm90b3R5cGUuc2V0UmFuZ2VDb25zb2xlTG9nPWZ1bmN0aW9uKGUsdCl7dmFyIG49ODE5MixhPWkucmFuZ2VLZXkodCksbz10aGlzLl9yYW5nZUNvbnNvbGVMb2dbYV07b3x8KG89dGhpcy5fcmFuZ2VDb25zb2xlTG9nW2FdPVtdKTt2YXIgcj1lLmxlbmd0aD5uPyIuLi4iOiIiO2U9ZS5zdWJzdHIoMCxuKSxvLnB1c2goZStyKX0sZS5wcm90b3R5cGUucmFuZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Jhbmdlc30sZS5wcm90b3R5cGUuaW5zdHJ1bWVudGVkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGEuY292ZXJhYmxlfSxlLnByb3RvdHlwZS51cGRhdGVEb2N1bWVudD1mdW5jdGlvbigpe3ZhciBlPV8uZXh0ZW5kKHt9LHRoaXMuX25ld1Jhbmdlcyx0aGlzLl9hZmZlY3RlZFJhbmdlcyx0aGlzLl9vdXRkYXRlZFJhbmdlcyksdD10aGlzLl9hbGxSYW5nZXNSZWNlaXZlZCxuPXRoaXMuX2ludmFsaWRhdGVEb2N1bWVudDtpZihkZWxldGUgdGhpcy5fYWxsUmFuZ2VzUmVjZWl2ZWQsZGVsZXRlIHRoaXMuX2ludmFsaWRhdGVEb2N1bWVudCxfLmVhY2godGhpcy5fb3V0ZGF0ZWRSYW5nZXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZGlzcG9zZSgpfSksdGhpcy5fbmV3UmFuZ2VzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fYWZmZWN0ZWRSYW5nZXM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9vdXRkYXRlZFJhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2RvY3VtZW50SW5FZGl0b3Ipe3ZhciBpPW4/dGhpcy5fZG9jdW1lbnRJbkVkaXRvci51cGRhdGUoXy52YWx1ZXModGhpcy5fcmFuZ2VzKSwhMCwhMCk6dGhpcy5fZG9jdW1lbnRJbkVkaXRvci51cGRhdGUoZSx0LCExKTtyZXR1cm4gaS5mdWxsVXBkYXRlPW4saX19LGUucHJvdG90eXBlLmFsbExpbmVzPWZ1bmN0aW9uKCl7aWYodGhpcy5fZG9jdW1lbnRJbkVkaXRvcil7dmFyIGU9dGhpcy5fZG9jdW1lbnRJbkVkaXRvci5hbGxMaW5lcygpO3JldHVybiBlJiYoZS5jb3ZlcmFnZT17dmFsdWU6dGhpcy5jb3ZlcmFnZSgpfSksZX19LGUucHJvdG90eXBlLm9wZW5lZEluRWRpdG9yPWZ1bmN0aW9uKCl7dGhpcy5fZG9jdW1lbnRJbkVkaXRvcnx8KHRoaXMuX2RvY3VtZW50SW5FZGl0b3I9bmV3IGEsdGhpcy5fZG9jdW1lbnRJbkVkaXRvci51cGRhdGUoXy52YWx1ZXModGhpcy5fcmFuZ2VzKSwhMSwhMCkpfSxlLnByb3RvdHlwZS5jbG9zZWRJbkFsbEVkaXRvcnM9ZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5fZG9jdW1lbnRJbkVkaXRvcn0sZS5wcm90b3R5cGUuaXNPcGVuZWRJbkVkaXRvcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kb2N1bWVudEluRWRpdG9yfSxlLnByb3RvdHlwZS5zaGlmdERvY3VtZW50TGluZXM9ZnVuY3Rpb24oZSx0LG4pe3RoaXMuX2RvY3VtZW50SW5FZGl0b3ImJnRoaXMuX2RvY3VtZW50SW5FZGl0b3Iuc2hpZnRMaW5lcyhlLHQsbil9LGUucHJvdG90eXBlLmludmFsaWRhdGVEb2N1bWVudExpbmVzPWZ1bmN0aW9uKGUpe3RoaXMuX2RvY3VtZW50SW5FZGl0b3ImJnRoaXMuX2RvY3VtZW50SW5FZGl0b3IuaW52YWxpZGF0ZUxpbmVzKGUpfSxlLnByb3RvdHlwZS5pbnZhbGlkYXRlRG9jdW1lbnQ9ZnVuY3Rpb24oKXt0aGlzLl9kb2N1bWVudEluRWRpdG9yJiYodGhpcy5faW52YWxpZGF0ZURvY3VtZW50PSEwKX0sZS5wcm90b3R5cGUuaGFzVmFsaWREb2N1bWVudD1mdW5jdGlvbigpe3JldHVybiF0aGlzLl9pbnZhbGlkYXRlRG9jdW1lbnR9LGUucHJvdG90eXBlLmxpbmVUZXN0cz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY292ZXJpbmdUZXN0cyhlKX0sZS5wcm90b3R5cGUubGluZVJhbmdlcz1mdW5jdGlvbihlKXtpZih0aGlzLl9kb2N1bWVudEluRWRpdG9yKXt2YXIgdD10aGlzLl9kb2N1bWVudEluRWRpdG9yLmxpbmUoZSk7aWYodClyZXR1cm4gdC5yYW5nZXMoKX19LGUucHJvdG90eXBlLmNvdmVyaW5nVGVzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY292ZXJpbmdUZXN0cygpfSxlLnByb3RvdHlwZS5saW5lQ292ZXJpbmdUZXN0c09yZGVyZWRCeUZhaWxpbmdUaGVuRGF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiBfLmNoYWluKHRoaXMuX2NvdmVyaW5nVGVzdHMoZSx0KSkuc29ydEJ5KGZ1bmN0aW9uKGUpe3JldHVybiFlLmlzRmFpbGluZygpfSkuc29ydEJ5KGZ1bmN0aW9uKGUpe3JldHVybi1lLnRzKCl9KS52YWx1ZSgpfSxlLnByb3RvdHlwZS5fY292ZXJpbmdUZXN0cz1mdW5jdGlvbihlLHQpe3ZhciBuO2lmKGUpe2lmKCF0aGlzLl9kb2N1bWVudEluRWRpdG9yKXJldHVybltdO2lmKG49dGhpcy5fZG9jdW1lbnRJbkVkaXRvci5saW5lKGUpLCFuKXJldHVybltdfXZhciBpPW4/bi5yYW5nZXMoKTp0aGlzLl9yYW5nZXM7cmV0dXJuIHQmJihpPV8uZmlsdGVyKGksdCkpLF8ucmVkdWNlKGksZnVuY3Rpb24oZSx0KXtyZXR1cm4gXy5lYWNoKHQuY292ZXJpbmdUZXN0cygpLGZ1bmN0aW9uKHQpe2VbdC5rZXkoKV09dH0pLGV9LHt9KX0sZS5wcm90b3R5cGUuZGlzcG9zZT1mdW5jdGlvbigpe2RlbGV0ZSB0aGlzLl9kb2N1bWVudEluRWRpdG9yLF8uZWFjaCh0aGlzLl9yYW5nZXMsZnVuY3Rpb24oZSl7cmV0dXJuIGUuZGlzcG9zZSgpfSksZGVsZXRlIHRoaXMuX3JhbmdlcyxkZWxldGUgdGhpcy5fdGVzdE1hcH0sZS5wcm90b3R5cGUucmFuZ2VDb25zb2xlTG9nPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9yYW5nZUNvbnNvbGVMb2dbZS5rZXkoKV19LGUucHJvdG90eXBlLmNsZWFyUmFuZ2VDb25zb2xlTG9nPWZ1bmN0aW9uKCl7dGhpcy5fcmFuZ2VDb25zb2xlTG9nPU9iamVjdC5jcmVhdGUobnVsbCl9LGUucHJvdG90eXBlLmtleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhLmlkfSxlLnByb3RvdHlwZS5wYXRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RhdGEucGF0aH0sZS5wcm90b3R5cGUuYWRkVGVzdD1mdW5jdGlvbihlKXt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpLG49dGhpcy5fdGVzdE1hcFtlLmtleSgpXTtyZXR1cm4gbiYmXy5lYWNoKG4ub2Jzb2xldGUoKSxmdW5jdGlvbihlKXt0W2Uua2V5KCldPWV9KSx0aGlzLl90ZXN0TWFwW2Uua2V5KCldPWUsZS5zZXRUZXN0RmlsZSh0aGlzKSx0fSxlLnByb3RvdHlwZS5yYW5nZUNvdmVyYWdlQ2hhbmdlZD1mdW5jdGlvbihlLHQpe3RoaXMuX2FmZmVjdGVkUmFuZ2VzW2Uua2V5KCldPWU7dmFyIG49ZS5pc0NvdmVyZWQoKTt0IT09biYmKHRoaXMuX251bWJlck9mQ292ZXJlZFJhbmdlcys9bj8xOi0xKX0sZS5wcm90b3R5cGUuaXNUZXN0RmlsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9kYXRhLnRlc3R9LGUucHJvdG90eXBlLmNvdmVyYWdlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFzUmVwb3J0YWJsZUNvdmVyYWdlKCk/TWF0aC5yb3VuZCgxZTQqdGhpcy5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzL18uc2l6ZSh0aGlzLl9yYW5nZXMpKS8xMDA6dm9pZCAwfSxlLnByb3RvdHlwZS5oYXNSZXBvcnRhYmxlQ292ZXJhZ2U9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5pc1Rlc3RGaWxlKCkmJnRoaXMuaW5zdHJ1bWVudGVkKCkmJiF0aGlzLl9ub0NvdmVyYWdlQ2FsY3VsYXRpb259LGUucHJvdG90eXBlLm51bWJlck9mQ292ZXJlZFJhbmdlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9udW1iZXJPZkNvdmVyZWRSYW5nZXN9LGUucHJvdG90eXBlLm51bWJlck9mQWxsUmFuZ2VzPWZ1bmN0aW9uKCl7cmV0dXJuIF8uc2l6ZSh0aGlzLl9yYW5nZXMpfSxlLnByb3RvdHlwZS5zZXRSYW5nZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXM7dGhpcy5fYWxsUmFuZ2VzUmVjZWl2ZWQ9dCx0JiZ0aGlzLl9yZWJ1aWxkUmFuZ2VNYXAoKTt2YXIgYT1PYmplY3QuY3JlYXRlKG51bGwpO18uZWFjaChlLGZ1bmN0aW9uKGUpe3ZhciBvPWUua2V5KCkscj1pLl9yYW5nZXNbb107aWYocil7dmFyIGw9ci5pc0NvdmVyZWQoKSxzPWUuaXNDb3ZlcmVkKCk7dHx8bD09PXN8fChpLl9udW1iZXJPZkNvdmVyZWRSYW5nZXMrPXM/MTotMSksci51cGRhdGVGcm9tKGUsdCxuKSxhW29dPXIsaS5fYWZmZWN0ZWRSYW5nZXNbb109cn1lbHNlIGkuX3Jhbmdlc1tvXT1lLGkuX25ld1Jhbmdlc1tvXT1lLGUuYXR0YWNoZWRUb1NvdXJjZUZpbGUoKSxlLmlzQ292ZXJlZCgpJiYhdCYmaS5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzKyt9KSx0JiYoaS5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzPTAsdGhpcy5fbGluZVRvUmFuZ2VNYXA9T2JqZWN0LmNyZWF0ZShudWxsKSxfLmVhY2goXy52YWx1ZXModGhpcy5fcmFuZ2VzKSxmdW5jdGlvbihlKXt2YXIgdD1lLmtleSgpO2lmKGkuX25ld1Jhbmdlc1t0XXx8YVt0XSl7ZS5pc0NvdmVyZWQoKSYmaS5fbnVtYmVyT2ZDb3ZlcmVkUmFuZ2VzKys7Zm9yKHZhciBuPWUuc3RhcnRMaW5lKCk7bjw9ZS5lbmRMaW5lKCk7bisrKXt2YXIgbz1pLl9saW5lVG9SYW5nZU1hcFtuXTsoIW98fGUuY2xvc2VyVG9UaGVMaW5lVGhhbihuLG8pKSYmKGkuX2xpbmVUb1JhbmdlTWFwW25dPWUpfX1lbHNlIGkuX291dGRhdGVkUmFuZ2VzW3RdPWUsZGVsZXRlIGkuX3Jhbmdlc1t0XX0pKX0sZS5wcm90b3R5cGUub3duVGVzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gXy52YWx1ZXModGhpcy5fdGVzdE1hcCl9LGUucHJvdG90eXBlLnJlbW92ZUFsbFRlc3RzPWZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gXy5lYWNoKHRoaXMub3duVGVzdHMoKSxmdW5jdGlvbih0KXtfLmVhY2godC5vYnNvbGV0ZSgpLGZ1bmN0aW9uKHQpe2VbdC5rZXkoKV09dH0pfSksdGhpcy5fdGVzdE1hcD1PYmplY3QuY3JlYXRlKG51bGwpLGV9LGUucHJvdG90eXBlLmNsb3Nlc3RSYW5nZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fbGluZVRvUmFuZ2VNYXBbZV19LGUucHJvdG90eXBlLl9yZWJ1aWxkUmFuZ2VNYXA9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5fcmFuZ2VzO3RoaXMuX3Jhbmdlcz1PYmplY3QuY3JlYXRlKG51bGwpLF8uZWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBuPXQua2V5KCksaT1lLl9yYW5nZXNbbl07ZS5fcmFuZ2VzW25dPXQsaSYmaS5kaXNwb3NlKCl9KX0sZX0oKTt0LmV4cG9ydHM9b30seyIuL2NvdmVyYWJsZVJhbmdlIjo2LCIuL2RvY3VtZW50SW5FZGl0b3IiOjd9XSwxNjpbZnVuY3Rpb24oZSx0LG4pe3QuZXhwb3J0cz17bGluZVN0YXRlOntub3RDb3ZlcmVkOjEsZnVsbHlDb3ZlcmVkOjIscGFydGlhbGx5Q292ZXJlZDozLGVycm9yU291cmNlOjQsZXJyb3JQYXRoOjV9fX0se31dLDE3OltmdW5jdGlvbihlLHQsbil7dmFyIGk9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUucmVwbGFjZSgvXlxzK3xccyskL2dtLCIiKX0sYT1bIkphbnVhcnkiLCJGZWJydWFyeSIsIk1hcmNoIiwiQXByaWwiLCJNYXkiLCJKdW5lIiwiSnVseSIsIkF1Z3VzdCIsIlNlcHRlbWJlciIsIk9jdG9iZXIiLCJOb3ZlbWJlciIsIkRlY2VtYmVyIl07dC5leHBvcnRzPXtub3JtYWxpemVQYXRoOmZ1bmN0aW9uKGUpe3JldHVybiJ3aW4zMiI9PT1wcm9jZXNzLnBsYXRmb3JtJiZlP2UucmVwbGFjZSgvXFwvZywiLyIpOmV9LHBhcnNlS2V5OmZ1bmN0aW9uKGUpe3ZhciB0PXt9O2lmKGUpe3ZhciBuPWUuc3BsaXQoIjoiKTsyPT09bi5sZW5ndGgmJihlPWkoblsxXSkpfXZhciBvPW5ldyBCdWZmZXIoZSwiYmFzZTY0IikudG9TdHJpbmcoKS5zcGxpdCgiXG4iKTt0LmxpY2Vuc2VlTmFtZT1vWzBdLHQubGljZW5zZVRhZ3M9b1sxXTt2YXIgcj10LmxpY2Vuc2VUYWdzLnNwbGl0KCIsIik7ci5sZW5ndGg+PTEmJih0LmxpY2Vuc2VlRW1haWw9clswXSksci5sZW5ndGg+PTImJih0LmxpY2Vuc2VkUHJvZHVjdD1yWzFdKSx0LmV4cGlyYXRpb25EYXRlU3RyaW5nPW9bMl0sdC5saWNlbnNlU2lnbmF0dXJlPW9bM107dHJ5e3ZhciBsPXQuZXhwaXJhdGlvbkRhdGVTdHJpbmcuc3BsaXQoIi8iKTt0LmV4cGlyYXRpb25EYXRlU3RyaW5nRm9ybWF0dGVkPWxbMF0rIiAiK2FbcGFyc2VJbnQobFsxXSwxMCktMV0rIiAiK2xbMl19Y2F0Y2gocyl7dC5leHBpcmF0aW9uRGF0ZVN0cmluZ0Zvcm1hdHRlZD10LmV4cGlyYXRpb25EYXRlU3RyaW5nfXJldHVybiB0fSxmb3JtYXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5yZXBsYWNlKC9ceyhbMC05YS16QS1aX10rKVx9L2csZnVuY3Rpb24obixpLGEpe3ZhciBvO3JldHVybiJ7Ij09PWVbYS0xXSYmIn0iPT09ZVthK24ubGVuZ3RoXT9pOihvPXQuaGFzT3duUHJvcGVydHkoaSk/dFtpXTpudWxsLG51bGw9PT1vfHx2b2lkIDA9PT1vPyIiOm8pfSl9LHZhbGlkUGFja2FnZU5hbWU6ZnVuY3Rpb24oZSl7aWYoZSYmIWUubWF0Y2goL15cLi8pJiYhZS5tYXRjaCgvXl8vKSYmIShlLmxlbmd0aD4yMTR8fGUudG9Mb3dlckNhc2UoKSE9PWV8fC9bfichKCkqXS8udGVzdChlLnNwbGl0KCIvIikuc2xpY2UoLTEpWzBdKSkpe2lmKGVuY29kZVVSSUNvbXBvbmVudChlKT09PWUpcmV0dXJuIGU7dmFyIHQ9ZS5tYXRjaCgvXig/OkAoW15cL10rPylbXC9dKT8oW15cL10rPykkLyk7aWYodCl7dmFyIG49dFsxXSxpPXRbMl07aWYoZW5jb2RlVVJJQ29tcG9uZW50KG4pPT09biYmZW5jb2RlVVJJQ29tcG9uZW50KGkpPT09aSlyZXR1cm4gZX19fX19LHt9XSwxODpbZnVuY3Rpb24oZSx0LG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaSxhPXRoaXMmJnRoaXMuX19leHRlbmRzfHxmdW5jdGlvbigpe3ZhciBlPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihlLHQpe2UuX19wcm90b19fPXR9fHxmdW5jdGlvbihlLHQpe2Zvcih2YXIgbiBpbiB0KXQuaGFzT3duUHJvcGVydHkobikmJihlW25dPXRbbl0pfTtyZXR1cm4gZnVuY3Rpb24odCxuKXtmdW5jdGlvbiBpKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fWUodCxuKSx0LnByb3RvdHlwZT1udWxsPT09bj9PYmplY3QuY3JlYXRlKG4pOihpLnByb3RvdHlwZT1uLnByb3RvdHlwZSxuZXcgaSl9fSgpLG89ZSgibmV0Iikscj1lKCJodHRwIiksbD1lKCJ1cmwiKSxzPWUoIndzIikuU2VydmVyLHA9ZSgiLi4vc2VydmVyL2RvY3VtZW50SW5FZGl0b3IiKSxjPVs1MTIzNSw1MTIzNiw1MTIzNyw1MTIzOCw1MTIzOSw1MTI0MCw1MTI0MSw1MTI0Miw1MTI0Myw1MTI0NCw1Mjc0Miw1Mjc0Myw1Mjc0NCw1Mjc0NSw1Mjc0Niw1Mjc0Nyw1Mjc0OCw1Mjc0OSw1Mjc1MCw1Mjc1MSw1MzU3OCw1MzU3OSw1MzU4MCw1MzU4MSw1MzU4Miw1MzU4Myw1MzU4NCw1MzU4NSw1MzU4Niw1MzU4N10sZD01MTI0NSx1PSc8IURPQ1RZUEUgaHRtbD5cbjxodG1sIGxhbmc9ImVuIj5cbjxoZWFkPlxuICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij5cbiAgICA8bGluayBpZD0iZmF2aWNvbiIgcmVsPSJpY29uIiBocmVmPSJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24uaWNvIiB0eXBlPSJpbWFnZS94LWljb24iLz5cbiAgICA8bGluayBpZD0ic2hvcnRjdXQiIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljbyIgdHlwZT0iaW1hZ2UveC1pY29uIi8+XG4gICAgPHN0eWxlPlxuICAgICAgICBodG1sLFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICB9XG4gICAgPC9zdHlsZT5cbjwvaGVhZD5cbjxib2R5IHN0eWxlPSJtYXJnaW46MHB4O3BhZGRpbmc6MHB4O292ZXJmbG93OmhpZGRlbjsiPlxuPHNjcmlwdD5cbiAgdHJ5IHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcJ21lc3NhZ2VcJywgZnVuY3Rpb24gKG0pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChtLmRhdGEudGl0bGUpIHtcbiAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IG0uZGF0YS50aXRsZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobS5kYXRhLnN0YXR1cykge1xuICAgICAgICAgIGlmIChtLmRhdGEuc3RhdHVzLnBhc3NpbmcpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwnZmF2aWNvblwnKS5zZXRBdHRyaWJ1dGUoXCdocmVmXCcsIFwnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLmljb1wnKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwnc2hvcnRjdXRcJykuc2V0QXR0cmlidXRlKFwnaHJlZlwnLCBcJ2h0dHBzOi8vd2FsbGFieWpzLmNvbS9hcHAvZmF2aWNvbi5pY29cJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwnZmF2aWNvblwnKS5zZXRBdHRyaWJ1dGUoXCdocmVmXCcsIFwnaHR0cHM6Ly93YWxsYWJ5anMuY29tL2FwcC9mYXZpY29uLWFsdC5pY29cJyk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcJ3Nob3J0Y3V0XCcpLnNldEF0dHJpYnV0ZShcJ2hyZWZcJywgXCdodHRwczovL3dhbGxhYnlqcy5jb20vYXBwL2Zhdmljb24tYWx0Lmljb1wnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICB9XG48L3NjcmlwdD5cbjxpZnJhbWUgc3JjPSJodHRwczovL3dhbGxhYnlqcy5jb20vYXBwIiBmcmFtZWJvcmRlcj0iMCIgc3R5bGU9Im92ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIj48L2lmcmFtZT5cbjwvYm9keT5cbjwvaHRtbD5cbicsaD1mdW5jdGlvbih0KXtmdW5jdGlvbiBuKG4pe3ZhciBhPXQuY2FsbCh0aGlzKXx8dGhpcyxvPWE7cmV0dXJuIGEuX2ZpbmRGcmVlUG9ydCgpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIG8uX3N0YXJ0KGUsbil9KVsiY2F0Y2giXShmdW5jdGlvbihlKXtyZXR1cm4gY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIHN0YXJ0IHdhbGxhYnkgYXBwIHNlcnZpY2U6ICIrKGUmJmUubWVzc2FnZSkpfSksaT1lKCJkZWJ1ZyIpKCJ3YWxsYWJ5OnVpU2VydmljZSIpLG8uX2Nvbm5lY3Rpb25zPVtdLG8uX29wZW5lZEZpbGVzPXt9LGF9cmV0dXJuIGEobix0KSxuLnByb3RvdHlwZVsidWk6c3RhcnQiXT1mdW5jdGlvbihlLHQpe3RoaXMuX3NlbmQoXy5leHRlbmQoe3R5cGU6InVpOnN1bW1hcnkifSx0aGlzLl9tb2RlbC5zdW1tYXJ5KCkpLHQpO3ZhciBuPXRoaXMuX21vZGVsLmFsbEZpbGVzKCk7Xy5pc0VtcHR5KG4pfHx0aGlzLl9zZW5kQWxsRmlsZXNXaXRoQ292ZXJhZ2Uobix0KX0sbi5wcm90b3R5cGVbInVpOm5hdmlnYXRlIl09ZnVuY3Rpb24oZSl7ZS5saW5lPXBhcnNlSW50KGUubGluZSwxMCksZS5jb2x1bW49cGFyc2VJbnQoZS5jb2x1bW4sMTApLF8uaXNOYU4oZS5saW5lKSYmKGUubGluZT0xKSxfLmlzTmFOKGUuY29sdW1uKSYmZGVsZXRlIGUuY29sdW1uLHRoaXMuZW1pdCgibWVzc2FnZSIsXy5leHRlbmQoZSx7dHlwZToibmF2aWdhdGlvblJlcXVlc3RlZCJ9KSl9LG4ucHJvdG90eXBlWyJ1aTpydW5UZXN0cyJdPWZ1bmN0aW9uKGUpe3RoaXMuX21vZGVsLl9wcm9qZWN0LnJ1blRlc3RzKHt0ZXN0czplLnRlc3RzfSl9LG4ucHJvdG90eXBlWyJ1aTpvcGVuZWRJbkVkaXRvciJdPWZ1bmN0aW9uKGUpe3RoaXMuX29wZW5lZEZpbGVzW2UucGF0aF0/dGhpcy5fb3BlbmVkRmlsZXNbZS5wYXRoXSsrOnRoaXMuX29wZW5lZEZpbGVzW2UucGF0aF09MX0sbi5wcm90b3R5cGVbInVpOmNsb3NlZEluRWRpdG9yIl09ZnVuY3Rpb24oZSl7dGhpcy5fb3BlbmVkRmlsZXNbZS5wYXRoXSYmdGhpcy5fb3BlbmVkRmlsZXNbZS5wYXRoXS0tfSxuLnByb3RvdHlwZVsidWk6Y29kZVJlcXVlc3RlZCJdPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxpPXRoaXMuX21vZGVsLmZpbGVDb250ZW50QnlQYXRoKGUucGF0aCk7aSYmaS50aGVuKGZ1bmN0aW9uKGkpe3ZhciBhLG89bmV3IHAscj1uLl9tb2RlbC5maWxlQnlQYXRoKGUucGF0aCksbD1bXSxzPVtdO3ImJnIuaW5zdHJ1bWVudGVkKCkmJihvLnVwZGF0ZShfLnZhbHVlcyhyLnJhbmdlcygpKSwhMSwhMCkscz1vLmFsbExpbmVzKCkubGluZXN8fFtdLGw9bi5fbW9kZWwudW5jb3ZlcmVkUmVnaW9uc0J5UmVxdWVzdCh7ZmlsZTplLnBhdGh9KXx8W10sYT1uLl9yZXBvcnRGaWxlQ292ZXJhZ2UocikpLG4uX3NlbmQoe3R5cGU6InVpOmNvZGUiLGNvcnJlbGF0aW9uSWQ6ZS5jb3JyZWxhdGlvbklkLGNvZGU6aS50b1N0cmluZygpLGxpbmVzOnMsdW5jb3ZlcmVkUmVnaW9uczpsLGNvdmVyYWdlOmF9LHQpfSl9LG4ucHJvdG90eXBlWyJ1aTp0ZXN0czpyZXN1bHRzUmVxdWVzdGVkIl09ZnVuY3Rpb24oZSx0KXt0Ll9hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHM9ITAsdGhpcy5fc2VuZFRlc3RSZXN1bHRzKHZvaWQgMCx0KX0sbi5wcm90b3R5cGVbInVpOnRlc3RzOnJlc3VsdHNBYmFuZG9uZWQiXT1mdW5jdGlvbihlLHQpe3QuX2FsbG93ZWRUb1NlbmRUZXN0UmVzdWx0cz0hMX0sbi5wcm90b3R5cGVbIm1vZGVsOnRlc3RGaWxlRGVsZXRlZCJdPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7Xy5lYWNoKHRoaXMuX2Nvbm5lY3Rpb25zLGZ1bmN0aW9uKG4pe24uX2FsbG93ZWRUb1NlbmRUZXN0UmVzdWx0cyYmdC5fc2VuZCh7dHlwZToidWk6dGVzdHM6c29tZVJlc3VsdHNVcGRhdGVkIixmaWxlczpbe3BhdGg6ZS5maWxlLnBhdGgsYWN0aW9uOiJkZWxldGVkIn1dfSxuKX0pfSxuLnByb3RvdHlwZVsibW9kZWw6YWxsRmlsZXMiXT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO18uZWFjaCh0aGlzLl9jb25uZWN0aW9ucyxmdW5jdGlvbihuKXtuLl9hbGxvd2VkVG9TZW5kQWxsRmlsZXMmJnQuX3NlbmRBbGxGaWxlc1dpdGhDb3ZlcmFnZShfLm1hcChlLmZpbGVzLGZ1bmN0aW9uKGUpe3JldHVybntwYXRoOmUucGF0aCxpZDplLmlkfX0pLG4pfSl9LG4ucHJvdG90eXBlWyJtb2RlbDpmaWxlQWRkZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9zZW5kKHt0eXBlOiJ1aTpmaWxlcyIsZmlsZXM6W3thY3Rpb246ImFkZGVkIixwYXRoOmUuZmlsZS5wYXRoLGlkOmUuZmlsZS5pZCx0ZXN0OmUuZmlsZS50ZXN0fHx2b2lkIDB9XX0pfSxuLnByb3RvdHlwZVsibW9kZWw6ZmlsZUNoYW5nZWQiXT1mdW5jdGlvbihlKXt0aGlzLl9zZW5kKHt0eXBlOiJ1aTpmaWxlcyIsZmlsZXM6W3thY3Rpb246ImNoYW5nZWQiLHBhdGg6ZS5maWxlLnBhdGgsaWQ6ZS5maWxlLmlkfV19KX0sbi5wcm90b3R5cGVbIm1vZGVsOmZpbGVEZWxldGVkIl09ZnVuY3Rpb24oZSl7dGhpcy5fc2VuZCh7dHlwZToidWk6ZmlsZXMiLGZpbGVzOlt7YWN0aW9uOiJkZWxldGVkIixwYXRoOmUuZmlsZS5wYXRoLGlkOmUuZmlsZS5pZH1dfSl9LG4ucHJvdG90eXBlWyJtb2RlbDp0ZXN0c0V4ZWN1dGVkIl09ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztpZih0aGlzLl9zZW5kKF8uZXh0ZW5kKHt0eXBlOiJ1aTpzdW1tYXJ5In0sdGhpcy5fbW9kZWwuc3VtbWFyeSgpKSksXy5lYWNoKHRoaXMuX2Nvbm5lY3Rpb25zLGZ1bmN0aW9uKG4pe24uX2FsbG93ZWRUb1NlbmRUZXN0UmVzdWx0cyYmdC5fc2VuZFRlc3RSZXN1bHRzKGUsbil9KSwhXy5pc0VtcHR5KGUuYWxsQWZmZWN0ZWRGaWxlcykpe3ZhciBuPVtdLGk9Xy5yZWR1Y2UoZS5hbGxBZmZlY3RlZEZpbGVzLGZ1bmN0aW9uKGUsaSl7dmFyIGE9dC5fcmVwb3J0RmlsZUNvdmVyYWdlKGkpO3JldHVybiBhJiZhLnZhbHVlQ2hhbmdlZCYmKGRlbGV0ZSBhLnZhbHVlQ2hhbmdlZCxlW2kua2V5KCldPWEpLHQuX29wZW5lZEZpbGVzW2kucGF0aCgpXSYmbi5wdXNoKHthY3Rpb246ImFmZmVjdGVkIixwYXRoOmkucGF0aCgpLGlkOmkua2V5KCksdGVzdDppLmlzVGVzdEZpbGUoKXx8dm9pZCAwfSksZX0se30pO18uaXNFbXB0eShpKXx8dGhpcy5fc2VuZCh7dHlwZToidWk6Y292ZXJhZ2VDaGFuZ2VkIixjaGFuZ2VzOml9KSxfLmlzRW1wdHkobil8fHRoaXMuX3NlbmQoe3R5cGU6InVpOmZpbGVzIixmaWxlczpufSl9fSxuLnByb3RvdHlwZS5fcmVwb3J0RmlsZUNvdmVyYWdlPWZ1bmN0aW9uKGUpe2lmKGUpe3ZhciB0LG49ZS5jb3ZlcmFnZSgpO3JldHVybihuPj0wfHxlLl9sYXRlc3RSZXBvcnRlZENvdmVyYWdlVmFsdWU+PTApJiYodD17dmFsdWU6bixsb3c6bjx0aGlzLl9tb2RlbC5sb3dDb3ZlcmFnZVRocmVzaG9sZCgpLHJhbmdlczp7Y292ZXJlZDplLm51bWJlck9mQ292ZXJlZFJhbmdlcygpLGFsbDplLm51bWJlck9mQWxsUmFuZ2VzKCl9LHZhbHVlQ2hhbmdlZDplLl9sYXRlc3RSZXBvcnRlZENvdmVyYWdlVmFsdWUhPT1ufHx2b2lkIDB9LG4+PTB8fCh0Lm5vdENvdmVyZWQ9ITApLGUuX2xhdGVzdFJlcG9ydGVkQ292ZXJhZ2VWYWx1ZT1uKSx0fX0sbi5wcm90b3R5cGUuX3NlbmRBbGxGaWxlc1dpdGhDb3ZlcmFnZT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7dC5fYWxsb3dlZFRvU2VuZEFsbEZpbGVzPSExLHRoaXMuX3NlbmQoe3R5cGU6InVpOmZpbGVzIixmaWxlczplLm1hcChmdW5jdGlvbihlKXt2YXIgdD1uLl9tb2RlbC5maWxlQnlJZChlLmlkKTtyZXR1cm57YWN0aW9uOiJhZGRlZCIscGF0aDplLnBhdGgsaWQ6ZS5pZCx0ZXN0OnQmJnQuaXNUZXN0RmlsZSgpfHx2b2lkIDAsY292ZXJhZ2U6bi5fcmVwb3J0RmlsZUNvdmVyYWdlKHQpfX0pfSx0KX0sbi5wcm90b3R5cGUuX3NlbmRUZXN0UmVzdWx0cz1mdW5jdGlvbihlLHQpe3ZhciBuLGksYSxvPSJzb21lUmVzdWx0c1VwZGF0ZWQiO2U/KGUuZnVsbFJ1biYmKG89ImFsbFJlc3VsdHNVcGRhdGVkIiksbj1lLmNoYW5nZWQsaT1lLmV4ZWN1dGVkLGE9ZS5maXJzdEZhaWxpbmdPclNpbmdsZUV4ZWN1dGVkVGVzdCk6KG89ImFsbFJlc3VsdHNVcGRhdGVkIixuPXRoaXMuX21vZGVsLmFsbFRlc3RGaWxlcygpKSx0aGlzLl9zZW5kKHt0eXBlOiJ1aTp0ZXN0czoiK28sZmlsZXM6dGhpcy5fY3JlYXRlVGVzdFJlc3VsdHMobixhLCJjaGFuZ2VkIikuY29uY2F0KHRoaXMuX2NyZWF0ZVRlc3RSZXN1bHRzKGksYSwiZXhlY3V0ZWQiKSl9LHQpfSxuLnByb3RvdHlwZS5fY3JlYXRlVGVzdFJlc3VsdHM9ZnVuY3Rpb24oZSx0LG4pe3ZhciBpPXRoaXMsYT1fLnJlZHVjZSh0aGlzLl9tb2RlbC5nbG9iYWxFcnJvcnMoKSxmdW5jdGlvbihlLHQpe3ZhciBuO2lmKF8uZWFjaCh0LnN0YWNrKCksZnVuY3Rpb24oZSl7dmFyIHQ9ZS5maWxlSWQoKTtpZih0KXt2YXIgYT1pLl9tb2RlbC5maWxlQnlJZCh0KTtpZihhLmlzVGVzdEZpbGUoKSlyZXR1cm4gbj1hLCExfX0pLG4pe3ZhciBhPWVbbi5rZXkoKV09ZVtuLmtleSgpXXx8W107YS5wdXNoKHttZXNzYWdlOnQubWVzc2FnZSgpLHN0YWNrOl8ubWFwKHQuc3RhY2soKSxmdW5jdGlvbihlKXtyZXR1cm4gaS5fYnVpbGRMb2NhdGlvbihlLGUuZmlsZVBhdGgoKSl9KX0pfXJldHVybiBlfSx7fSl8fHt9O3JldHVybiBfLm1hcChlLGZ1bmN0aW9uKGUpe3ZhciBvPXt9O3JldHVybiBfLmVhY2goZS5vd25UZXN0cygpLGZ1bmN0aW9uKGUpe3ZhciBuPWUucGF0aCgpLGE9IjoiK18ubGFzdChuKSxyPW87bi5sZW5ndGg+MSYmXy5lYWNoKF8udGFrZShuLG4ubGVuZ3RoLTEpLGZ1bmN0aW9uKGUpe2U9IjoiK2U7dmFyIHQ9cltlXTt0fHwodD17fSxyW2VdPXQpLHI9dH0pO3ZhciBsPV8ubWFwKGUuY292ZXJlZEZpbGVzKCksZnVuY3Rpb24oZSl7cmV0dXJuIGUua2V5KCl9KTtfLmlzRW1wdHkobCkmJihsPXZvaWQgMCksclthXT17aXNUZXN0OiEwLGZpcnN0RmFpbGluZ09yU2luZ2xlRXhlY3V0ZWQ6ZT09PXR8fHZvaWQgMCxuYW1lOmEuc3Vic3RyKDEpLHRpbWU6ZS50aW1lKCksc2xvdzplLnNsb3coKSxsaW5lOmUuc3RhcnRSYW5nZSgpP2Uuc3RhcnRSYW5nZSgpLnN0YXJ0TGluZSgpOjEsbG9nczpfLm1hcChlLmNvbnNvbGVNZXNzYWdlcygpLGZ1bmN0aW9uKGUpe3ZhciB0PXttZXNzYWdlOmUudGV4dCgpfTtyZXR1cm4gZS5maWxlKCkmJih0LmxvY2F0aW9uPWkuX2J1aWxkTG9jYXRpb24oZSxlLmZpbGUoKS5wYXRoKCkpKSx0fSksZXJyb3JzOl8ubWFwKGUuZXJyb3JzKCksZnVuY3Rpb24oZSl7cmV0dXJue21lc3NhZ2U6ZS5tZXNzYWdlKCksc3RhY2s6Xy5tYXAoZS5zdGFjaygpLGZ1bmN0aW9uKGUpe3JldHVybiBpLl9idWlsZExvY2F0aW9uKGUsZS5maWxlUGF0aCgpKX0pLGFjdHVhbDplLmFjdHVhbCgpLGV4cGVjdGVkOmUuZXhwZWN0ZWQoKX19KSxjb3ZlcmVkRmlsZXM6bH19KSx7cGF0aDplLnBhdGgoKSxhY3Rpb246bix0ZXN0czppLl9idWlsZEFycmF5VGVzdFN0cnVjdHVyZShvKSxlcnJvcnM6YVtlLmtleSgpXX19KX0sbi5wcm90b3R5cGUuX2J1aWxkTG9jYXRpb249ZnVuY3Rpb24oZSx0KXt2YXIgbj17cGF0aDp0fTtyZXR1cm4gZS5yYW5nZSgpPyhuLmxpbmU9ZS5yYW5nZSgpLnN0YXJ0TGluZSgpLG4uY29sdW1uPWUucmFuZ2UoKS5zdGFydENvbHVtbigpKTplLmxpbmUoKSYmKG4ubGluZT1lLmxpbmUoKSksbi5jb250ZXh0PWUuY29udGV4dCgpLG59LG4ucHJvdG90eXBlLl9idWlsZEFycmF5VGVzdFN0cnVjdHVyZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBfLm1hcChlLGZ1bmN0aW9uKGUsbil7cmV0dXJuIGUuaXNUZXN0PT09ITA/KGRlbGV0ZSBlLmlzVGVzdCxlKTp7bmFtZTpuLnN1YnN0cigxKSx0ZXN0czp0Ll9idWlsZEFycmF5VGVzdFN0cnVjdHVyZShlKX19KX0sbi5wcm90b3R5cGUuX3N0YXJ0PWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxhPWZ1bmN0aW9uKGUpe3JldHVybiBwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKCl7dmFyIHQ9blsibW9kZWw6IitlLnR5cGVdO3QmJnQuY2FsbChuLGUpfSl9LG89ZnVuY3Rpb24oKXtuLl93c3M9bmV3IHMoe3BvcnQ6ZSx2ZXJpZnlDbGllbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ITE7dHJ5e3ZhciBuPWwucGFyc2UoZS5vcmlnaW4pO3Q9IndhbGxhYnlqcy5jb20iPT09bi5ob3N0bmFtZX1jYXRjaChpKXt9cmV0dXJuIHR9fSksbi5fd3NzLm9uKCJjb25uZWN0aW9uIixmdW5jdGlvbihlKXtpKCJVSSBjbGllbnQgY29ubmVjdGVkIiksbi5fbW9kZWw9dCxlLl9hbGxvd2VkVG9TZW5kVGVzdFJlc3VsdHM9ITEsZS5fYWxsb3dlZFRvU2VuZEFsbEZpbGVzPSEwLCFuLl9jb25uZWN0aW9ucy5sZW5ndGgmJm4uX21vZGVsLm9uKCJtZXNzYWdlIixhKSxuLl9jb25uZWN0aW9ucy5wdXNoKGUpLGUub24oIm1lc3NhZ2UiLGZ1bmN0aW9uKHQpe3ZhciBhO3RyeXthPUpTT04ucGFyc2UodCl9Y2F0Y2gobyl7cmV0dXJuIHZvaWQgY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIGRlc2VyaWFsaXplIG1lc3NhZ2UgZnJvbSB3YWxsYWJ5IFVJOiAiK3QrIiwgIisobyYmby5tZXNzYWdlKSl9aSgiSW5jb21pbmcgbWVzc2FnZSAlcyIsYS50eXBlKTt2YXIgcj1uW2EudHlwZV07ciYmci5jYWxsKG4sYSxlKX0pLGUub24oImNsb3NlIixmdW5jdGlvbigpe2koIlVJIGNsaWVudCBkaXNjb25uZWN0ZWQiKSxuLl9jb25uZWN0aW9ucz1uLl9jb25uZWN0aW9ucy5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQhPWV9KSwhbi5fY29ubmVjdGlvbnMubGVuZ3RoJiZuLl9tb2RlbC5yZW1vdmVMaXN0ZW5lcigibWVzc2FnZSIsYSl9KSxuLl9zZW5kKHt0eXBlOiJ1aTpoYW5kc2hha2UiLHByb2plY3Q6e25hbWU6bi5fbW9kZWwucHJvamVjdE5hbWUoKSxwYXRoOm4uX21vZGVsLmNvbmZpZ0ZpbGVQYXRoKCksY29uZmlnOm4uX21vZGVsLnByb2plY3RDb25maWcoKX0sdmVyc2lvbjpuLl9tb2RlbC5jb3JlVmVyc2lvbigpfSxlKX0pLGkoIkxpc3RlbmluZyBwb3J0ICVzIixlKX07bi5fY2hlY2tQb3J0KGQpLnRoZW4oZnVuY3Rpb24oZSl7aWYoZSl0cnl7bi5faHR0cFNlcnZlcj1yLmNyZWF0ZVNlcnZlcihmdW5jdGlvbihlLHQpe3Qud3JpdGVIZWFkKDIwMCx7IkNvbnRlbnQtVHlwZSI6InRleHQvaHRtbCJ9KSx0LndyaXRlKHUpLHQuZW5kKCl9KS5vbmNlKCJsaXN0ZW5pbmciLGZ1bmN0aW9uKCl7cmV0dXJuIG8oKX0pLmxpc3RlbihlKX1jYXRjaCh0KXtvKCl9ZWxzZSBvKCl9KX0sbi5wcm90b3R5cGUuX3NlbmQ9ZnVuY3Rpb24oZSx0KXt0JiYoInVpOnRlc3RzOmFsbFJlc3VsdHNVcGRhdGVkIj09PWUudHlwZT8odC5fc29tZVJlc3VsdHNSZXNwb25zZVNlcU51bT0wLGUuc2VxPXQuX3NvbWVSZXN1bHRzUmVzcG9uc2VTZXFOdW0rKyk6InVpOnRlc3RzOnNvbWVSZXN1bHRzVXBkYXRlZCI9PT1lLnR5cGUmJihlLnNlcT10Ll9zb21lUmVzdWx0c1Jlc3BvbnNlU2VxTnVtKyspKSxpKCJPdXRnb2luZyBtZXNzYWdlICVzIixlLnR5cGUpO3ZhciBuPUpTT04uc3RyaW5naWZ5KGUpO3Q/dC5zZW5kKG4pOl8uZWFjaCh0aGlzLl9jb25uZWN0aW9ucyxmdW5jdGlvbihlKXtyZXR1cm4gZS5zZW5kKG4pfSl9LG4ucHJvdG90eXBlLl9maW5kRnJlZVBvcnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBRLmFsbChfLm1hcChjLGZ1bmN0aW9uKHQpe3JldHVybiBlLl9jaGVja1BvcnQodCl9KSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gXy5maW5kKGUsZnVuY3Rpb24oZSl7cmV0dXJuISFlfSl9KS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlfHxRLnJlamVjdChuZXcgRXJyb3IoIkNhbiBub3QgZmluZCBhIGZyZWUgcG9ydCIpKX0pfSxuLnByb3RvdHlwZS5fY2hlY2tQb3J0PWZ1bmN0aW9uKGUpe3ZhciB0PWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXt2YXIgaT1vLmNyZWF0ZVNlcnZlcigpLm9uY2UoImVycm9yIixmdW5jdGlvbih0KXtyZXR1cm4gbih0JiYiRUFERFJOT1RBVkFJTCI9PT10LmNvZGU/ZTowKX0pLm9uY2UoImxpc3RlbmluZyIsZnVuY3Rpb24oKXtyZXR1cm4gaS5vbmNlKCJjbG9zZSIsZnVuY3Rpb24oKXtyZXR1cm4gbihlKX0pLmNsb3NlKCl9KS5saXN0ZW4oZSx0KX19O3JldHVybiBRLnByb21pc2UodCgiMC4wLjAuMCIpKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBlP1EucHJvbWlzZSh0KCIxMjcuMC4wLjEiKSk6MH0pLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGU/US5wcm9taXNlKHQoIjo6MSIpKTowfSl9LG4ucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2UuX3dzcyYmZS5fd3NzLmNsb3NlKCksZS5faHR0cFNlcnZlciYmZS5faHR0cFNlcnZlci5jbG9zZSgpfSxufShFdmVudEVtaXR0ZXIpO3QuZXhwb3J0cz1ofSx7Ii4uL3NlcnZlci9kb2N1bWVudEluRWRpdG9yIjo3LGRlYnVnOnZvaWQgMCxodHRwOnZvaWQgMCxuZXQ6dm9pZCAwLHVybDp2b2lkIDAsd3M6dm9pZCAwfV0sMTk6W2Z1bmN0aW9uKGUsdCxuKXt2YXIgaT1lKCJwYXRoIiksYT0vXlxzKihcL1wqXCo/KC58XHI/XG4pKj9cKlwvKS8sbz0vXlxzKi8scj0vW1x1MDAxYlx1MDA5Yl1bWygpIzs/XSooPzpbMC05XXsxLDR9KD86O1swLTldezAsNH0pKik/WzAtOUEtUFJaY2YtbnFyeT0+PF0vZzt0LmV4cG9ydHM9e3JhbmRvbUlkOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLDUpfSxub29wVHJ1ZTpmdW5jdGlvbigpe3JldHVybiEwfSxub29wVHJ1ZVByb21pc2U6ZnVuY3Rpb24oKXtyZXR1cm4gUS5mY2FsbCh0aGlzLm5vb3BUcnVlKX0saXNQYXRjaDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmZS5sZW5ndGg+MiYmIkAiPT09ZVswXSYmIkAiPT09ZVsxXX0saXNMZXZlbFVwUmVsYXRpdmVQYXRoOmZ1bmN0aW9uKGUpe3JldHVybiBlJiYiLiI9PT1lWzBdJiYiLiI9PT1lWzFdfSxkb2NCbG9ja0NvbW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5tYXRjaChhKTtyZXR1cm4gdD90WzBdLnJlcGxhY2UobywiIil8fCIiOiIifSx0ZXh0SW5kZXhQb3NpdGlvbjpmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMudGV4dExpbmVzKGUsdCk7cmV0dXJue2xpbmU6bi5sZW5ndGgsY29sdW1uOm5bbi5sZW5ndGgtMV0ubGVuZ3RofX0sdGV4dExpbmVzOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9Xy5pc1VuZGVmaW5lZCh0KT9lOmUuc3Vic3RyKDAsdCksZS5zcGxpdCgvXHJcbnxccnxcbi8pfSx2ZXJpZnlMb2NhbE9yaWdpbjpmdW5jdGlvbih0LG4pe2lmKCF0KXJldHVybiEwO3ZhciBpPSExO3RyeXt2YXIgYT1lKCJ1cmwiKS5wYXJzZSh0KS5ob3N0bmFtZTtpPSJsb2NhbGhvc3QiPT09YXx8IjAuMC4wLjAiPT09YXx8IjEyNy4wLjAuMSI9PT1hfHwiOjoxIj09PWF9Y2F0Y2gobyl7fXJldHVybiBpfHxufHxjb25zb2xlLmVycm9yKCJ3YWxsYWJ5LmpzIHJlZnVzZWQgdG8gYWNjZXB0IGNvbm5lY3Rpb24gZnJvbSAiK3QpLGl9LHBhdGNoTW9kdWxlOmZ1bmN0aW9uKHQsbil7dmFyIGk9ZSgibW9kdWxlIikuTW9kdWxlLnByb3RvdHlwZSxhPWkucmVxdWlyZTtpLnJlcXVpcmU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT10P24oYS5iaW5kKHRoaXMpKTphLmNhbGwodGhpcyxlKX19LHJlcXVpcmVNb2R1bGVGcm9tOmZ1bmN0aW9uKHQsbil7dHJ5e3JldHVybiBlKGkuam9pbih0LCJub2RlX21vZHVsZXMiLG4pKX1jYXRjaChhKXt2YXIgbz1lKCJtb2R1bGUiKSxyPW5ldyBvKCIuIixudWxsKTtyZXR1cm4gci5maWxlbmFtZT1pLmpvaW4odCwid2FsbGFieS5qcyIpLHIucGF0aHM9by5fbm9kZU1vZHVsZVBhdGhzKHQpLG8uX2xvYWQobixyLCExKX19LHJlc29sdmVNb2R1bGVQYXRoRnJvbTpmdW5jdGlvbih0LG4pe3ZhciBhPWUoIm1vZHVsZSIpLG89bmV3IGEoIi4iLG51bGwpO3JldHVybiBvLmZpbGVuYW1lPWkuam9pbih0LCJ3YWxsYWJ5LmpzIiksby5wYXRocz1hLl9ub2RlTW9kdWxlUGF0aHModCksYS5fcmVzb2x2ZUZpbGVuYW1lKG4sbywhMSl9LG5vZGVNb2R1bGVQYXRoczpmdW5jdGlvbih0KXt2YXIgbj1lKCJtb2R1bGUiKTtyZXR1cm4gbi5fbm9kZU1vZHVsZVBhdGhzKHQpfSxwYXRjaEJhYmVsUmVzb2x2ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLm5vZGVNb2R1bGVQYXRocyhlKTt0aGlzLnBhdGNoTW9kdWxlKCJyZXNvbHZlIixmdW5jdGlvbihlKXt2YXIgbj1lKCJyZXNvbHZlIiksaT1uLnN5bmM7cmV0dXJuIG4uc3luYz1mdW5jdGlvbihlLG4pe3JldHVybn5lLmluZGV4T2YoImJhYmVsIikmJm4mJihhcmd1bWVudHNbMV0ucGF0aHM9KG4ucGF0aHN8fFtdKS5jb25jYXQodCkpLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxufSl9LGhhc0Fuc2k6ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJiJzdHJpbmciPT10eXBlb2YgZSYmZS5tYXRjaChyKX0scmVtb3ZlQW5zaTpmdW5jdGlvbihlKXtyZXR1cm4gZSYmInN0cmluZyI9PXR5cGVvZiBlP2UucmVwbGFjZShyLCIiKTplfSxjb3B5VG9DbGlwYm9hcmQ6ZnVuY3Rpb24odCl7dmFyIG49ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmNvbnNvbGUud2FybigiRmFpbGVkIHRvIGNvcHkgdG8gY2xpcGJvYXJkLiAiKyhlJiZlLm1lc3NhZ2UpKX07dHJ5e2UoImNvcHktcGFzdGUiKS5jb3B5KHQsbil9Y2F0Y2goaSl7bihpKX19fX0seyJjb3B5LXBhc3RlIjp2b2lkIDAsbW9kdWxlOnZvaWQgMCxwYXRoOnZvaWQgMCx1cmw6dm9pZCAwfV19LHt9LFsxXSk7