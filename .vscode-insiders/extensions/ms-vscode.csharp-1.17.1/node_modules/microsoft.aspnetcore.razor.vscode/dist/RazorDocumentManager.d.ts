import * as vscode from 'vscode';
import { IRazorDocument } from './IRazorDocument';
import { IRazorDocumentChangeEvent } from './IRazorDocumentChangeEvent';
import { RazorLanguageServerClient } from './RazorLanguageServerClient';
import { RazorLogger } from './RazorLogger';
export declare class RazorDocumentManager {
    private readonly serverClient;
    private readonly logger;
    private readonly razorDocuments;
    private onChangeEmitter;
    constructor(serverClient: RazorLanguageServerClient, logger: RazorLogger);
    readonly onChange: vscode.Event<IRazorDocumentChangeEvent>;
    readonly documents: IRazorDocument[];
    getDocument(uri: vscode.Uri): Promise<IRazorDocument>;
    getActiveDocument(): Promise<IRazorDocument | null>;
    initialize(): Promise<void>;
    register(): vscode.Disposable;
    private _getDocument;
    private openDocument;
    private closeDocument;
    private documentChanged;
    private addDocument;
    private removeDocument;
    private updateCSharpBuffer;
    private updateHtmlBuffer;
    private notifyDocumentChange;
    private ensureProjectedDocumentsOpen;
}
