import * as vscode from 'vscode';
import { ProvisionalCompletionOrchestrator } from './ProvisionalCompletionOrchestrator';
import { RazorDocumentManager } from './RazorDocumentManager';
import { RazorDocumentSynchronizer } from './RazorDocumentSynchronizer';
import { RazorLanguageFeatureBase } from './RazorLanguageFeatureBase';
import { RazorLanguageServiceClient } from './RazorLanguageServiceClient';
import { RazorLogger } from './RazorLogger';
export declare class RazorCompletionItemProvider extends RazorLanguageFeatureBase implements vscode.CompletionItemProvider {
    private readonly provisionalCompletionOrchestrator;
    private readonly logger;
    static getCompletions(projectedUri: vscode.Uri, hostDocumentPosition: vscode.Position, projectedPosition: vscode.Position, triggerCharacter: string | undefined): Promise<vscode.CompletionList | undefined>;
    constructor(documentSynchronizer: RazorDocumentSynchronizer, documentManager: RazorDocumentManager, serviceClient: RazorLanguageServiceClient, provisionalCompletionOrchestrator: ProvisionalCompletionOrchestrator, logger: RazorLogger);
    provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken, context: vscode.CompletionContext): Promise<vscode.CompletionList | undefined>;
}
