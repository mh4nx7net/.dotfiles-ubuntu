import * as vscode from 'vscode';
import { CSharpProjectedDocumentContentProvider } from './CSharp/CSharpProjectedDocumentContentProvider';
import { ProjectionResult } from './ProjectionResult';
import { RazorDocumentManager } from './RazorDocumentManager';
import { RazorLanguageServiceClient } from './RazorLanguageServiceClient';
import { RazorLogger } from './RazorLogger';
export declare class ProvisionalCompletionOrchestrator {
    private readonly documentManager;
    private readonly projectedCSharpProvider;
    private readonly serviceClient;
    private readonly logger;
    private provisionalDotsMayBeActive;
    private currentActiveDocument;
    constructor(documentManager: RazorDocumentManager, projectedCSharpProvider: CSharpProjectedDocumentContentProvider, serviceClient: RazorLanguageServiceClient, logger: RazorLogger);
    register(): vscode.Disposable;
    tryGetProvisionalCompletions(hostDocumentUri: vscode.Uri, projection: ProjectionResult, completionContext: vscode.CompletionContext): Promise<vscode.CompletionList | null | undefined>;
    private tryRemoveProvisionalDot;
}
