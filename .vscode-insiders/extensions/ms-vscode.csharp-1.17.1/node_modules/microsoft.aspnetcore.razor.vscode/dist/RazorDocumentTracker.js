"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const RazorDocumentChangeKind_1 = require("./RazorDocumentChangeKind");
class RazorDocumentTracker {
    constructor(razorDocumentManager, languageServiceClient) {
        this.razorDocumentManager = razorDocumentManager;
        this.languageServiceClient = languageServiceClient;
    }
    register() {
        const registration = this.razorDocumentManager.onChange(event => this.onDocumentChange(event));
        return registration;
    }
    onDocumentChange(event) {
        return __awaiter(this, void 0, void 0, function* () {
            if (event.kind === RazorDocumentChangeKind_1.RazorDocumentChangeKind.added) {
                yield this.languageServiceClient.addDocument(event.document.uri);
            }
            else if (event.kind === RazorDocumentChangeKind_1.RazorDocumentChangeKind.removed) {
                yield this.languageServiceClient.removeDocument(event.document.uri);
            }
        });
    }
}
exports.RazorDocumentTracker = RazorDocumentTracker;
//# sourceMappingURL=RazorDocumentTracker.js.map